#---------------------------------------------------------------------------*
#                                                                           *
#  semantics definitions for semantics component                            *
#                                                                           *
#  Copyright (C) 1997, ..., 2007 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics semanticsSemantics extends commonSemantics :
import semantics commonSemantics in "commonSemantics.gSemantics" ;

#---------------------------------------------------------------------------*
#                                                                           *
#  G A L G A S    A B S T R A C T  T Y P E                                  *
#                                                                           *
#---------------------------------------------------------------------------*

sortedlist @sortedTypeList ;
map @typeMap ;
mapindex @typeMapIndex ;

#---------------------------------------------------------------------------*

abstract class @ACGalgasType {
  method checkNoCircularity ??@uint unused inTypeCount :
  end method ;

  method enterInSortedList
    ?!@sortedTypeList unused ioSortedTypeList
    ??@typeMap unused inTypeMap
  :
  end method ;

  method generatePredeclarationInHeader
    ?!@string unused ioGeneratedUserZone3
  :
  end method ;

  method generateDeclaration_1_inHeader
    ?!@string unused ioGeneratedUserZone3
  :
  end method ;

  method generateDeclaration_2_inHeader
    ?!@string unused ioGeneratedUserZone3
  :
  end method ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  T Y P E   M A P                                                          *
#                                                                           *
#---------------------------------------------------------------------------*

map @typeMap {
  @ACGalgasType mType ;
  insert insertKey error message "the '@%K' type has been already declared in %L" ;
  search searchKey error message "the '@%K' type is not declared" ;
}

#---------------------------------------------------------------------------*

mapindex @typeMapIndex (@typeMap) {
  search searchKey error message "the '@%K' type is not declared" ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    S O R T E D     T Y P E    L I S T                                     *
#                                                                           *
#---------------------------------------------------------------------------*

sortedlist @sortedTypeList {
  @ACGalgasType mType ;
  @string mSortString ;
}{
  mSortString <
}

#---------------------------------------------------------------------------*
#                                                                           *
#    T Y P E    L I S T                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

list @typeList {
  @ACGalgasType mType ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  S I G N A T U R E                                                        *
#                                                                           *
#---------------------------------------------------------------------------*

list @signature {
  @typeMapIndex mAttributeTypeIndex ;
  @lstring mFormalArgumentName ;
  @formalArgumentPassingMode mFormalArgumentPassingMode ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  R O U T I N E   M A P                                                    *
#                                                                           *
#---------------------------------------------------------------------------*

map @routineMap {
  @signature mRoutineSignature ;
  insert insertKey error message "the '@%K' routine has been already declared in %L" ;
  search searchKey error message "the '@%K' routine is not declared" ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  A T T R I B U T E    L I S T                                             *
#                                                                           *
#---------------------------------------------------------------------------*

list @attributeList {
  @typeMapIndex mAttributeTypeIndex ;
  @lstring mAttributeName ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L O C A T I O N    T Y P E                                               *
#                                                                           *
#---------------------------------------------------------------------------*

class @locationGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  S T R I N G    T Y P E                                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @stringGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  C H A R    T Y P E                                                       *
#                                                                           *
#---------------------------------------------------------------------------*

class @charGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  B O O L    T Y P E                                                       *
#                                                                           *
#---------------------------------------------------------------------------*

class @boolGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  U I N T    T Y P E                                                       *
#                                                                           *
#---------------------------------------------------------------------------*

class @uintGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  S I N T    T Y P E                                                       *
#                                                                           *
#---------------------------------------------------------------------------*

class @sintGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  U I N T 6 4    T Y P E                                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @uint64GalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  S I N T 6 4    T Y P E                                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @sint64GalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  D O U B L E    T Y P E                                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @doubleGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L S T R I N G    T Y P E                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

class @lstringGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L C H A R    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @lcharGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L B O O L    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @lboolGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L U I N T    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @luintGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L S I N T    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @lsintGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L U I N T 6 4    T Y P E                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

class @luint64GalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L S I N T 6 4    T Y P E                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

class @lsint64GalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  L D O U B L E    T Y P E                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

class @ldoubleGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  S T R I N G S E T    T Y P E                                             *
#                                                                           *
#---------------------------------------------------------------------------*

class @stringsetGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  B I N A R Y S E T    T Y P E                                             *
#                                                                           *
#---------------------------------------------------------------------------*

class @binarysetGalgasType extends @ACGalgasType {
}

#---------------------------------------------------------------------------*
#                                                                           *
#  C L A S S    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

list @classMethodList {
  @lstring mMethodName ;
  @signature mMethodSignature ;
}

#---------------------------------------------------------------------------*

class @classGalgasType extends @ACGalgasType {
  @bool mIsAbstract ;
  @lstring mClassName ;
  @typeMapIndex mSuperClassIndex ;
  @attributeList mAttributeList ;
  @classMethodList mMethodList ;

  override
  method checkNoCircularity ??@uint inTypeCount :
    @string classPath := [mClassName string] ;
    @stringset superClassSet [setWithString ![mClassName string]] ;
    @typeMapIndex superClassIndex := mSuperClassIndex ;
    @bool circularityError := false ;
    @bool ok := true ;
    loop inTypeCount :
    while [superClassIndex isRegular] & ok & not circularityError do
      if [superClassIndex isSolved] then
      #--- Retrieve super class features
        @lstring superClassName ;
        @ACGalgasType t ;
        [superClassIndex searchKey ?superClassName ?t] ;
      #--- Check there is no circularity
        circularityError := [superClassSet hasKey ![superClassName string]] ;
        superClassSet += ![superClassName string] ;
        classPath .= "." .  [superClassName string] ;
      #--- Check super class is actually a class, and get super super class info.
        @typeMapIndex superSuperClassIndex ;
        cast t :
        when >= @classGalgasType kClassType do
          superSuperClassIndex := [kClassType mSuperClassIndex] ;
        else
          error mClassName: "this class inherits from @"
            . superClassName . ", but @" . superClassName . " is not a class"
            -> superSuperClassIndex
          ;
        end cast ;
        superClassIndex := superSuperClassIndex ;
      else
        ok := false ;
        @string superClassName := [[superClassIndex key] string] ;
        error mClassName: "this class inherits from @"
          . superClassName . ", but @" . superClassName . " does not exist"
        ;
      end if ;
    end loop ;
  #--- Circularity error
    if circularityError then
      error mClassName:
        "inheritance circularity for class '"
      . [mClassName string] . "': "
      . [classPath stringByReplacingStringByString !"." !" extends "] ;
    end if ;
  end method ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#  E N T I T Y    T Y P E                                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @entityGalgasType extends @ACGalgasType {
  @bool mIsAbstract ;
  @lstring mEntityName ;
  @typeMapIndex mSuperEntityIndex ;
  @attributeList mPropertyList ;

#-----------------------

  override
  method checkNoCircularity ??@uint inTypeCount :
    @string entityPath := [mEntityName string] ;
    @stringset superEntitySet [setWithString ![mEntityName string]] ;
    @typeMapIndex superEntityIndex := mSuperEntityIndex ;
    @bool circularityError := false ;
    @bool ok := true ;
    loop inTypeCount :
    while [superEntityIndex isRegular] & ok & not circularityError do
      if [superEntityIndex isSolved] then
      #--- Retrieve super class features
        @lstring superEntityName ;
        @ACGalgasType t ;
        [superEntityIndex searchKey ?superEntityName ?t] ;
      #--- Check there is no circularity
        circularityError := [superEntitySet hasKey ![superEntityName string]] ;
        superEntitySet += ![superEntityName string] ;
        entityPath .= "." .  [superEntityName string] ;
      #--- Check super class is actually a class, and get super super class info.
        @typeMapIndex superSuperEntityIndex ;
        cast t :
        when >= @entityGalgasType kClassType do
          superSuperEntityIndex := [kClassType mSuperEntityIndex] ;
        else
          error mEntityName: "this entity inherits from @"
            . superEntityName . ", but @" . superEntityName . " is not a class"
            -> superSuperEntityIndex
          ;
        end cast ;
        superEntityIndex := superSuperEntityIndex ;
      else
        ok := false ;
        @string superEntityName := [[superEntityIndex key] string] ;
        error mEntityName: "this entity inherits from @"
          . superEntityName . ", but @" . superEntityName . " does not exist"
        ;
      end if ;
    end loop ;
  #--- Circularity error
    if circularityError then
      error mEntityName:
        "inheritance circularity for entity '"
      . [mEntityName string] . "': "
      . [entityPath stringByReplacingStringByString !"." !" extends "] ;
    end if ;
  end method ;

#-----------------------

  override
  method enterInSortedList
    ?!@sortedTypeList ioSortedTypeList
    ??@typeMap inTypeMap
  :
    @string sortDescriptor := [mEntityName string] ;
    @typeMapIndex entityIndex := mSuperEntityIndex ;
    loop [inTypeMap count] :
    while [entityIndex isRegular] do
      @lstring superEntityName ;
      @ACGalgasType superType ;
      [entityIndex searchKey ?superEntityName ?superType] ;
      sortDescriptor := [superEntityName string] . "." . sortDescriptor ;
      cast superType :
      when >= @entityGalgasType kClassType do
        entityIndex := [kClassType mSuperEntityIndex] ;
      else
        error mEntityName: "this entity inherits from @"
          . superEntityName . ", but @" . superEntityName . " is not a class"
        ;
      end cast ;
    end loop ;
    ioSortedTypeList += !self !sortDescriptor ;
  end method ;

#-----------------------

  override
  method generatePredeclarationInHeader
    ?!@string ioGeneratedUserZone3
  :
    ioGeneratedUserZone3 .=
      "class GGS__list_" . mEntityName . " ;\n"
    . "class GGS_" . mEntityName . " ;\n"
    . "class cPtr_" . mEntityName . " ;\n"
    ;
  end method ;

#-----------------------
  override
  method generateDeclaration_1_inHeader
    ?!@string ioGeneratedUserZone3
  :
  ioGeneratedUserZone3 .= [@string CppTitleComment !"GALGAS entity '@" . mEntityName . "'"]
  . "class GGS_" . mEntityName . " : public " ;
  if [mSuperEntityIndex isRegular] then
    ioGeneratedUserZone3 .= "GGS_" . [mSuperEntityIndex key] ;
  else
    ioGeneratedUserZone3 .= " AC_galgas_entity" ;
  end if ;
  ioGeneratedUserZone3 .= " {\n" ;
  if not mIsAbstract then
    ioGeneratedUserZone3 .= "//--- 'new' constructor\n"
    . "  public : static GGS_" . mEntityName . " constructor_new (C_Compiler & inLexique" ;
    @uint n := 0 ;
    foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
      ioGeneratedUserZone3 .= ",\n"
      . "                                const GGS_" . [attributeTypeIndex key]
      . " & argument_" . [n string] ;
      n ++ ;
    end foreach ;
    ioGeneratedUserZone3 .= "\n"
    . "                                COMMA_LOCATION_ARGS) ;\n\n" ;
  end if ;
  ioGeneratedUserZone3 .= "//--- getPtr\n"
  . "  public : inline cPtr_" . mEntityName . " * getPtr (void) const {\n"
  . "    return (cPtr_" . mEntityName . " *) mPointer ;\n"
  . "  }\n\n"
  . "//--- 'description' reader\n"
  . "  public : virtual const char * actualTypeName (void) const ;\n\n"
  . "//--- Readers\n" ;
  foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
    ioGeneratedUserZone3 .= "  public : GGS_" . [attributeTypeIndex key]
    . " reader_" . attributeName  . " (C_Compiler & inLexique COMMA_LOCATION_ARGS) const ;\n" ;
  end foreach ;
  ioGeneratedUserZone3 .= "\n"
  . "//--- operator ()\n"
  . "  #ifndef DO_NOT_GENERATE_CHECKINGS\n"
  . "    public : cPtr_" . mEntityName . " * operator () (LOCATION_ARGS) const ;\n"
  . "  #else\n"
  . "    public : inline cPtr_" . mEntityName . " * operator () (void) const {\n"
  . "      return (cPtr_" . mEntityName . " *) mPointer ;\n"
  . "    }\n"
  . "  #endif\n"
  . "} ;\n\n" ;
  ioGeneratedUserZone3 .= [@string CppTitleComment !"GALGAS list of entity '@" . mEntityName . "'"]
  . "class GGS__list_" . mEntityName . " : public AC_galgas_list {\n"
  . "  public : typedef cPtr_" . mEntityName . " element_type ;\n"
  . "//--- Constructor 'emptyList'\n"
  . "  public : static GGS__list_" . mEntityName . " constructor_emptyList (C_Compiler & inLexique COMMA_LOCATION_ARGS) ;\n"
  . "  public : static GGS__list_" . mEntityName . " constructor_listWithValue (C_Compiler & _inLexique" ;
  @uint n := 0 ;
  foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
    ioGeneratedUserZone3 .= ",\n"
    . "                                const GGS_" . [attributeTypeIndex key]
    . " & argument_" . [n string] ;
    n ++ ;
  end foreach ;
  ioGeneratedUserZone3 .= "\n"
  . "                                COMMA_LOCATION_ARGS) ;\n\n"
  . "//--- Get first object\n"
  . "  public : inline element_type * firstObject (void) const {\n"
  . "    return (element_type *) internalFirstObject () ;\n"
  . "  }\n\n"
  . "//--- Get last object\n"
  . "  public : inline element_type * lastObject (void) const {\n"
  . "    return (element_type *) internalLastObject () ;\n"
  . "  }\n\n"
  . "//--- Operator () used for method call\n"
  . "  public : inline const GGS__list_" . mEntityName . " * operator () (UNUSED_LOCATION_ARGS) const {\n"
  . "    return this ;\n"
  . "  }\n\n"
  . "//--- Handling '+=' GALGAS operator\n"
  . "  public : void _addAssign_operation (const GGS_" . mEntityName . " & inElement) ;\n\n"
  . "//--- Handling '.' GALGAS operator\n"
  . "  public : GGS__list_" . mEntityName . " _operator_concat (const GGS__list_" . mEntityName . " & inOperand) const ;\n\n"
  . "//--- Handling 'prependValue' GALGAS modifier\n"
  . "  public : void modifier_prependValue (C_Compiler & _inLexique" ;
  n := 0 ;
  foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
    ioGeneratedUserZone3 .= ",\n"
    . "                                const GGS_" . [attributeTypeIndex key]
    . " & argument_" . [n string] ;
    n ++ ;
  end foreach ;
  ioGeneratedUserZone3 .= "\n"
  . "                                COMMA_LOCATION_ARGS) ;\n\n"
  . "//--- Internal Methods\n"
  . "  protected : void _internalAppendValues (" ;
  n := 0 ;
  foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
    if n > 0 then
      ioGeneratedUserZone3 .= ",\n"
      . "                                " ;
    end if ;
    ioGeneratedUserZone3 .= "const GGS_" . [attributeTypeIndex key]
    . " & argument_" . [n string] ;
    
    n ++ ;
  end foreach ;
  ioGeneratedUserZone3 .= ") ;\n\n"
  . "  protected : void _internalPrependValues (" ;
  n := 0 ;
  foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
    if n > 0 then
      ioGeneratedUserZone3 .= ",\n"
      . "                                " ;
    end if ;
    ioGeneratedUserZone3 .= "const GGS_" . [attributeTypeIndex key]
    . " & argument_" . [n string] ;
    
    n ++ ;
  end foreach ;
  ioGeneratedUserZone3 .= ") ;\n\n"
  . "//--- List Insulation\n"
  . "  protected : void _insulateList (void) ;\n\n"
  . "//--- 'description' reader\n"
  . "  public : GGS_string\n"
  . "  reader_description (C_Compiler & _inLexique\n"
  . "                      COMMA_LOCATION_ARGS,\n"
  . "                      const sint32 inIndentation = 0) const ;\n\n"
  . "//--- Metamodel Add method\n"
  . "  public : void _addModel (const GGS_" . mEntityName . " & inOperand) ;\n"
  . "} ;\n\n" ;
  end method ;

#-----------------------
  override
  method generateDeclaration_2_inHeader
    ?!@string ioGeneratedUserZone3
  :
    ioGeneratedUserZone3 .= [@string CppTitleComment !"Element of list '@" . mEntityName . "'"]
    . "class cPtr_" . mEntityName . " : public " ;
    if [mSuperEntityIndex isRegular] then
      ioGeneratedUserZone3 .= "cPtr_" . [mSuperEntityIndex key] ;
    else
      ioGeneratedUserZone3 .= " C_GGS_MetamodelEntity" ;
    end if ;
    ioGeneratedUserZone3 .= " {\n"
    . "//--- Attributes\n" ;
    foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
      ioGeneratedUserZone3 .= "  public : GGS_" . [attributeTypeIndex key]
      . " " . attributeName . " ;\n" ;
    end foreach ;
    ioGeneratedUserZone3 .= "\n"
    . "//--- Constructor\n"
    . "  public : cPtr_" . mEntityName . " (" ;
    if [mPropertyList length] == 0 then
      ioGeneratedUserZone3 .= "LOCATION_ARGS" ;
    else
      @uint n := 0 ;
      foreach mPropertyList (@typeMapIndex attributeTypeIndex @lstring attributeName) :
        if n > 0 then
          ioGeneratedUserZone3 .= ",\n"
          . "                                " ;
        end if ;
        ioGeneratedUserZone3 .= "const GGS_" . [attributeTypeIndex key]
        . " & argument_" . [n string] ;
        n ++ ;
      end foreach ;
      ioGeneratedUserZone3 .= "\n"
      . "                                COMMA_LOCATION_ARGS" ;
    end if ;
    ioGeneratedUserZone3 .= ") ;\n\n"
    . "//--- Access to next\n"
    . "  public : inline cPtr_" . mEntityName . " * nextObject (void) const {\n"
    . "    return (cPtr_" . mEntityName . " *) internalNextItem () ;\n"
    . "  }\n\n"
    . "//--- Access to previous\n"
    . "  public : inline cPtr_" . mEntityName . " * previousObject (void) const {\n"
    . "    return (cPtr_" . mEntityName . " *) internalPreviousItem () ;\n"
    . "  }\n\n"
    . "//--- Element comparison\n"
    . "  public : virtual bool isEqualToObject (const cListElement * inOperand) const ;\n\n"
    . "//--- Method used for description\n"
    . "  public : virtual void\n"
    . "  appendForDescription (C_Compiler & _inLexique,\n"
    . "                        C_String & ioString,\n"
    . "                        const sint32 inIndentation\n"
    . "                        COMMA_LOCATION_ARGS) const ;\n\n"
    . "//--- Metamodel Component Index\n"
    . "  public : virtual sint32 _metamodelComponentIndex (const sint32 inLevel) const ;\n\n"
    . "//--- Metamodel Component Name\n"
    . "  public : virtual const char * _metamodelComponentName (const sint32 inLevel) const ;\n"
    . "//--- Metamodel Class ID\n"
    . "  public : virtual sint32 _metamodelClassID (const sint32 inLevel) const ;\n\n"
    . "//--- Metamodel Class Name\n"
    . "  public : virtual const char * _metamodelClassName (const sint32 inLevel) const ;\n\n"
    . "//--- 'clone' virtual method\n"
    . "  public : virtual cPtr_" . mEntityName . " * _cloneObject (void) const ;\n\n"
    . "//--- Friend class declarations\n"
    . "  friend class GGS__list_" . mEntityName . " ;\n"
    . "} ;\n\n" ;
  end method ;

#-----------------------
}

#---------------------------------------------------------------------------*
#                                                                           *
#  M U L T I P L E    R E F E R E N C E    T Y P E                          *
#                                                                           *
#---------------------------------------------------------------------------*

class @multipleReferenceGalgasType extends @ACGalgasType {
  @lstring mEntityName ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    L I S T    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @listGalgasType extends @ACGalgasType {
  @lstring mListTypeName ;
  @attributeList mAttributeList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    S O R T E D    L I S T    T Y P E                                      *
#                                                                           *
#---------------------------------------------------------------------------*

list @sortDescriptorList {
  @lstring mAttributeName ;
  @bool mAscending ;
}
#---------------------------------------------------------------------------*

class @sortedlistGalgasType extends @ACGalgasType {
  @lstring mListTypeName ;
  @attributeList mAttributeList ;
  @sortDescriptorList mSortDescriptorList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A P    I N D E X    T Y P E                                          *
#                                                                           *
#---------------------------------------------------------------------------*

class @mapindexType extends @ACGalgasType {
  @lstring mMapIndexName ;
  @typeMapIndex mMapTypeIndex ;
  @lstring mSearchMethodName ;
  @lstring mSearchMethodErrorMessage ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A P   T Y P E                                                        *
#                                                                           *
#---------------------------------------------------------------------------*

class @mapType extends @ACGalgasType {
  @lstring mMapTypeName ;
  @attributeList mAttributeList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    E N U M    T Y P E                                                     *
#                                                                           *
#---------------------------------------------------------------------------*

class @enumType extends @ACGalgasType {
  @lstring mEnumTypeName ;
  @lstringlist mConstantList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    C O N S T R U C T    B U I L T I N     T Y P E    M A P                *
#                                                                           *
#---------------------------------------------------------------------------*

routine constructBuiltinTypeMap
  !@typeMap outTypeMap
:
  outTypeMap := [@typeMap emptyMap] ;
#--- Enter builtin type
  [!?outTypeMap insertKey ![@lstring new !"string"    !here] ![@stringGalgasType    new]] ;
  [!?outTypeMap insertKey ![@lstring new !"char"      !here] ![@charGalgasType      new]] ;
  [!?outTypeMap insertKey ![@lstring new !"bool"      !here] ![@boolGalgasType      new]] ;
  [!?outTypeMap insertKey ![@lstring new !"uint"      !here] ![@uintGalgasType      new]] ;
  [!?outTypeMap insertKey ![@lstring new !"sint"      !here] ![@sintGalgasType      new]] ;
  [!?outTypeMap insertKey ![@lstring new !"uint64"    !here] ![@uint64GalgasType    new]] ;
  [!?outTypeMap insertKey ![@lstring new !"sint64"    !here] ![@sint64GalgasType    new]] ;
  [!?outTypeMap insertKey ![@lstring new !"double"    !here] ![@doubleGalgasType    new]] ;
  [!?outTypeMap insertKey ![@lstring new !"lstring"   !here] ![@lstringGalgasType   new]] ;
  [!?outTypeMap insertKey ![@lstring new !"lchar"     !here] ![@lcharGalgasType     new]] ;
  [!?outTypeMap insertKey ![@lstring new !"lbool"     !here] ![@lboolGalgasType     new]] ;
  [!?outTypeMap insertKey ![@lstring new !"luint"     !here] ![@luintGalgasType     new]] ;
  [!?outTypeMap insertKey ![@lstring new !"lsint"     !here] ![@lsintGalgasType     new]] ;
  [!?outTypeMap insertKey ![@lstring new !"luint64"   !here] ![@luint64GalgasType   new]] ;
  [!?outTypeMap insertKey ![@lstring new !"lsint64"   !here] ![@lsint64GalgasType   new]] ;
  [!?outTypeMap insertKey ![@lstring new !"ldouble"   !here] ![@ldoubleGalgasType   new]] ;
  [!?outTypeMap insertKey ![@lstring new !"binaryset" !here] ![@binarysetGalgasType new]] ;
  [!?outTypeMap insertKey ![@lstring new !"stringset" !here] ![@stringsetGalgasType new]] ;
  [!?outTypeMap insertKey ![@lstring new !"location"  !here] ![@locationGalgasType  new]] ;
#--- @lstringlist type
  @attributeList lstringAttribute [emptyList] ;
  @typeMapIndex lstringIndex ;
  [@typeMapIndex makeRegularIndex ![@lstring new !"lstring" !here] !?outTypeMap ?lstringIndex] ;
  lstringAttribute += !lstringIndex ![@lstring new !"mValue" !here] ;
  @lstring lstringlist [new !"lstringlist" !here] ;
  [!?outTypeMap insertKey !lstringlist ![@listGalgasType new !lstringlist !lstringAttribute]] ;
#--- @stringlist type
  @attributeList stringAttribute [emptyList] ;
  @typeMapIndex stringIndex ;
  [@typeMapIndex makeRegularIndex ![@lstring new !"string" !here] !?outTypeMap ?stringIndex] ;
  stringAttribute += !stringIndex ![@lstring new !"mValue" !here] ;
  @lstring stringlist [new !"stringlist" !here] ;
  [!?outTypeMap insertKey !stringlist ![@listGalgasType new !stringlist !stringAttribute]] ;
#--- @uint64list type
  @attributeList uint64Attribute [emptyList] ;
  @typeMapIndex uint64Index ;
  [@typeMapIndex makeRegularIndex ![@lstring new !"uint64" !here] !?outTypeMap ?uint64Index] ;
  uint64Attribute += !uint64Index ![@lstring new !"mValue" !here] ;
  @lstring uint64list [new !"uint64list" !here] ;
  [!?outTypeMap insertKey !uint64list ![@listGalgasType new !uint64list !uint64Attribute]] ;
end routine ;

#---------------------------------------------------------------------------*

end semantics ;
