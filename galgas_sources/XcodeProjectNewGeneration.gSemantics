semantics XcodeProjectNewGeneration :

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addICNS_file
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mICNS_fileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addTIFF_file
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mTIFF_fileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addInfoPlistFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mInfoPlistFileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addXIBFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mXIB_fileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addFrameworkFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mFrameworkFileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addMFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  m_M_FileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addMMFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  m_MM_FileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addCppFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mCppFileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addHeaderFile
  ??fileName:@string inFileName
  !fileRef:@string outFileRef
:
  [!?self getReferenceKey ?ref:outFileRef] ;
  mHeaderFileList += !outFileRef !inFileName ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addBuildFile
  ??fileRef:@string inFileReference
  ??fileName:@string inFileName
  !buildRef:@string outBuildRef
:
  [!?self getReferenceKey ?ref:outBuildRef] ;
  mBuildFileList += !inFileReference !inFileName !outBuildRef ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addToolTarget
  ??targetName:@string inTargetName
  ??productFileName:@string inProductFileName
  ??sources:@stringlist inSourceList
  ??frameworkRefs:@stringlist inToolFrameworksFileRefList
  ??buildConfigurationSettingList:@stringlist inBuildConfigurationSettingList
  !targetRef:@string outTargetRef
  !productFileRef:@string outProductFileRef
:
  [!?self getReferenceKey ?ref:outProductFileRef] ;
  [!?self getReferenceKey ??ref:buildPhaseRef] ;
  [!?self getReferenceKey ?ref:outTargetRef] ;
  [!?self getReferenceKey ??ref:buildConfigurationListRef] ;
  [!?self getReferenceKey ??ref:buildConfigurationRef] ;
  [!?self getReferenceKey ??ref:frameworkBuildRef] ;
  mToolTargetList +=
    !outTargetRef
    !inTargetName
    !outProductFileRef
    !inProductFileName
    !inSourceList
    !buildPhaseRef
    !buildConfigurationListRef
    !inBuildConfigurationSettingList
    !buildConfigurationRef
    !inToolFrameworksFileRefList
    !frameworkBuildRef
  ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addAppTarget
  ??targetName:@string inTargetName
  ??productFileName:@string inProductFileName
  ??sources:@stringlist inSourceList
  ??frameworkFileRefs:@stringlist inFrameworksFileRefList
  ??resourceFileRefs:@stringlist inResourceFileBuildRefs
  ??buildConfigurationSettingList:@stringlist inBuildConfigurationSettingList
  ??dependantTargetList:@stringlist inDependentTargetRefList
  ??productCopyList:@2stringlist inProductCopyList
  !productFileRef:@string outProductFileRef
:
  [!?self getReferenceKey ?ref:outProductFileRef] ;
  [!?self getReferenceKey ??ref:buildPhaseRef] ;
  [!?self getReferenceKey ??ref:targetRef] ;
  [!?self getReferenceKey ??ref:buildConfigurationListRef] ;
  [!?self getReferenceKey ??ref:buildConfigurationRef] ;
  [!?self getReferenceKey ??ref:frameworkBuildRef] ;
  [!?self getReferenceKey ??ref:resourceBuildRef] ;
  @2stringlist dependentTargets := {} ;
  for (ref) in inDependentTargetRefList do
    [!?self getReferenceKey ??ref:dependencyBuildRef] ;
    dependentTargets += !dependencyBuildRef !ref ;
  end for ;
  @stringlist resourceFileBuildRefs := inResourceFileBuildRefs ;
  for (ref name) in inProductCopyList do
    [!?self addBuildFile !fileRef:ref !fileName:name ??buildRef:@string buildRef] ;
    resourceFileBuildRefs += !buildRef ;
  end for ;
  mAppTargetList +=
    !targetRef
    !inTargetName
    !outProductFileRef
    !inProductFileName
    !inSourceList
    !buildPhaseRef
    !buildConfigurationListRef
    !inBuildConfigurationSettingList
    !buildConfigurationRef
    !inFrameworksFileRefList
    !frameworkBuildRef
    !dependentTargets
    !resourceBuildRef
    !resourceFileBuildRefs
  ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addGroup
  ??groupName:@string inGroupName
  ??groupPath:@string inGroupPath
  ??childrenRefs:@stringlist inChildrenRefs
  !groupRef:@string outGroupRef
:
  if mDefaultConfigurationRef == "" then
    [!?self getReferenceKey ?ref:mDefaultConfigurationRef] ;
  end if ;
  if mProjectBuildConfigurationRef == "" then
    [!?self getReferenceKey ?ref:mProjectBuildConfigurationRef] ;
  end if ;
  if mMainGroupReference == "" then
    [!?self getReferenceKey ?ref:mMainGroupReference] ;
  end if ;
  [!?self getReferenceKey ?ref:outGroupRef] ;
  mGroupList += !outGroupRef !inGroupName !inGroupPath !inChildrenRefs ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addGroupWithFiles
  ??groupName:@string inGroupName
  ??groupPath:@string inGroupPath
  ??fileNames:@stringset inFileNames
  ?!cppFileRefs:@stringlist ioCppFileBuildRefs
  ?!mFileRefs:@stringlist ioMFileBuildRefs
  ?!mmFileRefs:@stringlist ioMMFileBuildRefs
  ?!frameworkFileRefs:@stringlist ioFrameWorkFileBuildRefs
  ?!resourceFileRefs:@stringlist ioResourceFileBuildRefs
  !groupRef:@string outGroupRef
:
  if mDefaultConfigurationRef == "" then
    [!?self getReferenceKey ?ref:mDefaultConfigurationRef] ;
  end if ;
  if mProjectBuildConfigurationRef == "" then
    [!?self getReferenceKey ?ref:mProjectBuildConfigurationRef] ;
  end if ;
  if mMainGroupReference == "" then
    [!?self getReferenceKey ?ref:mMainGroupReference] ;
  end if ;
  [!?self getReferenceKey ?ref:outGroupRef] ;
#---
  @stringlist childrenRefs := {} ;
  for (f) in inFileNames do
    if [f pathExtension] == "cpp" then
      [!?self addCppFile !fileName:f ??fileRef:@string cppFileRef] ;
      childrenRefs += !cppFileRef ;
      [!?self addBuildFile !fileRef:cppFileRef !fileName:f ??buildRef:@string buildRef] ;
      ioCppFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "h" then
      [!?self addHeaderFile !fileName:f ??fileRef:@string headerFileRef] ;
      childrenRefs += !headerFileRef ;
    elsif [f pathExtension] == "m" then
      [!?self addMFile !fileName:f ??fileRef:@string m_FileRef] ;
      [!?self addBuildFile !fileRef:m_FileRef !fileName:f ??buildRef:@string buildRef] ;
      childrenRefs += !m_FileRef ;
      ioMFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "mm" then
      [!?self addMMFile !fileName:f ??fileRef:@string m_FileRef] ;
      [!?self addBuildFile !fileRef:m_FileRef !fileName:f ??buildRef:@string buildRef] ;
      childrenRefs += !m_FileRef ;
      ioMMFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "framework" then
      [!?self addFrameworkFile !fileName:f ??fileRef:@string framework_FileRef] ;
      [!?self addBuildFile !fileRef:framework_FileRef !fileName:f ??buildRef:@string buildRef] ;
      childrenRefs += !framework_FileRef ;
      ioFrameWorkFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "plist" then
      [!?self addInfoPlistFile !fileName:f ??fileRef:@string resource_FileRef] ;
      childrenRefs += !resource_FileRef ;
    elsif [f pathExtension] == "xib" then
      [!?self addXIBFile !fileName:f ??fileRef:@string resource_FileRef] ;
      childrenRefs += !resource_FileRef ;
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ??buildRef:@string buildRef] ;
      ioResourceFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "tiff" then
      [!?self addTIFF_file !fileName:f ??fileRef:@string resource_FileRef] ;
      childrenRefs += !resource_FileRef ;
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ??buildRef:@string buildRef] ;
      ioResourceFileBuildRefs += !buildRef ;
    elsif [f pathExtension] == "icns" then
      [!?self addICNS_file !fileName:f ??fileRef:@string resource_FileRef] ;
      childrenRefs += !resource_FileRef ;
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ??buildRef:@string buildRef] ;
      ioResourceFileBuildRefs += !buildRef ;
    else
      error [@location nowhere] : "unhandled extension for file '" + f + "'" ;
    end if ;
  end for ;
  mGroupList += !outGroupRef !inGroupName !inGroupPath !childrenRefs ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor placeGroupAsMainGroup
  ??groupRef:@string inGroupRef
:
  mMainGroupChildrenRefs += !inGroupRef ;
end modifier ;

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor addSettingsToDefaultConfiguration
  ??settingList:@stringlist inSettingList
:
  mDefaultConfigurationSettingList += inSettingList ;
end modifier ;

#---------------------------------------------------------------------------*

list @XCodeGroupList {
  @string mGroupReference ;
  @string mGroupName ;
  @string mGroupPath ;
  @stringlist mChildrenRefs ;
}

#---------------------------------------------------------------------------*

list @XCodeToolTargetList {
  @string mTargetRef ;
  @string mTargetName ;
  @string mProductFileReference ;
  @string mProductFileName ;
  @stringlist mBuildPhaseRefList ;
  @string mBuildPhaseRef ;
  @string mBuildConfigurationListRef ;
  @stringlist mBuildConfigurationSettingList ;
  @string mBuildConfigurationRef ;
  @stringlist mFrameworksFileRefList ;
  @string mFrameworkBuildPhaseRef ;
}

#---------------------------------------------------------------------------*

list @XCodeAppTargetList {
  @string mTargetRef ;
  @string mTargetName ;
  @string mProductFileReference ;
  @string mProductFileName ;
  @stringlist mBuildPhaseRefList ;
  @string mBuildPhaseRef ;
  @string mBuildConfigurationListRef ;
  @stringlist mBuildConfigurationSettingList ;
  @string mBuildConfigurationRef ;
  @stringlist mFrameworksFileRefList ;
  @string mFrameworkBuildPhaseRef ;
  @2stringlist mDependentTargets ;
  @string mResourceBuildRef ;
  @stringlist mResourceFileBuildRefs ;
}

#---------------------------------------------------------------------------*

list @BuildFileList {
  @string mFileReference ;
  @string mFileName ;
  @string mBuildReference ;
}

#---------------------------------------------------------------------------*

modifier @XcodeProjectDescriptor getReferenceKey
  !ref:@string outRef
:
  if mProjectObjectReference == "" then
    mProjectObjectReference := [[[mSequenceNumber string] md5] rightSubString!24] ;
    mSequenceNumber ++ ;
  end if ;
  outRef := [[[mSequenceNumber string] md5] rightSubString!24] ;
  mSequenceNumber ++ ;
end modifier ;

#---------------------------------------------------------------------------*

struct @XcodeProjectDescriptor {
  local @uint mSequenceNumber ;
  local @string mMainGroupReference ;
  local @stringlist mMainGroupChildrenRefs ;
  local @string mProjectObjectReference ;
  local @XCodeGroupList mGroupList ;
  local @XCodeToolTargetList mToolTargetList ;
  local @XCodeAppTargetList mAppTargetList ;
  local @2stringlist mCppFileList ;
  local @2stringlist m_M_FileList ;
  local @2stringlist m_MM_FileList ;
  local @2stringlist mFrameworkFileList ;
  local @2stringlist mHeaderFileList ;
  local @BuildFileList mBuildFileList ;
#--- Default configuration
  local @string mDefaultConfigurationRef ;
  local @stringlist mDefaultConfigurationSettingList ;
  local @string mProjectBuildConfigurationRef ;
#--- Resource files
  local @2stringlist mInfoPlistFileList ;
  local @2stringlist mXIB_fileList ;
  local @2stringlist mTIFF_fileList ;
  local @2stringlist mICNS_fileList ;
}

#---------------------------------------------------------------------------*

local filewrapper xcodeProjectGenerationFilewrapper in "../generation_templates/target_generation/project_xcode" {
}{
}{
  template xcodeproj "project.pbxproj.galgasTemplate"
    ?@string PROJECT_REF
    ?@string MAIN_GROUP_REF
    ?@XCodeGroupList GROUPS
    ?@stringlist MAIN_GROUP_CHILDREN_REFS
    ?@XCodeToolTargetList TOOL_TARGET_LIST
    ?@XCodeAppTargetList APP_TARGET_LIST
    ?@2stringlist CPP_FILE_LIST
    ?@2stringlist M_FILE_LIST
    ?@2stringlist MM_FILE_LIST
    ?@2stringlist FRAMEWORK_FILE_LIST
    ?@2stringlist HEADER_FILE_LIST
    ?@2stringlist PLIST_FILE_LIST
    ?@2stringlist TIFF_FILE_LIST
    ?@2stringlist ICNS_FILE_LIST
    ?@2stringlist XIB_FILE_LIST
    ?@BuildFileList BUILD_FILE_LIST
    ?@string DEFAULT_CONFIGURATION_REF
    ?@stringlist DEFAULT_CONFIGURATION_SETTING_LIST
    ?@string PROJECT_BUILD_DEFAULT_CONFIGURATION_REF
  ;
}

#---------------------------------------------------------------------------*

method @XcodeProjectDescriptor generateAtPath
  ??xcodeprojPath:@string inPath
  ??cacheFilePath:@string inCacheFilePath
:
  const contents := [filewrapper xcodeProjectGenerationFilewrapper.xcodeproj
    !mProjectObjectReference
    !mMainGroupReference
    !mGroupList
    !mMainGroupChildrenRefs
    !mToolTargetList
    !mAppTargetList
    !mCppFileList
    !m_M_FileList
    !m_MM_FileList
    !mFrameworkFileList
    !mHeaderFileList
    !mInfoPlistFileList
    !mTIFF_fileList
    !mICNS_fileList
    !mXIB_fileList
    !mBuildFileList
    !mDefaultConfigurationRef
    !mDefaultConfigurationSettingList
    !mProjectBuildConfigurationRef
  ] ;
  const projectCoreFile := inPath + "/project.pbxproj" ;
  if (not [projectCoreFile fileExists]) || (not [inCacheFilePath fileExists]) || ([@string stringWithContentsOfFile !inCacheFilePath] != contents) then 
    [contents writeToFileWhenDifferentContents !inCacheFilePath ?*] ;
    [contents makeDirectoryAndWriteToFile !projectCoreFile] ;
  end if ;
end method ;

#---------------------------------------------------------------------------*

end semantics ;

