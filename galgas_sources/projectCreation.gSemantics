#---------------------------------------------------------------------------*
#                                                                           *
#  Project Creation                                                         *
#                                                                           *
#  Copyright (C) 2008, ..., 2008 Pierre Molinaro.                          *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                               *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE.See the GNU General Public License for *
#   more details.                                                          *
#                                                                           *
#---------------------------------------------------------------------------*

semantics projectCreation :

#---------------------------------------------------------------------------*
#                                                                           *
#  F I L E W R A P P E R     T E M P L A T E S                              *
#                                                                           *
#---------------------------------------------------------------------------*

filewrapper projectCreationFileWrapper in "../generation_templates/project_creation" {
}{
}{
#--- Project
#  template build_bat "galgas_sources/build.bat.txt" ?@string PROJECT_NAME ;
  template PROJECT_project "all_PROJECT.gProject.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_cocoa "PROJECT_cocoa.gGui.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_grammar "PROJECT_grammar.gGrammar.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_lexique "PROJECT_lexique.gLexique.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_options "PROJECT_options.gOption.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_program "PROJECT_program.gProgram.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_semantics "PROJECT_semantics.gSemantics.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_syntax "PROJECT_syntax.gSyntax.gTemplate" ?@string PROJECT_NAME ;
  template PROJECT_computations "PROJECT_computations.cpp.gTemplate" ?@string PROJECT_NAME ;
}


#---------------------------------------------------------------------------*

routine performProjectCreation ??@string inProjectPath :
  const @string projectName := [inProjectPath lastPathComponent] ;
#--- galgas_sources
  @string galgas_sources_DIR := inProjectPath ."/galgas_sources" ;
  [galgas_sources_DIR makeDirectory] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_project !projectName] writeToFile !galgas_sources_DIR ."/all_" .projectName .".gProject"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_cocoa !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_cocoa.gGui"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_grammar !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_grammar.gGrammar"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_lexique !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_lexique.gLexique"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_options !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_options.gOption"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_program !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_program.gProgram"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_semantics !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_semantics.gSemantics"] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_syntax !projectName] writeToFile !galgas_sources_DIR ."/" .projectName ."_syntax.gSyntax"] ;
#  [[filewrapper projectCreationFileWrapper.build_bat !projectName] writeToFile !galgas_sources_DIR ."/build.bat"] ;
#--- hand_coded_sources
  const @string hand_coded_sources_DIR := inProjectPath ."/hand_coded_sources" ;
  [hand_coded_sources_DIR makeDirectory] ;
  [[filewrapper projectCreationFileWrapper.PROJECT_computations !projectName] writeToFile !hand_coded_sources_DIR ."/" .projectName ."_computations.cpp"] ;
#---
   message "*** DONE ***\n" ;
end routine ;

#---------------------------------------------------------------------------*

routine projectCreation
  ??@string inProjectPath
:
  if [inProjectPath length] > 0 then
    message "*** PERFORM PROJECT CREATION (--create-project=" . inProjectPath ." option) ***\n" ;
  #--- First check the project name is correct (not empty, only letters, digits and '_')
    const @string projectName := [inProjectPath lastPathComponent] ;
    @bool ok := [[projectName characterAtIndex !0] isalpha] ;
    @uint idx := 1 ;
    loop [projectName length] :
    while (idx < [projectName length]) & ok do
      @char c := [projectName characterAtIndex !idx] ;
      ok := [c isalnum] | (c == '_') ;
      idx ++ ;
    end loop ;
    if not ok then
      message "** Cannot create GALGAS project: the project name '"
        . projectName
        ."' should begin by a letter followed by zero, one or more letters, digits and underscore character.\n"
      ;
    end if ;
    if ok then
      ok := not [inProjectPath directoryExists] ;
      if not ok then
        message "*** Cannot create GALGAS project: '" . inProjectPath ."' directory already exists.***\n" ;
      end if ;
    end if ;
    if ok then
      performProjectCreation !inProjectPath ;
    end if ;
  end if ;
end routine ;

#---------------------------------------------------------------------------*

end semantics ;
