#---------------------------------------------------------------------------*
#                                                                           *
#  Treewalking for generating option header file                            *
#                                                                           *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

treewalking optionHeaderGeneration (optionMetamodel) :
import "optionMetamodel.gMetamodel" ;
import semantics optionSemantics in "optionSemantics.gSemantics" ;

#---------------------------------------------------------------------------*

rule @optionComponentRoot
  ??@string inStartDirectory
  ??@string inOptionComponentName
  ??@commandLineOptionMap inBoolOptionMap
  ??@commandLineOptionMap inUIntOptionMap
  ??@commandLineOptionMap inStringOptionMap
:
#--- User zone 2
  @string generatedUserZone2 := "" ;
  generatedUserZone2 .=
    "#ifndef " . inOptionComponentName . "_0_DEFINED\n"
  . "#define " . inOptionComponentName . "_0_DEFINED\n"
  . "#include \"command_line_interface/AC_CLI_Options.h\"\n\n"
  . [@string CppLineComment] ;

#--- User zone 3
  @string generatedUserZone3 := "" ;
  [!?generatedUserZone3 setCapacity !5000] ;
  generatedUserZone3 .=
    [@string CppTitleComment !"Command Line Options definitions class"]
  . "class " . inOptionComponentName . " : public AC_CLI_Options {\n"
    "//--- Constructor\n"
    "  public : galgas_cli_options (void) ;\n"
    "\n"
    "//--- Boolean Command Line Interface Options\n"
    "  public : virtual sint32 getBoolOptionsCount (void) const ;\n\n"
    "  public : virtual bool\n"
    "  getBoolOptionValue (const sint32 inIndex) const ;\n\n"
    "  public : virtual void\n"
    "  setBoolOptionValue (const sint32 inIndex, const bool inValue) ;\n\n"
    "  public : virtual char\n"
    "  getBoolOptionChar (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getBoolOptionString (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getBoolOptionDescription (const sint32 inIndex) const ;\n\n"
    "  public : virtual bool\n"
    "  boolOptionValueFromKeys (const char * inModuleName,\n"
    "                           const char * inOptionName,\n"
    "                           bool * outFound) const ;\n\n"
    "\n"
    "//--- Unsigned integer Command Line Interface Options\n"
    "  public : virtual sint32 getUintOptionsCount (void) const ;\n\n"
    "  public : virtual uint32\n"
    "  getUintOptionValue (const sint32 inIndex) const ;\n\n"
    "  public : virtual uint32\n"
    "  getUintOptionDefaultValue (const sint32 inIndex) const ;\n\n"
    "  public : virtual void\n"
    "  setUintOptionValue (const sint32 inIndex, const uint32 inValue) ;\n\n"
    "  public : virtual char\n"
    "  getUintOptionChar (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getUintOptionString (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getUintOptionDescription (const sint32 inIndex) const ;\n\n"
    "  public : virtual uint32\n"
    "  uintOptionValueFromKeys (const char * inModuleName,\n"
    "                           const char * inOptionName,\n"
    "                           bool * outFound) const ;\n"
    "\n"
    "//--- String Command Line Interface Options\n"
    "  public : virtual sint32 getStringOptionsCount (void) const ;\n\n"
    "  public : virtual C_String\n"
    "  getStringOptionValue (const sint32 inIndex) const ;\n\n"
    "  public : virtual void\n"
    "  setStringOptionValue (const sint32 inIndex, const C_String & inValue) ;\n\n"
    "  public : virtual char\n"
    "  getStringOptionChar (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getStringOptionString (const sint32 inIndex) const ;\n\n"
    "  public : virtual const char *\n"
    "  getStringOptionDescription (const sint32 inIndex) const ;\n\n"
    "  public : virtual C_String\n"
    "  stringOptionValueFromKeys (const char * inModuleName,\n"
    "                             const char * inOptionName,\n"
    "                             bool * outFound) const ;\n"
    "\n"
    "//--- Private arraies : current options values\n"
    "  private : bool mBoolOptionValues [" . [([inBoolOptionMap count] + 1) string] . "] ;\n"
    "  private : uint32 mUintOptionValues [" . [([inUIntOptionMap count] + 1) string] . "] ;\n"
    "  private : C_String mStringOptionValues [" . [([inStringOptionMap count] + 1) string] . "] ;\n"
    "  private : TC_UniqueArray <C_String> mStringValue ;\n"
    "} ;\n\n"
#//--- End of ".h" file
  . [@string CppLineComment]
  . "#endif\n"
  ;

#--- Generate header file
  [@string generateFile
    !inStartDirectory
    !inOptionComponentName . ".h"
    !"//"
    !"\n\n" # Defaut user zone1
    !generatedUserZone2
    !"\n\n" # Defaut user zone2
    !generatedUserZone3
  ] ;
end rule ;

#---------------------------------------------------------------------------*

end treewalking ;