#---------------------------------------------------------------------------*
#                                                                           *
#  metamodel that defines expression                                        *
#                                                                           *
#  Copyright (C) 2007, ..., 2010 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics semanticsDecoratedTypes :
  import "semanticContext.gSemantics" ;
  import semantics semanticContext in "semanticContext.gSemantics" ;

#---------------------------------------------------------------------------*

#abstract class @semanticExpressionForGeneration {
#}

##---------------------------------------------------------------------------*
#
#list @semanticExpressionListForGeneration {
#  @semanticExpressionForGeneration mExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @outSemanticExpressionListForGeneration {
#  @semanticExpressionListForGeneration mExpression ;
#  @location mEndOfExpressionLocation ;
#}
#
##---------------------------------------------------------------------------*
#
#class @selfInExpressionForGeneration extends @semanticExpressionForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#class @hereExpressionForGeneration extends @semanticExpressionForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#class @trueExpressionForGeneration extends @semanticExpressionForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#class @falseExpressionForGeneration extends @semanticExpressionForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#class @literalCharExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lchar mCharacter ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalStringExpressionForGeneration extends @semanticExpressionForGeneration {
#  @stringlist mStringSequence ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalDoubleExpressionForGeneration extends @semanticExpressionForGeneration {
#  @ldouble mValue ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalUIntExpressionForGeneration extends @semanticExpressionForGeneration {
#  @luint mValue ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalUInt64ExpressionForGeneration extends @semanticExpressionForGeneration {
#  @luint64 mValue ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalSIntExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lsint mValue ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalSInt64ExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lsint64 mValue ;
#}
#
##---------------------------------------------------------------------------*
#
#class @constructorExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mTypeName ;
#  @lstring mConstructorName ;
#  @outSemanticExpressionListForGeneration mExpressions ;
#}
#
##---------------------------------------------------------------------------*
#
#class @readerCallExpressionForGeneration extends @semanticExpressionForGeneration {
#  @semanticExpressionForGeneration mReceiver ;
#  @lstring mReaderName ;
#  @outSemanticExpressionListForGeneration mExpressions ;
#}
#
##---------------------------------------------------------------------------*
#
#class @optionExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mOptionComponentName ;
#  @lstring mOptionEntryName ;
#  @lstring mOptionReaderName ;
#}
#
##---------------------------------------------------------------------------*
#
#class @concatExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @orExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @xorExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @andExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @equalExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @notEqualExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @lowerOrEqualExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @greaterOrEqualExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @strictGreaterExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @strictLowerExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @rightShiftExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @leftShiftExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @addExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @subExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @multiplicationExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @divisionExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @moduloExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mLeftExpression ;
#  @semanticExpressionForGeneration mRightExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @unaryMinusExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @notExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @negateExpressionForGeneration extends @semanticExpressionForGeneration {
#  @location mOperatorLocation ;
#  @semanticExpressionForGeneration mExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @ifExpressionForGeneration extends @semanticExpressionForGeneration {
#  @semanticExpressionForGeneration mIfExpression ;
#  @semanticExpressionForGeneration mThenExpression ;
#  @semanticExpressionForGeneration mElseExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @functionCallExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mFunctionName ;
#  @outSemanticExpressionListForGeneration mExpressions ;
#}
#
##---------------------------------------------------------------------------*
#
#class @varInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mVarName ;
#}
#
##---------------------------------------------------------------------------*
#
#class @literalTypeInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mVarName ;
#}
#
##---------------------------------------------------------------------------*
#
#class @castInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @semanticExpressionForGeneration mReceiverExpression ;
#  @bool mUseKindOfClass ;
#  @lstring mTypeName ;
#  @semanticExpressionForGeneration mErrorLocationExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @filewrapperObjectInstanciationInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mFilewrapperName ;
#}
#
##---------------------------------------------------------------------------*
#
#class @filewrapperInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mFilewrapperName ;
#  @lstring mFilewrapperPath ;
#}
#
##---------------------------------------------------------------------------*
#
#class @filewrapperTemplateInExpressionForGeneration extends @semanticExpressionForGeneration {
#  @lstring mFilewrapperName ;
#  @lstring mFilewrapperTemplateName ;
#  @outSemanticExpressionListForGeneration mActualOutputParameterList ;
#}
#
##---------------------------------------------------------------------------*
##                                                                           *
##   F O R M A L    A R G U M E N T S    P A S S I N G    M O D E S          *
##                                                                           *
##---------------------------------------------------------------------------*
#
#enum @formalArgumentPassingModeForGeneration {
#  argumentIn, argumentOut, argumentInOut, argumentConstantIn
#}{
#  reader formalArgumentMessage :
#    argumentConstantIn -> "a constant input (??) formal argument" ;
#    argumentIn -> "an input (?) formal argument" ;
#    argumentOut -> "an output (!) formal argument" ;
#    argumentInOut -> "an input/output (?!) argument" ;
#  end reader ;
#
#  reader formalArgumentString :
#    argumentConstantIn -> "'??'" ;
#    argumentIn -> "'?'" ;
#    argumentOut -> "'!'" ;
#    argumentInOut -> "'?!'" ;
#  end reader ;
#
#  reader string :
#    argumentConstantIn -> "??" ;
#    argumentIn -> "?" ;
#    argumentOut -> "!" ;
#    argumentInOut -> "?!" ;
#  end reader ;
#
#  reader generation1ForFormalParameter :
#    argumentConstantIn -> "const " ;
#    argumentIn -> "" ;
#    argumentOut -> "" ;
#    argumentInOut -> "" ;
#  end reader ;
#
#  reader generation2ForFormalParameter :
#    argumentConstantIn -> "" ;
#    argumentIn -> "" ;
#    argumentOut -> " &" ;
#    argumentInOut -> " &" ;
#  end reader ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  F O R M A L    P A R A M E T E R    L I S T                              *
#                                                                           *
#---------------------------------------------------------------------------*

list @formalParameterListForGeneration {
  @formalArgumentPassingModeAST mFormalParameterPassingMode ;
  @unifiedTypeMapProxy mFormalParameterType ;
  @lstring mFormalParameterName ;
  @bool mIsUnused ;
}

##---------------------------------------------------------------------------*
##                                                                           *
##  F O R M A L    I N P U T    P A R A M E T E R    L I S T                 *
##                                                                           *
##---------------------------------------------------------------------------*
#
#list @formalInputParameterListForGeneration {
#  @lstring mFormalParameterTypeName ;
#  @lstring mFormalParameterName ;
#  @bool mIsUnused ;
#}
#
##---------------------------------------------------------------------------*
##                                                                           *
##  A C T U A L    P A R A M E T E R                                         *
##                                                                           *
##---------------------------------------------------------------------------*
#
#abstract class @actualParameterForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#class @outputActualParameterForGeneration extends @actualParameterForGeneration {
#  @semanticExpressionForGeneration mOutputActualParameterExpression ;
#}
#
##---------------------------------------------------------------------------*
#
#class @outputInputActualParameterForGeneration extends @actualParameterForGeneration {
#  @lstring mOutputInputActualParameterName ;
#  @lstringlist mStructAttributeList ;
#}
#
##---------------------------------------------------------------------------*
#
#class @inputActualParameterForGeneration extends @actualParameterForGeneration {
#  @lstring mDeclarationTypeName ;
#  @lstring mInputActualParameterName ;
#}
#
##---------------------------------------------------------------------------*
#
#class @inputJokerActualParameterForGeneration extends @actualParameterForGeneration {
#}
#
##---------------------------------------------------------------------------*
#
#list @actualParameterListForGeneration {
#  @actualParameterForGeneration mActualParameter ;
#}
#
##---------------------------------------------------------------------------*
##                                                                           *
##  A C T U A L    I N P U T    P A R A M E T E R    L I S T                 *
##                                                                           *
##---------------------------------------------------------------------------*
#
#list @actualInputParameterListForGeneration {
#  @lstring mActualParameterTypeName ; # Empty if no type
#  @lstring mActualParameterName ;
#}
#
#---------------------------------------------------------------------------*

abstract class @syntaxInstructionForGeneration {
  @location mStartLocation feature nogetter ;
}

#---------------------------------------------------------------------------*

abstract class @semanticInstructionForGeneration extends @syntaxInstructionForGeneration {
}

#---------------------------------------------------------------------------*

list @semanticInstructionListForGeneration {
  @semanticInstructionForGeneration mInstruction ;
}

#---------------------------------------------------------------------------*

abstract class @semanticDeclarationForGeneration {
}

#---------------------------------------------------------------------------*

list @semanticDeclarationListForGeneration {
  @semanticDeclarationForGeneration mDeclaration ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    T Y P E    D E C L A R A T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

abstract class @semanticTypeForGeneration extends @semanticDeclarationForGeneration {
  @unifiedTypeMapProxy mTypeIndex ;
}

#---------------------------------------------------------------------------*

#sortedlist @semanticDeclarationSortedListForGeneration {
#  @string mOrderString ;
#  @semanticDeclarationForGeneration mSemanticDeclaration ;
#}{
#  mOrderString <
#}

#---------------------------------------------------------------------------*

#list @semanticDeclarationListForGeneration {
#  @semanticDeclarationForGeneration mSemanticDeclaration ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    E X T E R N    R O U T I N E    D E C L A R A T I O N                  *
#                                                                           *
#---------------------------------------------------------------------------*

#class @externRoutineDeclarationForGeneration extends @semanticDeclarationForGeneration {
#  @lstring mRoutineName ;
#  @formalParameterListForGeneration mFormalParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    R O U T I N E    P R O T O T Y P E    D E C L A R A T I O N            *
#                                                                           *
#---------------------------------------------------------------------------*

#class @routinePrototypeDeclarationForGeneration extends @externRoutineDeclarationForGeneration {
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    R O U T I N E    D E C L A R A T I O N                                 *
#                                                                           *
#---------------------------------------------------------------------------*

#class @routineDeclarationForGeneration extends @routinePrototypeDeclarationForGeneration {
#  @semanticInstructionListForGeneration mRoutineInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    E X T E R N    F U N C T I O N    D E C L A R A T I O N                *
#                                                                           *
#---------------------------------------------------------------------------*

#class @externFunctionDeclarationForGeneration extends @semanticDeclarationForGeneration {
#  @lstring mFunctionName ;
#  @formalParameterListForGeneration mFormalParameterList ;
#  @lstring mResultTypeName ;
#  @lstring mResultVariableName ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    F U N C T I O N    D E C L A R A T I O N                               *
#                                                                           *
#---------------------------------------------------------------------------*

#class @functionDeclarationForGeneration extends @externFunctionDeclarationForGeneration {
#  @semanticInstructionListForGeneration mFunctionInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    O N C E    F U N C T I O N    D E C L A R A T I O N                    *
#                                                                           *
#---------------------------------------------------------------------------*

#class @lazyFunctionDeclarationForGeneration extends @semanticDeclarationForGeneration {
#  @lstring mFunctionName ;
#  @lstring mResultTypeName ;
#  @lstring mResultVariableName ;
#  @semanticInstructionListForGeneration mFunctionInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  L O C A L    V A R I A B L E    D E C L A R A T I O N                    *
#                                                                           *
#---------------------------------------------------------------------------*

#class @localVariableDeclarationForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mVariableName ;
#}

#---------------------------------------------------------------------------*

#class @localVariableDeclarationWithInitializationForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mVariableName ;
#  @lstring mConstructorName ;
#  @outSemanticExpressionListForGeneration mConstructorArguments ;
#}

#---------------------------------------------------------------------------*

#class @localVariableDeclarationWithAssignmentForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mVariableName ;
#  @semanticExpressionForGeneration mSourceExpression ;
#}

#---------------------------------------------------------------------------*

#class @localConstantDeclarationWithSourceExpressionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mVariableName ;
#  @semanticExpressionForGeneration mSourceExpression ;
#}

#---------------------------------------------------------------------------*

#class @localConstantDeclarationWithConstructorCallForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mVariableName ;
#  @lstring mConstructorName ;
#  @outSemanticExpressionListForGeneration mConstructorArguments ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  A S S I G N M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

#class @assignmentInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTargetVariableName ;
#  @lstringlist mStructAttributeList ;
#  @semanticExpressionForGeneration mSourceExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  D O T    A S S I G N M E N T    I N S T R U C T I O N                    *
#                                                                           *
#  VARIABLE .= EXPRESSION ;                                                 *
#                                                                           *
#---------------------------------------------------------------------------*

#class @appendInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTargetVariableName ;
#  @lstringlist mStructAttributeList ;
#  @semanticExpressionForGeneration mSourceExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  S E N D    I N S T R U C T I O N                                         *
#                                                                           *
#  send EXPRESSION ;                                                        *
#                                                                           *
#---------------------------------------------------------------------------*

#class @sendInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mSourceExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  F O R E A C H    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

#abstract class @foreachInstructionEnumeratedObjectElementForGeneration {
#}

#---------------------------------------------------------------------------*

#class @foreachInstructionJokerForGeneration extends @foreachInstructionEnumeratedObjectElementForGeneration {
#}

#---------------------------------------------------------------------------*

#class @foreachInstructionEnumeratedConstantForGeneration extends @foreachInstructionEnumeratedObjectElementForGeneration {
#  @lstring mTypeName ;
#  @lstring mConstantName ;
#}

#---------------------------------------------------------------------------*

#list @foreachInstructionEnumeratedObjectElementListForGeneration {
#  @foreachInstructionEnumeratedObjectElementForGeneration mElement ;
#}

#---------------------------------------------------------------------------*

#list @foreachInstructionEnumeratedObjectListForGeneration {
#  @bool mIsAscending ;
#  @semanticExpressionForGeneration mEnumeratedExpression ;
#  @foreachInstructionEnumeratedObjectElementListForGeneration mElementList ;
#  @bool mEndsWithEllipsis ;
#  @lstring mPrefix ;
#}

#---------------------------------------------------------------------------*

#class @foreachInstructionForGeneration extends @semanticInstructionForGeneration {
#  @foreachInstructionEnumeratedObjectListForGeneration mEnumeratedObjectList ;
#  @lstring mIndexVariableName ;
#  @semanticExpressionForGeneration mWhileExpression ;
#  @semanticInstructionListForGeneration mBeforeInstructionList ;
#  @semanticInstructionListForGeneration mBetweenInstructionList ;
#  @semanticInstructionListForGeneration mDoInstructionList ;
#  @semanticInstructionListForGeneration mAfterInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  I F    I N S T R U C T I O N                                             *
#                                                                           *
#---------------------------------------------------------------------------*

#list @ifBranchListForGeneration {
#  @semanticExpressionForGeneration mIFexpression ;
#  @semanticInstructionListForGeneration mIFinstructionList ;
#}

#---------------------------------------------------------------------------*

#class @ifInstructionForGeneration extends @semanticInstructionForGeneration {
#  @ifBranchListForGeneration mBranchList ; # [1, *]
#  @semanticInstructionListForGeneration mElseInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  M E T H O D    C A L L    I N S T R U C T I O N                          *
#                                                                           *
#---------------------------------------------------------------------------*

#class @methodCallInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mReceiverExpression ;
#  @lstring mMethodName ;
#  @actualParameterListForGeneration mActualParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  M O D I F I E R    C A L L    I N S T R U C T I O N                      *
#                                                                           *
#---------------------------------------------------------------------------*

#class @modifierCallInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mReceiverName ;
#  @lstringlist mReceiverStructAttributes ;
#  @lstring mModifierName ;
#  @actualParameterListForGeneration mActualParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    E R R O R    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

#class @errorInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mReceiverExpression ;
#  @semanticExpressionForGeneration mErrorExpression ;
#  @lstringlist mBuiltVariableList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    W A R N I N G    I N S T R U C T I O N                                 *
#                                                                           *
#---------------------------------------------------------------------------*

#class @warningInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mReceiverExpression ;
#  @semanticExpressionForGeneration mWarningExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    R O U T I N E    C A L L    I N S T R U C T I O N                      *
#                                                                           *
#---------------------------------------------------------------------------*

#class @routineCallInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mRoutineName ;
#  @actualParameterListForGeneration mActualParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A T C H    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

#abstract class @matchEntryForGeneration {
#}

#---------------------------------------------------------------------------*

#list @matchEntryListForGeneration {
#  @matchEntryForGeneration mEntry ;
#}

#---------------------------------------------------------------------------*

#class @constantMatchEntryForGeneration extends @matchEntryForGeneration {
#  @lstring mConstantName ;
#}

#---------------------------------------------------------------------------*

#class @classMatchEntryForGeneration extends @matchEntryForGeneration {
#  @lstring mClassName ;
#  @foreachInstructionEnumeratedObjectElementListForGeneration mElements ;
#  @bool mEndsWithEllipsis ;
#}

#---------------------------------------------------------------------------*

#list @matchInstructionBranchListForGeneration {
#  @matchEntryListForGeneration mMatchEntryList ;
#  @semanticInstructionListForGeneration mMatchBranchInstructionList ;
#}

#---------------------------------------------------------------------------*

#class @matchInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstringlist mMatchedVariableNameList ;
#  @matchInstructionBranchListForGeneration mMatchInstructionBranchList ;
#  @semanticInstructionListForGeneration mElseInstructionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    C A S T    I N S T R U C T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

#list @castInstructionBranchListForGeneration {
#  @bool mUseKindOfClass ;
#  @lstring mTypeName ;
#  @lstring mConstantVarName ; # Empty string if no constant var
#  @bool mConstantVarNameIsUnused ; # true if no constant var
#  @semanticInstructionListForGeneration mCastBranchInstructionList ;
#}

#---------------------------------------------------------------------------*

#abstract class @elseOrDefaultForCastInstructionForGeneration {
#}

#---------------------------------------------------------------------------*

#class @elseForCastInstructionForGeneration extends @elseOrDefaultForCastInstructionForGeneration {
#  @semanticInstructionListForGeneration mElseInstructionList ;
#}

#---------------------------------------------------------------------------*

#class @defaultForCastInstructionForGeneration extends @elseOrDefaultForCastInstructionForGeneration {
#  @semanticExpressionForGeneration mErrorLocationExpression ;
#}

#---------------------------------------------------------------------------*

#class @castInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mExpression ;
#  @castInstructionBranchListForGeneration mCastInstructionBranchList ;
#  @elseOrDefaultForCastInstructionForGeneration mElseOrDefault ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    A D D    I N S T R U C T I O N      + =                                *
#                                                                           *
#---------------------------------------------------------------------------*

#class @addInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mReceiverName ;
#  @lstringlist mStructAttributeList ;
#  @outSemanticExpressionListForGeneration mExpressionList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    R E M O V E    I N S T R U C T I O N      - =                          *
#                                                                           *
#---------------------------------------------------------------------------*

#class @removeInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mReceiverName ;
#  @lstringlist mStructAttributeList ;
#  @semanticExpressionForGeneration mExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    I N C R E M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

#class @incrementInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mReceiverName ;
#  @lstringlist mStructAttributeList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    D E C R E M E N T    I N S T R U C T I O N                             *
#                                                                           *
#---------------------------------------------------------------------------*

#class @decrementInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mReceiverName ;
#  @lstringlist mStructAttributeList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    L O O P    I N S T R U C T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

#class @loopInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mVariantExpression ;
#  @semanticInstructionListForGeneration mFirstInstructions ;
#  @semanticExpressionForGeneration mLoopExpression ;
#  @semanticInstructionListForGeneration mSecondInstructions ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  M E S S A G E    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

#class @messageInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mExpression ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  L O G    I N S T R U C T I O N                                           *
#                                                                           *
#---------------------------------------------------------------------------*

#list @logListForGeneration {
#  @lstring mLogMessage ;
#  @semanticExpressionForGeneration mLogExpression ;
#}

#---------------------------------------------------------------------------*

#class @logInstructionForGeneration extends @semanticInstructionForGeneration {
#  @logListForGeneration mLogList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  G R A M M A R    I N S T R U C T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

#class @grammarInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mGrammarComponentName ;
#  @lstring mLabelName ;
#  @semanticExpressionForGeneration mSourceExpression ;
#  @bool mSourceExpressionIsFile ; # If false, mSourceExpression should be the source string
#  @actualParameterListForGeneration mActualParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  W I T H    I N S T R U C T I O N                                         *
#                                                                           *
#---------------------------------------------------------------------------*

#class @withInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mPrefix ;
#  @lstring mTargetObjectName ;
#  @lstringlist mStructAttributeList ;
#  @lstring mSearchMethodName ;
#  @semanticExpressionForGeneration mKeyExpression ;
#  @semanticInstructionListForGeneration mDoBranchInstructions ;
#  @semanticInstructionListForGeneration mElseBranchInstructions ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  S W I T C H    I N S T R U C T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

#list @switchBranchesForGeneration {
#  @lstringlist mSwitchConstantList ;
#  @semanticInstructionListForGeneration mInstructions ;
#}

#---------------------------------------------------------------------------*

#class @switchInstructionForGeneration extends @semanticInstructionForGeneration {
#  @semanticExpressionForGeneration mSwitchExpression ;
#  @switchBranchesForGeneration mBranches ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#  T Y P E    M E T H O D    C A L L    I N S T R U C T I O N               *
#                                                                           *
#---------------------------------------------------------------------------*

#class @typeMethodInstructionForGeneration extends @semanticInstructionForGeneration {
#  @lstring mTypeName ;
#  @lstring mMethodName ;
#  @actualParameterListForGeneration mActualParameterList ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
# A B S T R A C T   C A T E G O R Y    M E T H O D    D E C L A R A T I O N *
#                                                                           *
#---------------------------------------------------------------------------*

#list @abstracMultiMethodListForGeneration {
#  @lstring mAbstractCategoryMethodName ;
#  @formalParameterListForGeneration mAbstractCategoryFormalParameterList ;
#}

#---------------------------------------------------------------------------*

#listmap @abstractMultiMethodListMapForGeneration (@abstracMultiMethodListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
#        C A T E G O R Y    M E T H O D    D E C L A R A T I O N            *
#                                                                           *
#---------------------------------------------------------------------------*

#list @multiMethodListForGeneration {
#  @lstring mCategoryMethodName ;
#  @formalParameterListForGeneration mCategoryFormalParameterList ;
#  @semanticInstructionListForGeneration mRoutineInstructionList ;
#}

#---------------------------------------------------------------------------*

#listmap @multiMethodListMapForGeneration (@multiMethodListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
#O V E R R I D I N G   C A T E G O R Y   M E T H O D   D E C L A R A T I O N*
#                                                                           *
#---------------------------------------------------------------------------*

#list @overridingMultiMethodListForGeneration {
#  @lstring mOverridingCategoryMethodName ;
#  @formalParameterListForGeneration mOverridingCategoryFormalParameterList ;
#  @semanticInstructionListForGeneration mRoutineInstructionList ;
#}

#---------------------------------------------------------------------------*

#listmap @overridingMultiMethodListMapForGeneration (@overridingMultiMethodListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
# A B S T R A C T   C A T E G O R Y    R E A D E R    D E C L A R A T I O N *
#                                                                           *
#---------------------------------------------------------------------------*

#list @abstractMultiReaderListForGeneration {
#  @lstring mAbstractCategoryReaderName ;
#  @formalInputParameterListForGeneration mAbstractCategoryFormalInputParameterList ;
#  @lstring mReturnedTypeName ;
#}

#---------------------------------------------------------------------------*

#listmap @abstractMultiReaderListMapForGeneration (@abstractMultiReaderListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
#        C A T E G O R Y    R E A D E R    D E C L A R A T I O N            *
#                                                                           *
#---------------------------------------------------------------------------*

#list @multiReaderListForGeneration {
#  @lstring mCategoryReaderName ;
#  @formalInputParameterListForGeneration mReaderCategoryFormalInputParameterList ;
#  @lstring mReturnedTypeName ;
#  @lstring mReturnedVariableName ;
#  @semanticInstructionListForGeneration mRoutineInstructionList ;
#}

#---------------------------------------------------------------------------*

#listmap @multiReaderListMapForGeneration (@multiReaderListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
#O V E R R I D I N G   C A T E G O R Y   R E A D E R   D E C L A R A T I O N*
#                                                                           *
#---------------------------------------------------------------------------*

#list @overridingMultiReaderListForGeneration {
#  @lstring mOverridingCategoryReaderName ;
#  @formalInputParameterListForGeneration mOverridingReaderFormalInputParameterList ;
#  @lstring mReturnedTypeName ;
#  @lstring mReturnedVariableName ;
#  @semanticInstructionListForGeneration mRoutineInstructionList ;
#}

#---------------------------------------------------------------------------*

#listmap @overridingMultiReaderListMapForGeneration (@overridingMultiReaderListForGeneration) ;

#---------------------------------------------------------------------------*
#                                                                           *
#           S E M A N T I C   D E C L A R A T I O N S                       *
#                                                                           *
#---------------------------------------------------------------------------*

#struct @semanticDeclarationStructForGeneration {
#  @semanticDeclarationListForGeneration mSemanticDeclarationList ;
##--- Multi Methods
#  @abstractMultiMethodListMapForGeneration mAbstractCategoryMethodListMap ;
#  @multiMethodListMapForGeneration mCategoryMethodListMap ;
#  @overridingMultiMethodListMapForGeneration mOverridingCategoryMethodListMap ;
##--- Multi readers
#  @abstractMultiReaderListMapForGeneration mAbstractCategoryReaderListMap ;
#  @multiReaderListMapForGeneration mCategoryReaderListMap ;
#  @overridingMultiReaderListMapForGeneration mOverridingCategoryReaderListMap ;
#}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A P    D E C L A R A T I O N                                         *
#                                                                           *
#---------------------------------------------------------------------------*

class @mapTypeForGeneration extends @semanticTypeForGeneration {
  @lstring mMapTypeName ;
  @typedAttributeList mTypedAttributeList ;
  @insertMethodListAST mInsertMethodList ;
  @mapSearchMethodListAST mSearchMethodList ;
  @mapRemoveMethodListAST mRemoveMethodList ;
  @bool mHasInsertOrReplaceModifier ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    M A P    P R O X Y    D E C L A R A T I O N                            *
#                                                                           *
#---------------------------------------------------------------------------*

class @mapProxyTypeForGeneration extends @semanticTypeForGeneration {
  @unifiedTypeMapProxy mAssociatedMapTypeProxy ;
  @typedAttributeList mAssociatedMapTypedAttributeList ;
  @mapSearchMethodListAST mSearchMethodList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    C L A S S    D E C L A R A T I O N                                     *
#                                                                           *
#---------------------------------------------------------------------------*

list @abstractMethodDefinitionListForGeneration {
  @bool mIsOverriding ;
  @lstring mMethodName ;
  @formalParameterListForGeneration mSignature ;
}

#---------------------------------------------------------------------------*

list @methodDefinitionListForGeneration {
  @bool mIsOverriding ;
  @lstring mMethodName ;
  @formalParameterListForGeneration mSignature ;
  @semanticInstructionListForGeneration mInstructionList ;
}

#---------------------------------------------------------------------------*

#list @classMessageDefinitionListForGeneration {
#  @lstring mMessageName ;
#  @lstring mMessageValue ;
#}

#---------------------------------------------------------------------------*

#list @lazyAttributeListForGeneration {
#  @location mLocationMagicNumber ;
#  @attributeInCollectionListForGeneration mAttributeList ;
#  @semanticInstructionListForGeneration mInstructionList ;
#}

#---------------------------------------------------------------------------*

class @classTypeForGeneration extends @semanticTypeForGeneration {
  @bool mIsAbstract ;
  @lstring mClassTypeName ;
  @unifiedTypeMapProxy mSuperClass ; # Null if no super class
#  @lstringlist mClassFeatureList ;
  @typedAttributeList mAllTypedAttributeList ; # Inherited followed by current attributes
  @typedAttributeList mTypedAttributeList ;
  @abstractMethodDefinitionListForGeneration mAbstractMethodList ;
  @methodDefinitionListForGeneration mMethodList ;
#  @classMessageDefinitionListForGeneration mMessageList ;
#  @lazyAttributeListForGeneration mLazyAttributeList ;
#  @string mClassMessage ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    L I S T M A P    D E C L A R A T I O N                                 *
#                                                                           *
#---------------------------------------------------------------------------*

class @listmapTypeForGeneration extends @semanticTypeForGeneration {
  @unifiedTypeMapProxy mAssociatedListTypeIndex ;
  @typedAttributeList mAssociatedListTypedAttributeList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    P R I M I T I V E    T Y P E                                           *
#                                                                           *
#---------------------------------------------------------------------------*

class @primitiveTypeForGeneration extends @semanticTypeForGeneration {
}

#---------------------------------------------------------------------------*
#                                                                           *
#    G E N E R I C    L I S T    T Y P E    D E C L A R A T I O N           *
#                                                                           *
#---------------------------------------------------------------------------*

class @genericTypeForGeneration extends @semanticTypeForGeneration {
}

#---------------------------------------------------------------------------*
#                                                                           *
#    L I S T    T Y P E    D E C L A R A T I O N                            *
#                                                                           *
#---------------------------------------------------------------------------*

class @listTypeForGeneration extends @semanticTypeForGeneration {
  @typedAttributeList mTypedAttributeList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    S T R U C T    D E C L A R A T I O N                                   *
#                                                                           *
#---------------------------------------------------------------------------*

class @structTypeForGeneration extends @semanticTypeForGeneration {
  @typedAttributeList mTypedAttributeList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    S O R T E D    L I S T    D E C L A R A T I O N                        *
#                                                                           *
#---------------------------------------------------------------------------*

list @sortDescriptorListForGeneration {
  @uint mAttributeIndex ;
  @bool mAscendingOrder ;
}

#---------------------------------------------------------------------------*

class @sortedListTypeForGeneration extends @semanticTypeForGeneration {
  @typedAttributeList mTypedAttributeList ;
  @sortDescriptorListForGeneration mSortDescriptorList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    E N U M    D E C L A R A T I O N                                       *
#                                                                           *
#---------------------------------------------------------------------------*

sortedlist @enumMessageAssociationSortedListForGeneration {
  @uint mConstantIndex ;
  @string mConstantName ;
  @string mMessage ;
}{
  mConstantIndex <
}

#---------------------------------------------------------------------------*

list @enumMessageListForGeneration {
  @string mEnumMessageName ;
  @enumMessageAssociationSortedListForGeneration mMessageAssociationList ;
}

#---------------------------------------------------------------------------*

class @enumTypeForGeneration extends @semanticTypeForGeneration {
  @stringlist mConstantList ;
  @enumMessageListForGeneration mEnumMessageList ;
}

#---------------------------------------------------------------------------*
#                                                                           *
#    F I L E W R A P P E R    D E C L A R A T I O N                         *
#                                                                           *
#---------------------------------------------------------------------------*

#list @filewrapperTemplateListForGeneration {
#  @lstring mFilewrapperTemplateName ;
#  @lstring mFilewrapperTemplatePath ;
#  @formalInputParameterListForGeneration mFilewrapperTemplateFormalInputParameters ;
#}

#---------------------------------------------------------------------------*

#class @filewrapperDeclarationForGeneration extends @semanticDeclarationForGeneration {
#  @lstring mFilewrapperName ;
#  @lstring mFilewrapperPath ;
#  @lstringlist mFilewrapperExtensionList ;
#  @filewrapperTemplateListForGeneration mFilewrapperTemplateList ;
#}

#---------------------------------------------------------------------------*

#class @semanticsComponentForGeneration {
#  @lstring mSemanticsComponentName  ;
#  @lstringlist mImportedComponentFileNameList  ;
#  @semanticDeclarationStructForGeneration mSemanticDeclarations  ;
#  @location mEndOfSourceFile ;
#}

#---------------------------------------------------------------------------*

end semantics ;
