#---------------------------------------------------------------------------*
#                                                                           *
#  All Abstract Syntax Tree Types                                           *
#                                                                           *
#  Copyright (C) 2010, ..., 2010 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

semantics allASTTypes :
  import "lexiqueTypesForAST.gSemantics" ;
  import "semanticsTypesForAST.gSemantics" ;
  import "optionTypesForAST.gSemantics" ;
  import "guiTypesForAST.gSemantics" ;
  import "lexiqueTypesForAST.gSemantics" ;
  import "grammarMetamodel.gSemantics" ;
  import "optionSemantics.gSemantics" ;

#---------------------------------------------------------------------------*

map @parsedLexiqueComponentMap {
  @galgas3LexiqueComponentListAST.element mLexiqueComponentAST ;
  insert insertKey error message "the '%K' lexique component has already been parsed" ;
  search searchKey error message "the '%K' lexique component symbol is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedOptionComponentMap {
  @commandLineOptionMap mBoolOptionMap ;
  @commandLineOptionMap mUIntOptionMap ;
  @commandLineOptionMap mStringOptionMap ;
  insert insertKey error message "the '%K' option component has already been parsed" ;
  search searchKey error message "the '%K' option component symbol is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedSemanticsComponentMap {
  @lstring mSourceFullFilePath ;
  @semanticsComponentAST mSemanticComponentRoot ;
  insert insertKey error message "the '%K' semantics component has already been parsed" ;
  search searchKey error message "the '%K' semantics component symbol is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedGrammarComponentMap {
  @lstring mSourceFullFilePath ;
  @galgas3GrammarComponentListAST.element mGrammarComponentRoot ;
  insert insertKey error message "the '%K' grammar component has already been parsed" ;
  search searchKey error message "the '%K' grammar component is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedSyntaxComponentMap {
  @lstring mSourceFullFilePath ;
  @galgas3SyntaxComponentListAST.element mSyntaxComponentRoot ;
  insert insertKey error message "the '%K' syntax component has already been parsed" ;
  search searchKey error message "the '%K' syntax component is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedProgramComponentMap {
  @lstring mSourceFullFilePath ;
  @programComponentAST mProgramComponentAST ;
  insert insertKey error message "the '%K' program component has already been parsed" ;
  search searchKey error message "the '%K' program component is not parsed" ;
}

#---------------------------------------------------------------------------*

map @parsedGuiComponentMap {
  @lstring mSourceFullFilePath ;
  @guiComponentAST mGuiComponentAST ;
  insert insertKey error message "the '%K' GUI component has already been parsed" ;
  search searchKey error message "the '%K' GUI component is not parsed" ;
}

#---------------------------------------------------------------------------*

struct @parsedComponentStruct {
  @parsedSemanticsComponentMap mParsedSemanticsComponentMap ;
  @parsedLexiqueComponentMap mParsedLexiqueComponentMap ;
  @parsedSyntaxComponentMap mParsedSyntaxComponentMap ;
  @parsedOptionComponentMap mParsedOptionComponentMap ;
  @parsedGrammarComponentMap mParsedGrammarComponentMap ;
  @parsedProgramComponentMap mParsedProgramComponentMap ;
  @parsedGuiComponentMap mParsedGuiComponentMap ;
}

#---------------------------------------------------------------------------*

end semantics ;

