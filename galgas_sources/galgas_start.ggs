#---------------------------------------------------------------------------*
#                                                                           *
#  GALGAS grammar start symbol definition                                   *
#                                                                           *
#  Copyright (C) 1997, ..., 2007 Pierre Molinaro.                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax galgas_start :

import lexique galgas_scanner in "galgas_scanner.ggs" ;
import option galgas_cli_options in "galgas_cli_options.gOption" ;

import semantics semantics_semantics in "semantics_semantics.ggs" ;

#------------------------------------------------------------------------------*
#                                                                              *
#          Production rules declaration                                        *
#                                                                              *
#------------------------------------------------------------------------------*

nonterminal <galgas_start_symbol>
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importLexique
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label importSyntax
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importGrammarForSemantics
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_optionComponents ioOptionsComponentsMapForUse
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importOptions
  ?!@M_optionComponents ioOptionsComponentsMap
label compileFile
;

nonterminal <galgas_component>
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importLexique
  ?!@M_lexiqueComponents ioLexiqueMapForUse
label importSyntax
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importGrammarForSemantics
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
label importOptions
  ?!@M_optionComponents ioOptionsComponentsMap
;

#------------------------------------------------------------------------------*

rule <galgas_start_symbol>
  ?!@M_lexiqueComponents ioLexiqueMapForUse
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_optionComponents ioOptionsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
:
  repeat
  while
    <galgas_component>
      !?ioLexiqueMapForUse
      !?ioSemanticsComponentsMap
      !?ioSyntaxComponentsMap
      !?ioGrammarComponentsMap
      !?ioOptionsComponentsMap
      !?ioMetamodelComponentMap
      !?ioTreewalkingComponentMap
    ;
  end repeat ;
label importLexique
  ?!@M_lexiqueComponents ioLexiqueMapForUse
:
  repeat
  while
    <galgas_component> importLexique !?ioLexiqueMapForUse ;
  end repeat ;
label importSyntax
  ?!@M_syntaxComponents ioSyntaxComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
:
  repeat
  while
    <galgas_component> importSyntax
      !?ioSyntaxComponentsMap
      !?ioMetamodelComponentMap
      !?ioTreewalkingComponentMap
    ;
  end repeat ;
label importSemantics
  ?!@M_semanticsComponents ioSemanticsComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
:
  repeat
  while
    <galgas_component> importSemantics
      !?ioSemanticsComponentsMap
      !?ioMetamodelComponentMap
      !?ioTreewalkingComponentMap
    ;
  end repeat ;
label importGrammarForSemantics
  ?!@M_grammarComponents ioGrammarComponentsMap
  ?!@M_metamodelsComponents ioMetamodelComponentMap
  ?!@M_optionComponents ioOptionsComponentsMapForUse
  ?!@M_treewalkingComponents ioTreewalkingComponentMap
:
  repeat
  while
    <galgas_component> importGrammarForSemantics
      !?ioGrammarComponentsMap
      !?ioMetamodelComponentMap
      !?ioOptionsComponentsMapForUse
      !?ioTreewalkingComponentMap
    ;
  end repeat ;
label compileFile
:
  @M_lexiqueComponents lexiqueMapForUse [emptyMap] ;
  @M_semanticsComponents semanticsComponentsMap [emptyMap] ;
  @M_syntaxComponents syntaxComponentsMap [emptyMap] ;
  @M_grammarComponents grammarComponentsMap [emptyMap] ;
  @M_optionComponents optionsComponentsMap [emptyMap] ;
  @M_metamodelsComponents metamodelComponentMap [emptyMap] ;
  @M_treewalkingComponents treewalkingComponentMap [emptyMap] ;
  repeat
  while
    <galgas_component>
      !?lexiqueMapForUse
      !?semanticsComponentsMap
      !?syntaxComponentsMap
      !?grammarComponentsMap
      !?optionsComponentsMap
      !?metamodelComponentMap
      !?treewalkingComponentMap
    ;
  end repeat ;
label importOptions
  ?!@M_optionComponents ioOptionsComponentsMap
:
  repeat
  while
    <galgas_component> importOptions !?ioOptionsComponentsMap ;
  end repeat ;
end rule ;

#------------------------------------------------------------------------------*

end syntax ;
