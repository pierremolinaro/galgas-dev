#---------------------------------------------------------------------------*

semantics libpmHandling :

#---------------------------------------------------------------------------*


local filewrapper libpmFileWrapper in "../libpm" {
 "h", "cpp", "m", "mak", "pch", "py"
}{
 "tiff", "png", "xib", "gif"
}{
}

#---------------------------------------------------------------------------*

routine updateLIBPMatPath ??@string inLIBPMPath :
#  message "LIBPM path: '" . inLIBPMPath . "'\n" ;
  const @filewrapper fw := [filewrapper libpmFileWrapper] ;
#--- Create directories
  foreach [fw allDirectoryPathes] do
    const @string actualDirectory := inLIBPMPath . mValue ;
    [actualDirectory makeDirectory] ;
  end foreach ;
#--- Update text files
  @stringset allNeededFileSet [emptySet] ;
  foreach [fw allTextFilePathes] do
    const @string contents := [fw textFileContentsAtPath !mValue] ;
    const @string actualFilePath := inLIBPMPath . mValue ;
    if [actualFilePath pathExtension] == "py" then
      [contents writeToExecutableFileWhenDifferentContents !actualFilePath ?*] ;
    else
      [contents writeToFileWhenDifferentContents !actualFilePath ?*] ;
    end if ;
    allNeededFileSet += !mValue ;
  end foreach ;
#--- Update binary files
  foreach [fw allBinaryFilePathes] do
    const @data contents := [fw binaryFileContentsAtPath !mValue] ;
    const @string actualFilePath := inLIBPMPath . mValue ;
    [contents writeToFileWhenDifferentContents !actualFilePath ?*] ;
    allNeededFileSet += !mValue ;
  end foreach ;
#--- Remove useless files
  @stringset allActualFileSet [emptySet] ;
  foreach [inLIBPMPath regularFiles !true] do
    allActualFileSet += !"/" . mValue ;
  end foreach ;
  const @stringset uselessFileSet := allActualFileSet - allNeededFileSet ;
  foreach uselessFileSet do
    [@string deleteFile !inLIBPMPath . key] ;
  end foreach ;
end routine ;

#---------------------------------------------------------------------------*

end semantics ;

