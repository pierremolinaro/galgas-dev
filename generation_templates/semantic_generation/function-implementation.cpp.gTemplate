//-----------------------------------------------------------------------------*
//                                                                             *
//%!["Function '" + FUNCTION_NAME + "'" stringByLeftAndRightPadding !77 !' ']%*
//                                                                             *
//-----------------------------------------------------------------------------*

%!FUNCTION_IMPLEMENTATION%
//-----------------------------------------------------------------------------*
//  Function introspection                                                     *
//-----------------------------------------------------------------------------*

static const C_galgas_type_descriptor * functionArgs_%![FUNCTION_NAME identifierRepresentation]% [%![[FORMAL_ARGUMENT_LIST length] + 1 string]%] = {
%
  foreach FORMAL_ARGUMENT_LIST do
    %  & kTypeDescriptor_GALGAS_%![mFormalArgumentType identifierRepresentation]%,\n%
  end
%  NULL
} ;

//-----------------------------------------------------------------------------*

%
if [FORMAL_ARGUMENT_LIST length] == 0 then
  %static GALGAS_object functionWithGenericHeader_%![FUNCTION_NAME identifierRepresentation]% (%?^%C_Compiler * inCompiler,\n%
                                             !^%const cObjectArray & /* inEffectiveParameterArray */,\n%
                                             !^%const GALGAS_location & /* inErrorLocation */\n%
                                             !^%COMMA_LOCATION_ARGS) {\n%
  %  return function_%![FUNCTION_NAME identifierRepresentation]% (inCompiler COMMA_THERE).reader_object (THERE) ;\n%
  %}\n%
else
  %static GALGAS_object functionWithGenericHeader_%![FUNCTION_NAME identifierRepresentation]% (%?^%C_Compiler * inCompiler,\n%
                                             !^%const cObjectArray & inEffectiveParameterArray,\n%
                                             !^%const GALGAS_location & /* §§ inErrorLocation */\n%
                                             !^%COMMA_LOCATION_ARGS) {\n%
  foreach FORMAL_ARGUMENT_LIST do index IDX
    %  const GALGAS_%![mFormalArgumentType identifierRepresentation]% operand%![IDX string]% = GALGAS_%![mFormalArgumentType identifierRepresentation]
    %::extractObject (%?^%inEffectiveParameterArray.objectAtIndex (%![IDX string]% COMMA_HERE),
  %!^%inCompiler
  %!^%COMMA_THERE) ;\n%
  end
  %  return function_%![FUNCTION_NAME identifierRepresentation]% (%?^
  foreach FORMAL_ARGUMENT_LIST do index IDX
    %operand%![IDX string]%,\n%!^
  end
  %inCompiler\n%!^%COMMA_THERE).reader_object (THERE) ;\n%
  %}\n%
end
%
//-----------------------------------------------------------------------------*

C_galgas_function_descriptor functionDescriptor_%![FUNCTION_NAME identifierRepresentation]% (%?^![FUNCTION_NAME utf8Representation]%,\n%
                                            !^%functionWithGenericHeader_%![FUNCTION_NAME identifierRepresentation]%,\n%
                                            !^%& kTypeDescriptor_GALGAS_%!RETURN_TYPE_IDENTIFIER%,\n%
                                            !^![[FORMAL_ARGUMENT_LIST length] string]%,\n%
                                            !^%functionArgs_%![FUNCTION_NAME identifierRepresentation]%) ;

