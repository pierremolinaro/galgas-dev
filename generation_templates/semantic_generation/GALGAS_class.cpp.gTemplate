//---------------------------------------------------------------------------*

%if [CURRENT_ATTRIBUTE_LIST length] == 0 then
  %PMSInt32 GALGAS_%!TYPE_IDENTIFIER%::objectCompare (%?^%const GALGAS_%!TYPE_IDENTIFIER% * /* inOperand1 */,\n%
  %                                           %!^%const GALGAS_%!TYPE_IDENTIFIER% * /* inOperand2 */) {\n%
  %  return 0 ;\n%
  %}\n\n%
else
  %PMSInt32 GALGAS_%!TYPE_IDENTIFIER%::objectCompare (%?^%const GALGAS_%!TYPE_IDENTIFIER% * inOperand1,\n%
  %                                           %!^%const GALGAS_%!TYPE_IDENTIFIER% * inOperand2) {\n%
  %  macroValidObject (inOperand1, const GALGAS_%!TYPE_IDENTIFIER%) ;\n%
  %  macroValidObject (inOperand2, const GALGAS_%!TYPE_IDENTIFIER%) ;\n%
  %  PMSInt32 result = GALGAS_%!TYPE_IDENTIFIER%::objectCompare (inOperand1, inOperand2) ;\n%
  foreach CURRENT_ATTRIBUTE_LIST do
     %  if (0 == result) {\n%
     %    result = GALGAS_%![mAttributeTypeIndex identifierRepresentation]%::objectCompare (inOperand1->mAttribute_%![mAttributeName identifierRepresentation]%, inOperand2->mAttribute_%![mAttributeName identifierRepresentation]%) ;\n%
     %  }\n%
  end foreach
  %  return result ;\n%
  %}\n\n%
end if
%
//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (%?^
  foreach ALL_ATTRIBUTE_LIST
    do %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * constinAttribute_%![mAttributeName identifierRepresentation]
    between %,\n%!^
  end foreach
  if [ALL_ATTRIBUTE_LIST length] > 0 then
    %\n%!^%COMMA_LOCATION_ARGS%
  else
    %LOCATION_ARGS%
  end if
  %) :\n%
  %GALGAS_%!SUPER_TYPE_IDENTIFIER% (%
  foreach INHERITED_ATTRIBUTE_LIST
    do %constinAttribute_%![mAttributeName identifierRepresentation]
    between %, %
  end foreach
  if [INHERITED_ATTRIBUTE_LIST length] > 0 then
    % COMMA_THERE)%
  else
    %THERE)%
  end if
  foreach CURRENT_ATTRIBUTE_LIST do
    %,\n%
    %mAttribute_%![mAttributeName identifierRepresentation]% (constinAttribute_%![mAttributeName identifierRepresentation]%)%
  end foreach
% {
}

%
if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] == 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% * GALGAS_%!TYPE_IDENTIFIER%::constructor_new (LOCATION_ARGS) {\n%
  %  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;\n%
  %  macroMyNew (result, GALGAS_%!TYPE_IDENTIFIER% (THERE)) ;\n%
  %  return result ;\n%
  %}\n\n%
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,\n%
  %                              %!^%const PMSInt32 /* inIndentation */) {\n%
  %  ioString << "<class @"\n%
  %           << typeDescriptor ()->mGalgasTypeName\n%
  %           << ">" ;\n%
  %}\n\n%
end if

if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] > 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% * GALGAS_%!TYPE_IDENTIFIER%::constructor_new (%?^
  foreach ALL_ATTRIBUTE_LIST
    do %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * inAttribute_%![mAttributeName identifierRepresentation]
    between %,\n%!^
  end foreach
  if [ALL_ATTRIBUTE_LIST length] == 0 then
    %LOCATION_ARGS%  
  else
    %\n%!^%COMMA_LOCATION_ARGS%
  end if
  %) {
  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;
  if (%
    foreach ALL_ATTRIBUTE_LIST
      do %(NULL != inAttribute_%![mAttributeName identifierRepresentation]%)%
      between % && %
    end foreach
  %) {
    macroMyNew (result, GALGAS_%!TYPE_IDENTIFIER% (%
    foreach ALL_ATTRIBUTE_LIST
      do %inAttribute_%![mAttributeName identifierRepresentation]
      between %, %
    end foreach
    % COMMA_THERE)) ;\n%
  %  }\n%
  %  return result ;\n%
  %}\n\n%
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,\n%
  %                              %!^%const PMSInt32 /* inIndentation */) {\n%
  %  ioString << "<class @"\n%
  %           << typeDescriptor ()->mGalgasTypeName\n%
  %           << ":" ;\n%
  foreach CURRENT_ATTRIBUTE_LIST
    do %//  mAttribute_%![mAttributeName identifierRepresentation]%->description (ioString, inIndentation + 1) ;\n%
    between %  ioString << ", " ;\n%
  end foreach
  %  ioString << ">" ;\n%
  %}\n\n%
end if

%//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::~GALGAS_%!TYPE_IDENTIFIER% (void) {
% foreach CURRENT_ATTRIBUTE_LIST do
    %  macroReleaseObject (mAttribute_%![mAttributeName identifierRepresentation]%) ;\n%
  end foreach
%}\n\n%

if (not IS_ABSTRACT) & (SUPER_TYPE_IDENTIFIER != "class") then
%//---------------------------------------------------------------------------*

GALGAS_%!SUPER_TYPE_IDENTIFIER% * GALGAS_%!TYPE_IDENTIFIER%::reader_%!SUPER_TYPE_IDENTIFIER% (UNUSED_LOCATION_ARGS) {
  macroRetainObject (this) ;
  return (GALGAS_%!SUPER_TYPE_IDENTIFIER% *) this ;
}

%end if

foreach CONCRETE_METHOD_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  !generateProcedure [
    !"GALGAS_" . TYPE_IDENTIFIER . "::method_" . [mMethodName identifierRepresentation]
    !mSignature
    !mInstructionList
    !false # Method is not const
    !"C_Compiler"
    !true # Generate location Argument
    !false # Do not release input arguments
  ]
end foreach

foreach CURRENT_ATTRIBUTE_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * GALGAS_%!TYPE_IDENTIFIER%::reader_%![mAttributeName identifierRepresentation]% (UNUSED_LOCATION_ARGS) {\n%
  %  macroRetainObject (mAttribute_%![mAttributeName identifierRepresentation]%) ;\n%
  %  return mAttribute_%![mAttributeName identifierRepresentation]% ;\n%
  %}\n\n%
end foreach
