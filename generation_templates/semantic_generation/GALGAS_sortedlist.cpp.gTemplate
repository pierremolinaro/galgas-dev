//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (LOCATION_ARGS) :
GALGAS_sortedlist (%![[ATTRIBUTE_LIST length] string]% COMMA_THERE) {
}

//---------------------------------------------------------------------------*

PMSInt32 GALGAS_%!TYPE_IDENTIFIER%::compareSortedListElements (%?^%cRootObjectArray & inLeftAttributeList,
                                                %!^%cRootObjectArray & inRightAttributeList) const {
  PMSInt32 result = 0 ;
% foreach SORT_ATTRIBUTE_LIST do
    %  if (result == 0) {\n%
    %    result = % if mAscendingOrder then else %- % end if%genericObjectCompareFunction (inLeftAttributeList [%![mAttributeIndex string]%], inRightAttributeList [%![mAttributeIndex string]%]) ;\n%
    %  }\n%
  end foreach
%  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::insulate (%?^%GALGASap_%!TYPE_IDENTIFIER% & ioOperand
                     %!^%COMMA_LOCATION_ARGS) {
  if (ioOperand.isValid () && (ioOperand.ptr (HERE)->retainCount () > 1)) {
    GALGASap_%!TYPE_IDENTIFIER% p (GALGAS_%!TYPE_IDENTIFIER%::constructor_emptySortedList (THERE)) ;
    p.ptr (HERE)->copyFrom (ioOperand.ptr (HERE)) ;
    ioOperand = p ;
  }
}

//---------------------------------------------------------------------------*

GALGASap_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_emptySortedList (LOCATION_ARGS) {
  GALGAS_%!TYPE_IDENTIFIER% * p = NULL ;
  macroMyNew (p, GALGAS_%!TYPE_IDENTIFIER% (THERE)) ;
  return GALGASap_%!TYPE_IDENTIFIER% (p) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER% * GALGAS_%!TYPE_IDENTIFIER%::constructor_sortedListWithValue (%?COL0
  foreach ATTRIBUTE_LIST
  do index IDX %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * inOperand%![IDX string]
  between %,\n%!COL0
  end foreach
  %\n%!COL0%COMMA_LOCATION_ARGS) {
  GALGAS_%!TYPE_IDENTIFIER% * result = GALGAS_%!TYPE_IDENTIFIER%::constructor_emptySortedList (THERE) ;
  GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
  foreach ATTRIBUTE_LIST
  do index IDX %inOperand%![IDX string]
  between %, %
  end foreach
%} ;
  result->addObject (attributeArray) ;
  return result ;
}

//---------------------------------------------------------------------------*

void addAssign_operation (%?^%GALGAS_%!TYPE_IDENTIFIER% * & ioResult%
  foreach ATTRIBUTE_LIST
  do index IDX %,\n%!^%GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * inOperand%![IDX string]
  end foreach
%
    %!^%COMMA_UNUSED_LOCATION_ARGS) {
  if (ioResult != NULL) {
    GALGAS_%!TYPE_IDENTIFIER%::insulate (ioResult COMMA_HERE) ;
    GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
    foreach ATTRIBUTE_LIST
    do index IDX %inOperand%![IDX string]
    between %, %
    end foreach
    %} ;
    ioResult->addObject (attributeArray) ;
  }
}

//---------------------------------------------------------------------------*

void dotAssign_operation (GALGAS_%!TYPE_IDENTIFIER% * & ioResult,
                          GALGAS_%!TYPE_IDENTIFIER% * inOperand
                          COMMA_LOCATION_ARGS) {
  if (ioResult != NULL) {
    GALGAS_%!TYPE_IDENTIFIER%::insulate (ioResult COMMA_THERE) ;
    ioResult->appendSortedList (inOperand) ;
  }
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER% * operator_concat (%?^%GALGAS_%!TYPE_IDENTIFIER% * inOperand1,
                                %!^%GALGAS_%!TYPE_IDENTIFIER% * inOperand2
                                %!^%COMMA_LOCATION_ARGS) {
  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;
  if ((NULL != inOperand1) && (NULL != inOperand2)) {
    result = GALGAS_%!TYPE_IDENTIFIER%::constructor_emptySortedList (THERE) ;
    result->appendSortedList (inOperand1) ;
    result->appendSortedList (inOperand2) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::modifier_popSmallest (%?^
  foreach ATTRIBUTE_LIST
  do index IDX %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * & outOperand%![IDX string] %,\n%!^
  end foreach
           %C_Compiler * inCompiler\n%
         !^%COMMA_LOCATION_ARGS) {
%
  foreach ATTRIBUTE_LIST do index IDX
    %  macroReleaseObject (outOperand%![IDX string] %) ;\n%
    %  outOperand%![IDX string] % = NULL ;\n%
  end foreach
%  GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
    foreach ATTRIBUTE_LIST
      do %NULL%
      between %, %
    end foreach %} ;
  removeSmallestObject (attributeArray, inCompiler COMMA_THERE) ;\n%
  foreach ATTRIBUTE_LIST do index IDX
%  outOperand%![IDX string]% = (GALGAS_%![mAttributeTypeIndex identifierRepresentation]% *) attributeArray [%![IDX string]%] ;\n%
%  macroNullOrValidObjectThere (outOperand%![IDX string]%, GALGAS_%![mAttributeTypeIndex identifierRepresentation]%) ;\n%
  end foreach
%}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::modifier_popGreatest (%?^
  foreach ATTRIBUTE_LIST
  do index IDX %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * & outOperand%![IDX string] %,\n%!^
  end foreach
           %C_Compiler * inCompiler\n%
         !^%COMMA_LOCATION_ARGS) {
%
  foreach ATTRIBUTE_LIST do index IDX
    %  macroReleaseObject (outOperand%![IDX string] %) ;\n%
    %  outOperand%![IDX string] % = NULL ;\n%
  end foreach
%  GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
    foreach ATTRIBUTE_LIST
      do %NULL%
      between %, %
    end foreach %} ;
  removeGreatestObject (attributeArray, inCompiler COMMA_THERE) ;\n%
  foreach ATTRIBUTE_LIST do index IDX
%  outOperand%![IDX string]% = (GALGAS_%![mAttributeTypeIndex identifierRepresentation]% *) attributeArray [%![IDX string]%] ;\n%
%  macroNullOrValidObjectThere (outOperand%![IDX string]%, GALGAS_%![mAttributeTypeIndex identifierRepresentation]%) ;\n%
  end foreach
%}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::method_smallest (%?^
  foreach ATTRIBUTE_LIST
  do index IDX %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * & outOperand%![IDX string] %,\n%!^
  end foreach
     %C_Compiler * inCompiler\n%
     !^%COMMA_LOCATION_ARGS) {
%
  foreach ATTRIBUTE_LIST do index IDX
    %  macroReleaseObject (outOperand%![IDX string] %) ;\n%
    %  outOperand%![IDX string] % = NULL ;\n%
  end foreach
%  GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
    foreach ATTRIBUTE_LIST
      do %NULL%
      between %, %
    end foreach %} ;
  smallestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;
%  foreach ATTRIBUTE_LIST do index IDX
%  outOperand%![IDX string]% = (GALGAS_%![mAttributeTypeIndex identifierRepresentation]% *) attributeArray [%![IDX string]%] ;\n%
%  macroNullOrValidObjectThere (outOperand%![IDX string]%, GALGAS_%![mAttributeTypeIndex identifierRepresentation]%) ;\n%
  end foreach
%}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::method_greatest (%?^
  foreach ATTRIBUTE_LIST
  do index IDX %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% * & outOperand%![IDX string] %,\n%!^
  end foreach
     %C_Compiler * inCompiler\n%
     !^%COMMA_LOCATION_ARGS) {
%
  foreach ATTRIBUTE_LIST do index IDX
    %  macroReleaseObject (outOperand%![IDX string] %) ;\n%
    %  outOperand%![IDX string] % = NULL ;\n%
  end foreach
%  GALGAS_object * attributeArray [%![[ATTRIBUTE_LIST length] string]%] = {%
    foreach ATTRIBUTE_LIST
      do %NULL%
      between %, %
    end foreach %} ;
  greatestObjectAttributeList (attributeArray, inCompiler COMMA_THERE) ;
%  foreach ATTRIBUTE_LIST do index IDX
%  outOperand%![IDX string]% = (GALGAS_%![mAttributeTypeIndex identifierRepresentation]% *) attributeArray [%![IDX string]%] ;\n%
%  macroNullOrValidObjectThere (outOperand%![IDX string]%, GALGAS_%![mAttributeTypeIndex identifierRepresentation]%) ;\n%
  end foreach
%}

