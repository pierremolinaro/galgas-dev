//-----------------------------------------------------------------------------*
//                                                                             *
//%!["Category method '@" + CLASS_NAME + " " + METHOD_NAME + "'" stringByLeftAndRightPadding !77 !' ']%*
//                                                                             *
//-----------------------------------------------------------------------------*

typedef void (*categoryMethodSignature_%![CLASS_NAME identifierRepresentation]%_%![METHOD_NAME identifierRepresentation]%) (%?^
%const cPtr_%![CLASS_NAME identifierRepresentation]% * inObject%
  foreach FORMAL_ARGUMENT_LIST do index IDX
    %,\n%!^
    if mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentConstantIn] then
      %const GALGAS_% ![mFormalArgumentType identifierRepresentation] % constinArgument% ![IDX string]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentInOut] then
      %GALGAS_% ![mFormalArgumentType identifierRepresentation] % & ioArgument% ![IDX string]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentOut] then
      %GALGAS_% ![mFormalArgumentType identifierRepresentation] % & outArgument% ![IDX string]
    else # argumentIn
      %GALGAS_% ![mFormalArgumentType identifierRepresentation] % inArgument% ![IDX string]
    end
  end
  %,\n%!^%C_Compiler * inCompiler%
  %\n %!^%COMMA_LOCATION_ARGS) ;

//-----------------------------------------------------------------------------*

void enterCategoryMethod_%![METHOD_NAME identifierRepresentation]% (%?^%const int32_t inClassIndex,
               %!^%categoryMethodSignature_%![CLASS_NAME identifierRepresentation]%_%![METHOD_NAME identifierRepresentation]% inMethod) ;

//-----------------------------------------------------------------------------*

void callCategoryMethod_%![METHOD_NAME identifierRepresentation]% (%?^%const cPtr_%![CLASS_NAME identifierRepresentation]% * inObject%
  foreach FORMAL_ARGUMENT_LIST do
    %,\n%!^
    if mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentConstantIn] then
      %const GALGAS_%![mFormalArgumentType identifierRepresentation]% constin_%![mFormalArgumentName identifierRepresentation]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentInOut] then
      %GALGAS_%![mFormalArgumentType identifierRepresentation]% & io_%![mFormalArgumentName identifierRepresentation]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentOut] then
      %GALGAS_%![mFormalArgumentType identifierRepresentation]% & out_%![mFormalArgumentName identifierRepresentation]
    else # argumentIn
      %GALGAS_%![mFormalArgumentType identifierRepresentation]% in_%![mFormalArgumentName identifierRepresentation]
    end
  end
  %,\n%!^%C_Compiler * inCompiler%
  %\n%!^%COMMA_LOCATION_ARGS) ;

