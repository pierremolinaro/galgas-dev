//---------------------------------------------------------------------------*

class %GRAMMAR_NAME% : %
foreach [GRAMMAR_COMPONENT_ROOT mSyntaxComponents]
  do %public % ([[mValue string] stringByDeletingPathExtension])
  between %,\n                                 %
end foreach
% {
%
foreach NON_TERMINAL_MAP do
  foreach mLabels do
    %  public : virtual void nt_%([key string])%_%([mLabelName string])% (%LEXIQUE_CLASS% &%
    foreach mFormalParameters do
        %,\n                                %([mFormalParameterPassingMode generation1ForFormalParameter])%GGS_%([mFormalParameterTypeName string])([mFormalParameterPassingMode generation2ForFormalParameter])
    end foreach
    %) ;\n%
    if [[GRAMMAR_COMPONENT_ROOT mStartSymbol] string] == [key string] then
      %  public : static void _performSourceFileParsing_%([mLabelName string])% (C_Compiler & inCompiler,
                                const C_String & inDependancyExtension,
                                const C_String & inDependancyPath,
                                GGS_string * inSentStringPtr,
                                const GGS_lstring inFileName%
      foreach mFormalParameters do
        %,\n                                %([mFormalParameterPassingMode generation1ForFormalParameter])%GGS_%([mFormalParameterTypeName string])([mFormalParameterPassingMode generation2ForFormalParameter])
      end foreach
      %\n                                COMMA_LOCATION_ARGS) ;\n%
      %  public : static void _performSourceStringParsing_%([mLabelName string])% (C_Compiler & inCompiler,
                                GGS_string * inSentStringPtr,
                                const GGS_string inSourceString%
      foreach mFormalParameters do
        %,\n                                %([mFormalParameterPassingMode generation1ForFormalParameter])%GGS_%([mFormalParameterTypeName string])([mFormalParameterPassingMode generation2ForFormalParameter])
      end foreach
      %\n                                COMMA_LOCATION_ARGS) ;\n%
    end if
  end foreach
  if mHasParseLabel then
  %  public : virtual void nt_%([key string])%_parse (%LEXIQUE_CLASS% &) ;\n%
  end if
end foreach
foreach ADDED_NON_TERMINAL_LIST do
  %public : virtual PMSInt16 %mValue% (%LEXIQUE_CLASS% &) ;\n%
end foreach
%
} ;

//---------------------------------------------------------------------------*

#endif
