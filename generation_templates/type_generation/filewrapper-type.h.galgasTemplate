//----------------------------------------------------------------------------------------------------------------------
//                                                                                                                     *
//%!["@filewrapper type" stringByLeftAndRightPadding !117 !' ']%*
//                                                                                                                     *
//----------------------------------------------------------------------------------------------------------------------

class cRegularFileWrapper {
  public : const char * mName ;
  public : const char * mExtension ;
  public : const bool mIsTextFile ; // True: text file, false: binary file
  public : const uint32_t mFileLength ;
  public : const char * mContents ;

//--- Constructor
  public : cRegularFileWrapper (const char * inName,
                                const char * inExtension,
                                const bool inIsTextFile,
                                const uint32_t inFileLength,
                                const char * inContents) ;

//--- No copy
  private : cRegularFileWrapper (const cRegularFileWrapper &) ;
  private : cRegularFileWrapper & operator = (const cRegularFileWrapper &) ;
} ;

//----------------------------------------------------------------------------------------------------------------------

class cDirectoryWrapper {
  public : const char * mDirectoryName ;
  public : const uint32_t mFileCount ;
  public : const cRegularFileWrapper * * const mFiles ;
  public : const uint32_t mDirectoryCount ;
  public : const cDirectoryWrapper * * mDirectories ;

//--- Constructor
  public : cDirectoryWrapper (const char * inDirectoryName,
                              const uint32_t inFileCount,
                              const cRegularFileWrapper * * const inFiles,
                              const uint32_t inDirectoryCount,
                              const cDirectoryWrapper * * inDirectories) ;

//--- No copy
  private : cDirectoryWrapper (const cDirectoryWrapper &) ;
  private : cDirectoryWrapper & operator = (const cDirectoryWrapper &) ;
} ;

//----------------------------------------------------------------------------------------------------------------------

class GALGAS_filewrapper : public AC_GALGAS_root {
//--------------------------------- Private data members
  private : const cDirectoryWrapper * mRootDirectoryPtr ;
  private : C_String mCurrentDirectory ;

//--------------------------------- Accessors
  public : VIRTUAL_IN_DEBUG inline bool isValid (void) const { return NULL != mRootDirectoryPtr ; }
  public : VIRTUAL_IN_DEBUG inline void drop (void) { mRootDirectoryPtr = NULL ; }

//--------------------------------- Default constructor
  public : GALGAS_filewrapper (void) ;

//--------------------------------- Native constructor
  public : GALGAS_filewrapper (const cDirectoryWrapper & inRootDirectory) ;

//--------------------------------- Handle copy
  public : GALGAS_filewrapper (const GALGAS_filewrapper & inSource) ;
  public : GALGAS_filewrapper & operator = (const GALGAS_filewrapper & inSource) ;

%

