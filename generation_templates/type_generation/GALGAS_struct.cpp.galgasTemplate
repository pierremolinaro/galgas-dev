//----------------------------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (void) :
%
for () in PROPERTY_LIST
  do %mProperty_%![mPropertyName identifierRepresentation]% ()%
  between %,\n%
end% {
}

//----------------------------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER%::~ GALGAS_%!TYPE_IDENTIFIER% (void) {
}

//----------------------------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (%?^
for () in PROPERTY_LIST
  do index IDX %const GALGAS_%![mPropertyTypeProxy identifierRepresentation]% & inOperand%![IDX string]
  between %,\n%!^
end%) :\n%
for () in PROPERTY_LIST do index IDX
  %mProperty_%![mPropertyName identifierRepresentation]% (inOperand%![IDX string]%)%
  between %,\n%
end
% {
}

%if HAS_DEFAULT_CONSTRUCTOR then
%//----------------------------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_default (UNUSED_LOCATION_ARGS) {
  return GALGAS_%!TYPE_IDENTIFIER% (%?^
for () in PROPERTY_LIST do
   %GALGAS_%![mPropertyTypeProxy identifierRepresentation]%::constructor_%![[mPropertyTypeProxy mDefaultConstructorName] identifierRepresentation]% (HERE)%
  between %,\n%!^
end%) ;
}

%end
%//----------------------------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_new (%?^
for () in PROPERTY_LIST
  do index IDX %const GALGAS_%![mPropertyTypeProxy identifierRepresentation]% & inOperand%![IDX string]
  between %,\n%!^
end% \n%!^%COMMA_UNUSED_LOCATION_ARGS) {
  GALGAS_%!TYPE_IDENTIFIER% result ;
  if (%
for () in PROPERTY_LIST
  do index IDX %inOperand%![IDX string]%.isValid ()%
  between % && %
end
%) {
    result = GALGAS_%!TYPE_IDENTIFIER% (%
for () in PROPERTY_LIST
  do index IDX %inOperand%![IDX string]
  between %, %
end

%) ;
  }
  return result ;
}

//----------------------------------------------------------------------------------------------------------------------

typeComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (const GALGAS_%!TYPE_IDENTIFIER% & inOperand) const {
   typeComparisonResult result = kOperandEqual ;
%for () in PROPERTY_LIST do
  %  if (result == kOperandEqual) {\n%
  %    result = mProperty_%![mPropertyName identifierRepresentation]%.objectCompare (inOperand.mProperty_%![mPropertyName identifierRepresentation]%) ;\n%
  %  }\n%
end
%  return result ;
}

//----------------------------------------------------------------------------------------------------------------------

bool GALGAS_%!TYPE_IDENTIFIER%::isValid (void) const {
  return %
    for () in PROPERTY_LIST
      do %mProperty_%![mPropertyName identifierRepresentation]%.isValid ()%
      between % && %
    end
% ;
}

//----------------------------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::drop (void) {
%  for () in PROPERTY_LIST
    do %  mProperty_%![mPropertyName identifierRepresentation]%.drop () ;\n%
  end
%}

//----------------------------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,
                              %!^%const int32_t inIndentation) const {
  ioString << "<struct @%!TYPE_NAME%:" ;
  if (! isValid ()) {
    ioString << " not built" ;
  }else{
%
for () in PROPERTY_LIST
  do index IDX %    mProperty_%![mPropertyName identifierRepresentation]%.description (ioString, inIndentation+1) ;\n%
  between %    ioString << ", " ;\n%
end
%  }
  ioString << ">" ;
}

%for () in PROPERTY_LIST do
  if mHasGetter then
  %//----------------------------------------------------------------------------------------------------------------------\n\n%
  %GALGAS_%![mPropertyTypeProxy identifierRepresentation]% GALGAS_%!TYPE_IDENTIFIER%::getter_%![mPropertyName identifierRepresentation]% (UNUSED_LOCATION_ARGS) const {\n%
  %  return mProperty_%![mPropertyName identifierRepresentation]% ;\n%
  %}\n\n%
  end
end
%

