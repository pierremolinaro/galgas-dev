%
for () in CONSTANT_LIST do
  if [mAssociatedValueTypeList length] > 0 then
    %//---------------------------------------------------------------------------------------------------------------------*\n\n%
    %cEnumAssociatedValues_%!TYPE_IDENTIFIER%_%!mConstantName.string%::cEnumAssociatedValues_%!TYPE_IDENTIFIER%_%!mConstantName.string% (%?^
    for () in mAssociatedValueTypeList
    do index idx %const GALGAS_%!mValue.string% & inAssociatedValue%![idx string]
    between %,\n%!^
    end
    %\n%!^%COMMA_LOCATION_ARGS) :\n%
    %cEnumAssociatedValues (THERE)%
    for () in mAssociatedValueTypeList do index idx
    %,\nmAssociatedValue%![idx string]% (inAssociatedValue%![idx string]%)%
    end
    % {\n%   
    %} ;\n\n%
  end
end

%//---------------------------------------------------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (void) :
mAssociatedValues (),
mEnum (kNotBuilt) {
}

%
for () in CONSTANT_LIST do
  %//---------------------------------------------------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_%![mConstantName identifierRepresentation]% (%?^
  if [mAssociatedValueTypeList length] == 0 then
    %UNUSED_LOCATION_ARGS%
  else
    for () in mAssociatedValueTypeList
    do index idx %const GALGAS_%!mValue.string% & inAssociatedValue%![idx string]
    between %,\n%!^
    end
    %\n%!^%COMMA_LOCATION_ARGS%
  end
  %) {\n%
  %  GALGAS_%!TYPE_IDENTIFIER% result ;\n%
  %  result.mEnum = kEnum_%![mConstantName identifierRepresentation]% ;\n%
  if [mAssociatedValueTypeList length] > 0 then
    %  cEnumAssociatedValues * ptr = NULL ;\n%
    %  macroMyNew (ptr, cEnumAssociatedValues_%!TYPE_IDENTIFIER%_%!mConstantName.string% (%
    for () in mAssociatedValueTypeList
    do index idx %inAssociatedValue%![idx string]
    between %, %
    end
    % COMMA_THERE)) ;\n%
    %  result.mAssociatedValues.setPointer (ptr) ;\n%
    %  macroDetachSharedObject (ptr) ;\n%
  end
  %  return result ;\n%
  %}\n\n%
end

%//---------------------------------------------------------------------------------------------------------------------*

static const char * gEnumNameArrayFor_%!TYPE_IDENTIFIER% [%![[CONSTANT_LIST length] + 1 string]%] = {
  "(not built)"%
for () in CONSTANT_LIST
   do %,\n  %![mConstantName utf8Representation]
end%
} ;

//---------------------------------------------------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,
%                                       !^%const int32_t /* inIndentation */) const {
  ioString << "<enum @%!TYPE_NAME%: " << gEnumNameArrayFor_%!TYPE_IDENTIFIER% [mEnum] << ">" ;
}

//---------------------------------------------------------------------------------------------------------------------*

typeComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (const GALGAS_%!TYPE_IDENTIFIER% & inOperand) const {
  typeComparisonResult result = kOperandNotValid ;
  if (isValid () && inOperand.isValid ()) {
    if (mEnum < inOperand.mEnum) {
      result = kFirstOperandLowerThanSecond ;
    }else if (mEnum > inOperand.mEnum) {
      result = kFirstOperandGreaterThanSecond ;
    }else{
      result = kOperandEqual ;
    }
  }
  return result ;
}

