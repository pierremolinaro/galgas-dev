//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (void) :
#ifndef DO_NOT_GENERATE_CHECKINGS
  : public GALGAS__root
#endif
mObjectPtr (NULL) {
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::~GALGAS_%!TYPE_IDENTIFIER% (void) {
  macroReleaseObject (mObjectPtr) ;
}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::drop (void) {
  macroReleaseObject (mObjectPtr) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (const GALGAS_%!TYPE_IDENTIFIER% & inSource) :
#ifndef DO_NOT_GENERATE_CHECKINGS
  : public GALGAS__root
#endif
mObjectPtr (NULL) {
  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER% & GALGAS_%!TYPE_IDENTIFIER%::operator = (const GALGAS_%!TYPE_IDENTIFIER% & inSource) {
  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

%if [CURRENT_ATTRIBUTE_LIST length] == 0 then
  %enumComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (%?^%const GALGAS_%!TYPE_IDENTIFIER% & inOperand1,\n%
  %                        %!^%const GALGAS_%!TYPE_IDENTIFIER% & inOperand2) {\n%
  %  return (inOperand1.isValid () && inOperand2.isValid ()) ? kOperandEqual : kOperandNotValid ;\n%
  %}\n\n%
else
  %enumComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (%?^%const GALGAS_%!TYPE_IDENTIFIER% & inOperand1,\n%
  %                        %!^%const GALGAS_%!TYPE_IDENTIFIER% & inOperand2) {\n%
  %  enumComparisonResult result = (inOperand1.isValid () && inOperand2.isValid ()) ? kOperandEqual : kOperandNotValid ;\n%
  foreach CURRENT_ATTRIBUTE_LIST do
    %  if (kOperandEqual == result) {\n%
    %    result = GALGAS_%![mAttributeTypeIndex identifierRepresentation]%::objectCompare (inOperand1.ptr (HERE)->mAttribute_%![mAttributeName identifierRepresentation]%, inOperand2.ptr (HERE)->mAttribute_%![mAttributeName identifierRepresentation]%) ;\n%
    %  }\n%
  end foreach
  %  return result ;\n%
  %}\n\n%
end if

if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] == 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_new (LOCATION_ARGS) {\n%
  %  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;\n%
  %  macroMyNew (result, GALGAS_%!TYPE_IDENTIFIER% (THERE)) ;\n%
  %  return result ;\n%
  %}\n\n%
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,\n%
  %                              %!^%const PMSInt32 /* inIndentation */) const {\n%
  %  ioString << "<class @"\n%
  %           << typeDescriptor ()->mGalgasTypeName\n%
  %           << ">" ;\n%
  %}\n\n%
end if

if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] > 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_new (%?^
  foreach ALL_ATTRIBUTE_LIST
    do %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% & inAttribute_%![mAttributeName identifierRepresentation]
    between %,\n%!^
  end foreach
  if [ALL_ATTRIBUTE_LIST length] == 0 then
    %LOCATION_ARGS%  
  else
    %\n%!^%COMMA_LOCATION_ARGS%
  end if
  %) {
  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;
  if (%
    foreach ALL_ATTRIBUTE_LIST
      do %inAttribute_%![mAttributeName identifierRepresentation]%.isValid ()%
      between % && %
    end foreach
  %) {
    macroMyNew (result, GALGAS_%!TYPE_IDENTIFIER% (%
    foreach ALL_ATTRIBUTE_LIST
      do %inAttribute_%![mAttributeName identifierRepresentation]
      between %, %
    end foreach
    % COMMA_THERE)) ;\n%
  %  }\n%
  %  return result ;\n%
  %}\n\n%
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,\n%
  %                              %!^%const PMSInt32 /* inIndentation */) const {\n%
  %  ioString << "<class @"\n%
  %           << typeDescriptor ()->mGalgasTypeName\n%
  %           << ":" ;\n%
  foreach CURRENT_ATTRIBUTE_LIST
    do %//  mAttribute_%![mAttributeName identifierRepresentation]%->description (ioString, inIndentation + 1) ;\n%
    between %  ioString << ", " ;\n%
  end foreach
  %  ioString << ">" ;\n%
  %}\n\n%
end if

%//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::~GALGAS_%!TYPE_IDENTIFIER% (void) {
}\n\n%

if ([ALL_ATTRIBUTE_LIST length] > 0) & not IS_ABSTRACT then
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::insulate (LOCATION_ARGS) {\n%
  %  if (isValid () && (ptr (HERE)->retainCount () > 1)) {\n%
  %    GALGAS_%!TYPE_IDENTIFIER% p = constructor_new (%
  foreach ALL_ATTRIBUTE_LIST
    do %ptr (HERE)->mAttribute_%![mAttributeName identifierRepresentation]
    between %, %
  end foreach
  % COMMA_THERE) ;\n%
  %    *this = p ;\n%
  %  }\n%
  %}\n\n%
end if

foreach CONCRETE_METHOD_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  !generateProcedure [
    !"GALGAS_" . TYPE_IDENTIFIER . "::method_" . [mMethodName identifierRepresentation]
    !mSignature
    !mInstructionList
    !false # Method is not const
    !"C_Compiler"
    !true # Generate location Argument
    !false # Generate 'resetTemplateString'
  ]
end foreach

foreach CURRENT_ATTRIBUTE_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% GALGAS_%!TYPE_IDENTIFIER%::reader_%![mAttributeName identifierRepresentation]% (UNUSED_LOCATION_ARGS) const {\n%
  %  return mAttribute_%![mAttributeName identifierRepresentation]% ;\n%
  %}\n\n%
end foreach

if not IS_ABSTRACT then
  foreach ALL_ATTRIBUTE_LIST do
    %//---------------------------------------------------------------------------*\n\n%
    %void GALGAS_%!TYPE_IDENTIFIER%::modifier_set%![[mAttributeName stringByCapitalizingFirstCharacter] identifierRepresentation]% (%?^%GALGAS_%![mAttributeTypeIndex identifierRepresentation]% inValue\n%
                          !^%COMMA_UNUSED_LOCATION_ARGS) {\n%
    %  mAttribute_%![mAttributeName identifierRepresentation]% = inValue ;\n%
    %}\n\n%
  end foreach
end if
