GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (void) :
#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS__root (),
#endif
mObjectPtr (NULL) {
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (cPtr_%!TYPE_IDENTIFIER% * inSourcePtr) :
#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS__root (),
#endif
mObjectPtr (NULL) {
  macroAssignObject (mObjectPtr, inSourcePtr) ;
  macroNullOrValidObject (mObjectPtr, cPtr_%!TYPE_IDENTIFIER%) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::~GALGAS_%!TYPE_IDENTIFIER% (void) {
  macroReleaseObject (mObjectPtr) ;
}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::drop (void) {
  macroReleaseObject (mObjectPtr) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (const GALGAS_%!TYPE_IDENTIFIER% & inSource) :
#ifndef DO_NOT_GENERATE_CHECKINGS
  GALGAS__root (),
#endif
mObjectPtr (NULL) {
  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;
}

//---------------------------------------------------------------------------*

GALGAS_%!TYPE_IDENTIFIER% & GALGAS_%!TYPE_IDENTIFIER%::operator = (const GALGAS_%!TYPE_IDENTIFIER% & inSource) {
  macroAssignObject (mObjectPtr, inSource.mObjectPtr) ;
  return * this ;
}

//---------------------------------------------------------------------------*

GALGAS_string GALGAS_%!TYPE_IDENTIFIER%::reader_description (UNUSED_LOCATION_ARGS) const {
  GALGAS_string result ;
  if (isValid ()) {
    C_String s ;
    description (s, 0) ;
    result = GALGAS_string (s) ;
  }
  return result ;
}

//---------------------------------------------------------------------------*

void GALGAS_%!TYPE_IDENTIFIER%::description (%?^%C_String & ioString,
                           %!^%const PMSInt32 inIndentation) const {
  ioString << "<@"
           << typeDescriptor ()->mGalgasTypeName
           << ":" ;
  if (isValid ()) {
    mObjectPtr->description (ioString, inIndentation) ;
  }else{
    ioString << "not built" ;
  }
  ioString << ">" ;
}

//---------------------------------------------------------------------------*

%if [CURRENT_ATTRIBUTE_LIST length] == 0 then
  %enumComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (const GALGAS_%!TYPE_IDENTIFIER% & inOperand) const {\n%
  %  return (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;\n%
  %}\n\n%
else
  %enumComparisonResult GALGAS_%!TYPE_IDENTIFIER%::objectCompare (const GALGAS_%!TYPE_IDENTIFIER% & inOperand) const {\n%
  %  enumComparisonResult result = (isValid () && inOperand.isValid ()) ? kOperandEqual : kOperandNotValid ;\n%
  foreach CURRENT_ATTRIBUTE_LIST do
    %  if (kOperandEqual == result) {\n%
    %    result = mObjectPtr->mAttribute_%![mAttributeName identifierRepresentation]%.objectCompare (inOperand.mObjectPtr->mAttribute_%![mAttributeName identifierRepresentation]%) ;\n%
    %  }\n%
  end foreach
  %  return result ;\n%
  %}\n\n%
end if

if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] == 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_new (LOCATION_ARGS) {\n%
  %  GALGAS_%!TYPE_IDENTIFIER% * result = NULL ;\n%
  %  macroMyNew (result, GALGAS_%!TYPE_IDENTIFIER% (THERE)) ;\n%
  %  return result ;\n%
  %}\n\n%
end if

if (not IS_ABSTRACT) & ([ALL_ATTRIBUTE_LIST length] > 0) then
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::constructor_new (%?^
  foreach ALL_ATTRIBUTE_LIST
    do %const GALGAS_%![mAttributeTypeIndex identifierRepresentation]% & inAttribute_%![mAttributeName identifierRepresentation]
    between %,\n%!^
  end foreach
  if [ALL_ATTRIBUTE_LIST length] == 0 then
    %LOCATION_ARGS%  
  else
    %\n%!^%COMMA_LOCATION_ARGS%
  end if
  %) {
  GALGAS_%!TYPE_IDENTIFIER% result ;
  if (%
    foreach ALL_ATTRIBUTE_LIST
      do %inAttribute_%![mAttributeName identifierRepresentation]%.isValid ()%
      between % && %
    end foreach
  %) {
    macroMyNew (result.mObjectPtr, cPtr_%!TYPE_IDENTIFIER% (%
    foreach ALL_ATTRIBUTE_LIST
      do %inAttribute_%![mAttributeName identifierRepresentation]
      between %, %
    end foreach
    % COMMA_THERE)) ;\n%
  %  }\n%
  %  return result ;\n%
  %}\n\n%
end if

if ([ALL_ATTRIBUTE_LIST length] > 0) & not IS_ABSTRACT then
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::insulate (LOCATION_ARGS) {\n%
  %  if (isValid () && (mObjectPtr->retainCount () > 1)) {\n%
  %    cPtr_%!TYPE_IDENTIFIER% * r = NULL ;\n%
  %    macroMyNew (r, cPtr_%!TYPE_IDENTIFIER% (%
  foreach ALL_ATTRIBUTE_LIST
    do %mObjectPtr->mAttribute_%![mAttributeName identifierRepresentation]
    between %, %
  end foreach
  % COMMA_THERE)) ;\n%
  %    macroAssignObject (mObjectPtr, r) ;\n%
  %    macroReleaseObject (r) ;\n%
  %  }\n%
  %}\n\n%
end if

foreach CONCRETE_METHOD_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  !generateProcedure [
    !"cPtr_" . TYPE_IDENTIFIER . "::method_" . [mMethodName identifierRepresentation]
    !mSignature
    !mInstructionList
    !true # Method is const
    !"C_Compiler"
    !true # Generate location Argument
    !false # Generate 'resetTemplateString'
  ]
end foreach


foreach CURRENT_ATTRIBUTE_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  %GALGAS_%![mAttributeTypeIndex identifierRepresentation]% GALGAS_%!TYPE_IDENTIFIER%::reader_%![mAttributeName identifierRepresentation]% (UNUSED_LOCATION_ARGS) const {\n%
  %  GALGAS_%![mAttributeTypeIndex identifierRepresentation]% result ;\n%
  %  if (NULL != mObjectPtr) {\n%
  %    result = mObjectPtr->mAttribute_%![mAttributeName identifierRepresentation]% ;\n%
  %  }\n%
  %  return result ;\n%
  %}\n\n%
end foreach

foreach CURRENT_ATTRIBUTE_LIST do
  %//---------------------------------------------------------------------------*\n\n%
  %void GALGAS_%!TYPE_IDENTIFIER%::modifier_set%![[mAttributeName stringByCapitalizingFirstCharacter] identifierRepresentation]% (%?^%GALGAS_%![mAttributeTypeIndex identifierRepresentation]% inValue\n%
                        !^%COMMA_UNUSED_LOCATION_ARGS) {\n%
  %  if (NULL != mObjectPtr) {\n%
  %    mObjectPtr->mAttribute_%![mAttributeName identifierRepresentation]% = inValue ;\n%
  %  }\n%
  %}\n\n%
end foreach

%//---------------------------------------------------------------------------*
//%!["Pointer class for @" . TYPE_NAME . " class" stringByLeftAndRightPadding !75 !' ']%*
//---------------------------------------------------------------------------*

cPtr_%!TYPE_IDENTIFIER%::cPtr_%!TYPE_IDENTIFIER% (%?^
  foreach ALL_ATTRIBUTE_LIST
    do %const GALGAS_%![mAttributeTypeIndex identifierRepresentation]% & in_%![mAttributeName identifierRepresentation]
    between %,\n%!^
  end foreach
  if [ALL_ATTRIBUTE_LIST length] > 0 then
    %\n%!^%COMMA_LOCATION_ARGS%
  else
    %LOCATION_ARGS%
  end if
%) :
cPtr_class (THERE)%
  foreach ALL_ATTRIBUTE_LIST
    do %,\n%  %mAttribute_%![mAttributeName identifierRepresentation]% (in_%![mAttributeName identifierRepresentation]%)%
  end foreach
% {
}

