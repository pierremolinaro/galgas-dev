#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  semantics definitions for semantics component 
#                                           
#  Copyright (C) 1997, ..., 2015 Pierre Molinaro.
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public
#  License as published by the Free Software Foundation.
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  G E T    E N U M E R A T I O N    L I S T     
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @dataPredefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
  !@string outEnumeratedType
{
  [!?ioUnifiedTypeMap makeEntryFromString !"uint" ?let uintTypeIndex]
  outEnumerationList = {}
  outEnumerationList += !uintTypeIndex !"data"
  outEnumeratedType = "uint"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @timerPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @objectPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @stringPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .plusEqualOperatorWithExpression | .infixAddOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @charPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @boolPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixNotOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @uintPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sintPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod  | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @uint64PredefinedTypeAST getSupportedOperatorFlags ->@operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sint64PredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .incDecOperator | .incDecOperatorNoOVF | .generateDescriptionGetterUtilityMethod | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @doublePredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .prefixPlusOperator | .prefixMinusOperator | .infixModOperator | .infixDivOperatorNoOVF
    | .generateDescriptionGetterUtilityMethod | .isComparable
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @binarysetPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAndOperator | .infixOrOperator | .infixXorOperator
    | .prefixTildeOperator | .infixShiftOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @typePredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @dataPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .generateEnumerationHelperMethods
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @functionPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @locationPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @filewrapperPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

