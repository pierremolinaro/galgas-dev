#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#  semantics definitions for semantics component                                                                       *
#                                                                                                                      *
#  Copyright (C) 1997, ..., 2015 Pierre Molinaro.                                                                      *
#                                                                                                                      *
#  e-mail : molinaro@ls2n.fr                                                                                           *
#                                                                                                                      *
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                                                                                                      *
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                                                                                            *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#  G E T    E N U M E R A T I O N    L I S T                                                                           *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @stringsetPredefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
  !@string outEnumeratedType
{
  [@unifiedTypeMap-proxy makeProxyFromString !?ioUnifiedTypeMap !"string" ?let stringTypeIndex]
  outEnumerationList = {}
  outEnumerationList += !stringTypeIndex !"key"
  outEnumeratedType = "string"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @dataPredefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
  !@string outEnumeratedType
{
  [@unifiedTypeMap-proxy makeProxyFromString !?ioUnifiedTypeMap !"uint" ?let uintTypeIndex]
  outEnumerationList = {}
  outEnumerationList += !uintTypeIndex !"data"
  outEnumeratedType = "uint"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#  G E T    M O D I F I E R    M A P                                                                                   *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @stringsetPredefinedTypeAST getSetterMap
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@setterMap outSetterMap
{
  [@unifiedTypeMap-proxy makeProxyFromString !?ioUnifiedTypeMap !"string" ?let stringType]
  outSetterMap = {}
  [!?outSetterMap insertKey
    !@lstring.new {!"removeKey" !@location.here}
    !@methodKind. definedAsMember
    !@formalParameterSignature. listWithValue {!["" nowhere] !stringType !.argumentIn !"inKey"}
    !false # No Compiler argument
    !@methodQualifier. isBasic
    !""
  ]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#  G E T    S U P P O R T E D    O P E R A T O R    F L A G S                                                          *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @applicationPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @bigintPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod | .prefixPlusOperator | .prefixMinusOperator |
             .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator |
             .infixShiftOperator | .infixModOperator |
             .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator |
             .incDecOperator | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @timerPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @objectPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @stringPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .plusEqualOperatorWithExpression | .infixAddOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @charPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @boolPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixNotOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @uintPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sintPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod  | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @uint64PredefinedTypeAST getSupportedOperatorFlags ->@operators outFlags {
  outFlags = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sint64PredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .incDecOperator | .incDecOperatorNoOVF | .generateDescriptionGetterUtilityMethod | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @doublePredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .prefixPlusOperator | .prefixMinusOperator | .infixModOperator | .infixDivOperatorNoOVF
    | .generateDescriptionGetterUtilityMethod | .isComparable
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @stringsetPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixSubOperator
    | .infixAndOperator | .infixOrOperator
    | .generateDescriptionGetterUtilityMethod | .plusEqualOperatorWithExpression
    | .generateEnumerationHelperMethods | .isComparable
    | .generateCopyConstructorAndAssignmentOperator
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @binarysetPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .infixAndOperator | .infixOrOperator | .infixXorOperator
    | .prefixTildeOperator | .infixShiftOperator
    | .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @typePredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @dataPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod | .generateEnumerationHelperMethods
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @functionPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @locationPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @filewrapperPredefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .generateDescriptionGetterUtilityMethod
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @stringsetPredefinedTypeAST getAddAssignArgumentList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@functionSignature outAddAssignArgumentList
{
  [@unifiedTypeMap-proxy makeProxyFromString !?ioUnifiedTypeMap !"string" ?let @unifiedTypeMap-proxy stringTypeIndex]
  outAddAssignArgumentList = {!["" nowhere] !stringTypeIndex !"inString"}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

