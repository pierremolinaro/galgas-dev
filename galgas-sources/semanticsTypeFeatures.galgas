#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  semantics definitions for semantics component
#
#  Copyright (C) 1997, ..., 2015 Pierre Molinaro.
#
#  MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  G E T    E N U M E R A T I O N    L I S T
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

override method @dataPredefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
  !@string outEnumeratedType
{
  [!?ioUnifiedTypeMap makeEntryFromString !"uint" ?let uintTypeIndex]
  outEnumerationList = {}
  outEnumerationList += !uintTypeIndex !"data"
  outEnumeratedType = "uint"
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @timerPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @stringPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .plusEqualOperatorWithExpression | .infixAddOperator
    | .generateDescriptionGetterUtilityMethod | .isComparable
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @charPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sintPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .generateDescriptionGetterUtilityMethod  | .incDecOperator | .incDecOperatorNoOVF | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sint64PredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .infixModOperator | .infixShiftOperator | .prefixPlusOperator
    | .prefixMinusOperator | .prefixMinusOperatorNoOVF
    | .infixAndOperator | .infixOrOperator | .infixXorOperator | .prefixTildeOperator
    | .incDecOperator | .incDecOperatorNoOVF | .generateDescriptionGetterUtilityMethod | .isComparable
    | .infixAddOperatorNoOVF | .infixSubOperatorNoOVF | .infixMulOperatorNoOVF | .infixDivOperatorNoOVF
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @doublePredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .infixAddOperator | .infixSubOperator | .infixMulOperator | .infixDivOperator
    | .prefixPlusOperator | .prefixMinusOperator | .infixModOperator | .infixDivOperatorNoOVF
    | .generateDescriptionGetterUtilityMethod | .isComparable
    | .plusEqualOperatorWithExpression | .minusEqualOperatorWithExpression
    | .mulEqualOperatorWithExpression | .divEqualOperatorWithExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @typePredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @dataPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .generateEnumerationHelperMethods
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @functionPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @locationPredefinedTypeAST getSupportedOperatorFlags -> @operators {
  result = .generateDescriptionGetterUtilityMethod | .isComparable
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

