#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

shared class @warningInstructionAST : @semanticInstructionAST {
  @semanticExpressionAST mLocationExpression
  @semanticExpressionAST mMessageExpression
  @fixitListAST mFixitListAST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas3InstructionsSyntax {

  #·····················································································································

  rule <semantic_instruction>
    !@semanticInstructionAST outInstruction {
    $warning$
    let instructionLocation = @location.here
    <expression> ?var @semanticExpressionAST mReceiverExpression
    $:$
    <expression> ?let @semanticExpressionAST mWarningExpression
    <issue_fixit> ?let @fixitListAST fixitListAST
    outInstruction = @warningInstructionAST.new {
      !instructionLocation
      !mReceiverExpression
      !mWarningExpression
      !fixitListAST
    }
  }
  
  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! CONTEXT
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @warningInstructionAST enterInstructionInSemanticContext ?!@unifiedTypeMap ioTypeMap {
  [self.mLocationExpression enterExpressionInSemanticContext !?ioTypeMap]
  [self.mMessageExpression enterExpressionInSemanticContext !?ioTypeMap]
  [self.mFixitListAST enterFixItListInSemanticContext !?ioTypeMap]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SEMANTICS
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
  
override method @warningInstructionAST analyzeSemanticInstruction
  ?let @lstring inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph ioUsefulEntitiesGraph
  ?let @analysisContext inAnalysisContext
  ?!@semanticInstructionListForGeneration ioInstructionListForGeneration
  ?!@localVarManager ioVariableMap {
#---
  analyzeErrorOrWarningInstruction (
    !inUsefulnessCallerEntityName
    !?ioUsefulEntitiesGraph
    !inAnalysisContext
    !self.mLocationExpression
    !self.mMessageExpression
    !self.mFixitListAST
    !self.mInstructionLocation
    !"warning"
    !?ioVariableMap
    ?let locationExpression
    ?let messageExpression
    ?let fixitListForGeneration
  )
#--- Generate instruction
  ioInstructionListForGeneration += !@warningInstructionForGeneration.new {
    !self.mInstructionLocation
    !locationExpression
    !messageExpression
    !fixitListForGeneration
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

shared class @warningInstructionForGeneration : @semanticInstructionForGeneration {
  @location mInstructionLocation
  @semanticExpressionForGeneration mReceiverExpression
  @semanticExpressionForGeneration mWarningExpression
  @fixitListForGeneration mFixitListForGeneration
}

#······················································································································*

override method @warningInstructionForGeneration generateInstruction
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  ?let @bool inGenerateSyntaxDirectedTranslationString
  ?!@string ioGeneratedCode
 {
#--- Receiver expression
  @string receiverCppVarName
  [self.mReceiverExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?receiverCppVarName]
#--- Receiver expression
  [self.mWarningExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let messageCppVarName
  ]
#--- Fix It array
  [self.mFixitListForGeneration generateFixIt
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    !inGenerateSyntaxDirectedTranslationString
    !?ioGeneratedCode
    ?@string fixItArrayCppName
  ]
#--- Generate warning instruction
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
  ioGeneratedCode += compilerCppName () + "->emitSemanticWarning ("
    + receiverCppVarName + ", "
    + messageCppVarName + ", "
    + fixItArrayCppName + " "
    + [self.mInstructionLocation commaSourceFile] + ") ;\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
