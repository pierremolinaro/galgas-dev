#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#  Generate predefined types                                                                                           *
#                                                                                                                      *
#  Copyright (C) 2010, ..., 2010 Pierre Molinaro.                                                                      *
#                                                                                                                      *
#  e-mail : molinaro@ls2n.fr                                                                                           *
#                                                                                                                      *
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                                                                                                      *
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                                                                                            *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#           D E T E C T    ' T R U E '    E X P R E S S I O N                                                          *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @semanticExpressionForGeneration isTrueExpression -> @bool {
  result = false
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @trueExpressionForGeneration isTrueExpression ->@bool {
  result = true
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                                                                                                      *
#           E X P R E S S I O N    G E N E R A T I O N                                                                 *
#                                                                                                                      *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @orExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".operator_or ("
                   + rightTemporaryOperand  + [mLocation commaSourceFile] + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @orShortExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string leftTemporaryOperand
  ]
#--- Generate Comparison
  let testVar = "test_" + [ioTemporaryVariableIndex string] ioTemporaryVariableIndex ++
  ioGeneratedCode += "GALGAS_bool " + testVar + " = " + leftTemporaryOperand + " ;\n"
  ioGeneratedCode += "if (kBoolTrue != " + testVar + ".boolEnum ()) {\n"
#--- Right operand
  [!?ioGeneratedCode incIndentation !2]
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string rightTemporaryOperand
  ]
  ioGeneratedCode += testVar + " = " + rightTemporaryOperand + " ;\n"
  [!?ioGeneratedCode decIndentation !2]
  ioGeneratedCode += "}\n"
  outCppExpression = testVar
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @xorExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression
{
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let leftTemporaryOperand
  ]
#--- Right operand
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let rightTemporaryOperand
  ]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".operator_xor ("
                  +  rightTemporaryOperand + [mLocation commaSourceFile] + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @closedSliceExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let leftTemporaryOperand
  ]
#--- Right operand
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let rightTemporaryOperand
  ]
#--- Generate Comparison
  outCppExpression = 
   "GALGAS_range (" + leftTemporaryOperand + ", "
   +  rightTemporaryOperand + ".substract_operation (" + leftTemporaryOperand + ", " + compilerCppName () + [mLocation commaSourceFile] + ").add_operation (GALGAS_uint (1), " + compilerCppName () + [mLocation commaSourceFile] + "))"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @openedSliceExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression
{
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let leftTemporaryOperand
  ]
#--- Right operand
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let rightTemporaryOperand
  ]
#--- Generate Comparison
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
  outCppExpression = 
   "GALGAS_range (" + leftTemporaryOperand + ", "
   +  rightTemporaryOperand + ".substract_operation (" + leftTemporaryOperand + ", " + compilerCppName ()
   + [mLocation commaSourceFile] + "))"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @andExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string leftTemporaryOperand
  ]
#--- Right operand
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string rightTemporaryOperand
  ]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".operator_and ("
                  + rightTemporaryOperand + [mLocation commaSourceFile] + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @andShortExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  [mLeftExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string leftTemporaryOperand
  ]
#--- Generate Comparison
  let testVar = "test_" + [ioTemporaryVariableIndex string] ioTemporaryVariableIndex ++
  ioGeneratedCode += "GALGAS_bool " + testVar + " = " + leftTemporaryOperand + " ;\n"
  ioGeneratedCode += "if (kBoolTrue == " + testVar + ".boolEnum ()) {\n"
#--- Right operand
  [!?ioGeneratedCode incIndentation !2]
  [mRightExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?let @string rightTemporaryOperand
  ]
  ioGeneratedCode += testVar + " = " + rightTemporaryOperand + " ;\n"
  [!?ioGeneratedCode decIndentation !2]
  ioGeneratedCode += "}\n"
  outCppExpression = testVar
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @multiplicationExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".multiply_operation ("
                  + rightTemporaryOperand + ", " + compilerCppName () + [mLocation commaSourceFile] + ")"
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @multiplicationExpressionNoOverflowForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".multiply_operation_no_ovf (" + rightTemporaryOperand + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @divisionExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".divide_operation ("
                  + rightTemporaryOperand + ", " + compilerCppName () + [mLocation commaSourceFile] + ")"
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @divisionExpressionNoOverflowForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".divide_operation_no_ovf (" + rightTemporaryOperand + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @moduloExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  [[mLeftExpression mResultType] addHeaderFileName !?ioInclusionSet]
#--- Left operand
  @string leftTemporaryOperand
  [mLeftExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?leftTemporaryOperand]
#--- Right operand
  @string rightTemporaryOperand
  [mRightExpression generateExpression !?ioGeneratedCode !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?rightTemporaryOperand]
#--- Generate Comparison
  outCppExpression = leftTemporaryOperand + ".modulo_operation ("
                  + rightTemporaryOperand + ", " + compilerCppName () + [mLocation commaSourceFile] + ")"
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @extractObjectInExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression {
  outCppExpression = "temp_" + [ioTemporaryVariableIndex string] ioTemporaryVariableIndex ++
#--- Receiver expression
  [mReceiverExpression generateExpression
    !?ioGeneratedCode
    !?ioInclusionSet
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    ?var @string receiverExpression
  ]
#--- Generate code
  outCppExpression = "GALGAS_" + [mResultType identifierRepresentation]
  + "::extractObject (" + receiverExpression
  + ", " + compilerCppName ()
  + [mLocation commaSourceFile] + ")"
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

