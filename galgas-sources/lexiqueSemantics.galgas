

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @terminalList {
  public let @lstring mTerminalName
  public let @lexicalSentValueList mSentAttributeList
  public let @string mSyntaxErrorMessage
  public let @bool isEndOfTemplateMark %selector
  public let @bool atomicSelection %selector # True if atomic selection in source editor
  public let @uint mStyleIndex # 0 if default style
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalExplicitTokenListMap {
  public let @lstring mTerminal
  public let @bool atomicSelection %selector # True if atomic selection in source editor
  public let @bool isEndOfTemplateMark %selector
  insert insertKey error message "the '%K' terminal has been already declared in the list"
  search searchKey error message "the '%K' terminal is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

sortedlist @tokenSortedlist {
  public let @uint mLength
  public let @string mName
  public let @string mTerminalName
}{
  mLength <, mName <
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalExplicitTokenListMapMap {
  public let @lexicalExplicitTokenListMap mExplicitTokenListMap
  public let @tokenSortedlist mTokenSortedList
  public let @bool mShouldBeGenerated
  insert insertKey error message "the '%K' token list has been already declared in %L"
  search searchKey error message "the '%K' token list is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalMessageMap {
  public let @lstring mLexicalMessage
  public let @bool mMessageIsUsed
  insert insertKey error message "the '%K' message has been already declared in %L"
  search searchKey error message "the '%K' message is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalRoutineFormalArgumentList {
  public let @lexicalArgumentModeAST mLexicalFormalArgumentMode
  public let @lexicalTypeEnum mLexicalFormalArgumentType
  public let @string mArgumentNameForComment
 }

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalRoutineMap {
  public let @lexicalRoutineFormalArgumentList mLexicalRoutineFormalArgumentList
  public let @stringlist mErrorMessageList
  public let @bool mIsExtern
  insert insertKey error message "the '%K' lexical routine has been already declared"
  search searchKey error message "the '%K' lexical routine is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalFunctionFormalArgumentList {
  public let @lexicalTypeEnum mLexicalType
  public let @string mArgumentNameForComment
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalFunctionMap {
  public let @lexicalFunctionFormalArgumentList mLexicalTypeList
  public let @lexicalTypeEnum mReturnedLexicalType
  public let @string mReplacementFunctionName # If obsolete, the name of replacement routine
  public let @bool mIsExtern
  insert insertKey error message "the '%K' lexical function has been already declared"
  search searchKey error message "the '%K' lexical function is not declared"
}


#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @templateDelimitorList {
  public let @lstring mStartString
  public let @lstring mEndString
  public let @bool mPreservesStartDelimiter
}

#------------------------------------------------------------------*
#                       Styles map                         
#------------------------------------------------------------------*

map @styleMap {
  public let @lstring mComment
  public let @uint mStyleIndex # Allways > 0
  insert insertKey error message "the '%K' style is already declared in %L"
  search searchKey error message "the '%K' style is not declared"
}

#------------------------------------------------------------------*

map @lexicalTagMap {
  insert insertKey error message "the '%K' tag is already declared in %L",
                                 "the '%K' tag declaration shadows the tag declared in %L"
  search searchKey error message "the '%K' tag is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct @lexiqueAnalysisContext {
  public let @string mLexiqueName
  public let @lexicalRoutineMap mLexicalRoutineMessageMap
  public let @lexicalFunctionMap mLexicalFunctionMap
  public var @lexicalMessageMap mLexicalMessageMap
  public var @terminalMap mTerminalMap
  public var @terminalList mTerminalList
  public var  @lexicalAttributeMap mLexicalAttributeMap
  public var @lexicalExplicitTokenListMapMap mLexicalTokenListMap
  public var @stringset mUnicodeStringToGenerate
  public var @templateDelimitorList mTemplateDelimitorList
  public var @styleMap mStyleMap
  public let @stringset mUnicodeTestFunctions
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

