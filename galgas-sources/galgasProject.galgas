//------------------------------------------------------------------------------------------------
//
//  Galgas 3 'project' syntax
//
//  Copyright (C) 2014, ..., 2024 Pierre Molinaro.
//
//  MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software
// and associated documentation files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//------------------------------------------------------------------------------------------------

list @galgas3QualifiedFeatureList {
  public let @lstring mFeatureName
  public let @lstring mFeatureValue
}

//------------------------------------------------------------------------------------------------

struct @galgas3ProjectComponentAST {
  public let @lstringlist mProjectSourceList
  public let @lbigint mMajorVersion
  public let @lbigint mMinorVersion
  public let @lbigint mRevisionVersion
  public let @lstringlist mGenerationFeatureList
  public let @galgas3QualifiedFeatureList mQualifiedFeatureList
  public let @lstring mTargetName
  public let @location mEndOfSourceFile
}

//------------------------------------------------------------------------------------------------

indexing grammar galgas3ProjectGrammar "LL1" {
  syntax galgas3ProjectSyntax

  <project_component_start_symbol> !@galgas3ProjectComponentAST outComponent

}

//------------------------------------------------------------------------------------------------

syntax galgas3ProjectSyntax (galgasScanner3) {

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  rule <project_header> !@lbigint majorVersion
                        !@lbigint minorVersion
                        !@lbigint revisionVersion
                        !@lstring targetName {
    $project$
    $($
    $literalInt$ ?majorVersion
    $:$
    $literalInt$ ?minorVersion
    $:$
    $literalInt$ ?revisionVersion
    $)$
    $->$
    $"string"$ ?targetName
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  rule <project_component_start_symbol> !@galgas3ProjectComponentAST outProjectComponentAST {
    <project_header>
      ?let @lbigint majorVersion
      ?let @lbigint minorVersion
      ?let @lbigint revisionVersion
      ?let @lstring targetName
    ${$
    var @lstringlist projectSourceList = @()
    var @lstringlist generateFeatureList = @()
    var @galgas3QualifiedFeatureList qualifiedFeatureList = @()
    repeat
    while
      $%quietOutputByDefault$
      generateFeatureList += !["quietOutputByDefault" here]
    while
      $%MacOS$
      generateFeatureList += !["MacOS" here]
    while
      $%makefile-macosx$
      generateFeatureList += !["makefile-macosx" here]
    while
      $%makefile-unix$
      generateFeatureList += !["makefile-unix" here]
    while
      $%makefile-x86linux32-on-macosx$
      generateFeatureList += !["makefile-x86linux32-on-macosx" here]
    while
      $%makefile-x86linux64-on-macosx$
      generateFeatureList += !["makefile-x86linux64-on-macosx" here]
    while
      $%makefile-win32-on-macosx$
      generateFeatureList += !["makefile-win32-on-macosx" here]
    while
      $%codeblocks-windows$
      generateFeatureList += !["codeblocks-windows" here]
    while
      $%codeblocks-linux32$
      generateFeatureList += !["codeblocks-linux32" here]
    while
      $%codeblocks-linux64$
      generateFeatureList += !["codeblocks-linux64" here]
    while
      $%applicationBundleBase$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["applicationBundleBase" here] !featureValue
    while
      $%libpmAtPath$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["libpmAtPath" here] !featureValue
    while
      $%tool-source$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["tool-source" here] !featureValue
    while
      $%MacOSDeployment$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["MacOSDeployment" here] !featureValue
    while
      $%macCodeSign$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["macCodeSign" here] !featureValue
    while
      $%app-source$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["app-source" here] !featureValue
    while
      $%app-link$
      $:$
      $"string"$ ?let @lstring featureValue
      qualifiedFeatureList += !["app-link" here] !featureValue
    while
      $"string"$ ?let @lstring filePath
      projectSourceList += !filePath
    while
      $in$
      <folderDirectory> !"" !?projectSourceList
    end
    $}$
    outProjectComponentAST = @galgas3ProjectComponentAST {
      !projectSourceList
      !majorVersion
      !minorVersion
      !revisionVersion
      !generateFeatureList
      !qualifiedFeatureList
      !targetName
      !@location.here
    }
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  rule <folderDirectory> ?@string inCurrentRelativePath ?!@lstringlist ioProjectSourceList {
    $"string"$ ?var relativeDirectory
    if (relativeDirectory.string.length > 0) && (relativeDirectory.string.lastCharacter != '/') then
      relativeDirectory.string += "/"
    end
    ${$
    repeat
    while
      $in$
      <folderDirectory> !inCurrentRelativePath + relativeDirectory.string !?ioProjectSourceList
    while
      $"string"$ ?let relativePath
      ioProjectSourceList += !@(
        inCurrentRelativePath + relativeDirectory.string + relativePath.string,
        relativePath.location
      )
    end
    $}$
  }

  // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

}

//------------------------------------------------------------------------------------------------
