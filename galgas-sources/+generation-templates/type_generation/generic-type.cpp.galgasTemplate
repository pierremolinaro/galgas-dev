//--------------------------------------------------------------------------------------------------
//
//     %!"@" + TYPE_NAME + " generic code implementation"%
//
//--------------------------------------------------------------------------------------------------

const C_galgas_type_descriptor kTypeDescriptor_GALGAS_%!TYPE_IDENTIFIER% (%?^%"%!TYPE_NAME%",
                       %!^ if [SUPER_TYPE_INDEX isNull] then %nullptr% else %& kTypeDescriptor_GALGAS_%![SUPER_TYPE_INDEX identifierRepresentation] end %) ;

//--------------------------------------------------------------------------------------------------

const C_galgas_type_descriptor * GGS_%!TYPE_IDENTIFIER%::staticTypeDescriptor (void) const {
  return & kTypeDescriptor_GALGAS_%!TYPE_IDENTIFIER% ;
}

//--------------------------------------------------------------------------------------------------

AC_GALGAS_root * GGS_%!TYPE_IDENTIFIER%::clonedObject (void) const {
  AC_GALGAS_root * result = nullptr ;
  if (isValid ()) {
    macroMyNew (result, GGS_%!TYPE_IDENTIFIER% (*this)) ;
  }
  return result ;
}

//--------------------------------------------------------------------------------------------------

GGS_%!TYPE_IDENTIFIER% GGS_%!TYPE_IDENTIFIER%::extractObject (%?^%const GGS_object & inObject,
               %!^%Compiler * inCompiler
               %!^%COMMA_LOCATION_ARGS) {
  GGS_%!TYPE_IDENTIFIER% result ;
  const GGS_%!TYPE_IDENTIFIER% * p = (const GGS_%!TYPE_IDENTIFIER% *) inObject.embeddedObject () ;
  if (nullptr != p) {
    if (nullptr != dynamic_cast <const GGS_%!TYPE_IDENTIFIER% *> (p)) {
      result = *p ;
    }else{
      inCompiler->castError ("%!TYPE_NAME%", p->dynamicTypeDescriptor () COMMA_THERE) ;
    }  
  }
  return result ;
}

