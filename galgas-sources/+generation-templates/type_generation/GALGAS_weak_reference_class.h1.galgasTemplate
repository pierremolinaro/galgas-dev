//--------------------------------------------------------------------------------------------------
//%!" Phase 1: @" + WEAK_REF_TYPE_IDENTIFIER + " weak reference class"%
//--------------------------------------------------------------------------------------------------

class GGS_%!WEAK_REF_TYPE_IDENTIFIER% : public %
  if SUPER_WEAK_REF_TYPE_IDENTIFIER == ""
  then %AC_GALGAS_weak_reference%
  else %GGS_%!SUPER_WEAK_REF_TYPE_IDENTIFIER
  end% {
//--------------------------------- Default constructor
  public: GGS_%!WEAK_REF_TYPE_IDENTIFIER% (void) ;

//--------------------------------- Constructor and assignment from strong reference
  public: GGS_%!WEAK_REF_TYPE_IDENTIFIER% (const class GGS_%!CLASS_TYPE_IDENTIFIER% & inSource) ;

  public: GGS_%!WEAK_REF_TYPE_IDENTIFIER% & operator = (const class GGS_%!CLASS_TYPE_IDENTIFIER% & inSource) ;

//--------------------------------- Constructor and assignment from optional reference
%if OPTIONAL_CLASS_TYPE_IDENTIFIER != "" then
%  public: GGS_%!WEAK_REF_TYPE_IDENTIFIER% (const class GGS_%!OPTIONAL_CLASS_TYPE_IDENTIFIER% & inSource) ;
%end%
//--------------------------------- nil initializer
  public: inline static GGS_%!WEAK_REF_TYPE_IDENTIFIER% init_nil (void) {
    GGS_%!WEAK_REF_TYPE_IDENTIFIER% result ;
    macroMyNew (result.mProxyPtr, cPtr_weakReference_proxy (HERE)) ;
    return result ;
  }

//--------------------------------- Bang operator
  public: GGS_%!CLASS_TYPE_IDENTIFIER% bang_%!WEAK_REF_TYPE_IDENTIFIER% (Compiler * inCompiler COMMA_LOCATION_ARGS) const ;

//--------------------------------- isValuated
  public: inline bool isValuated (void) const {
    return isValid () && (ptr () != nullptr) ;
  }

//--------------------------------- Unwrapped value
  public: GGS_%!CLASS_TYPE_IDENTIFIER% unwrappedValue (void) const ;

//--------------------------------- GALGAS read only properties
  public: inline GGS_bool readProperty_isNil (void) const {
    return GGS_bool (isValid (), ptr () == nullptr) ;
  }

  public: inline GGS_bool readProperty_isSome (void) const {
    return GGS_bool (isValid (), ptr () != nullptr) ;
  }

