//--------------------------------------------------------------------------------------------------
//
//%!"'@" + TYPE_IDENTIFIER + "' graph"%
//
//--------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER%::GALGAS_%!TYPE_IDENTIFIER% (void) :
AC_GALGAS_graph () {
}

//--------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::class_func_emptyGraph (LOCATION_ARGS) {
  GALGAS_%!TYPE_IDENTIFIER% result ;
  result.makeNewEmptyGraph (THERE) ;
  return result ;
}

%for (mInsertModifierName mInsertErrorMessage) in INSERT_MODIFIER_LIST do
%//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::setter_%![mInsertModifierName identifierRepresentation]% (%?^%GALGAS_lstring inKey%
  for (mFormalSelector mFormalArgumentType mFormalArgumentName) in [ASSOCIATED_LIST_TYPE definition].mAddAssignOperatorArguments do (IDX)
    %,\n%!^%GALGAS_%![mFormalArgumentType identifierRepresentation]% inArgument_%![IDX string]
  end
  %,\n%!^%Compiler * inCompiler\n%
  !^%COMMA_LOCATION_ARGS) {
  capCollectionElement attributes ;
  GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]%::makeAttributesFromObjects (attributes%
  for (mFormalSelector mFormalArgumentType mFormalArgumentName) in [ASSOCIATED_LIST_TYPE definition].mAddAssignOperatorArguments
  do (IDX) %, inArgument_%![IDX string]
  end
  % COMMA_THERE) ;
  const char * kErrorMessage = %![mInsertErrorMessage utf8RepresentationEscapingQuestionMark]% ;
  internalAddNode (inKey, kErrorMessage, attributes, inCompiler COMMA_THERE) ;
}

%
end
%
//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::method_topologicalSort (%?^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outSortedList,
                       %!^%GALGAS_lstringlist & outSortedKeyList,
                       %!^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outUnsortedList,
                       %!^%GALGAS_lstringlist & outUnsortedKeyList,
                       %!^%Compiler * inCompiler
                       %!^%COMMA_LOCATION_ARGS) const {
  capCollectionElementArray sortedList ;
  capCollectionElementArray unsortedList ;
  internalTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (sortedList) ;
  outUnsortedList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (unsortedList) ;
}

//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::method_depthFirstTopologicalSort (%?^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outSortedList,
                       %!^%GALGAS_lstringlist & outSortedKeyList,
                       %!^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outUnsortedList,
                       %!^%GALGAS_lstringlist & outUnsortedKeyList,
                       %!^%Compiler * inCompiler
                       %!^%COMMA_LOCATION_ARGS) const {
  capCollectionElementArray sortedList ;
  capCollectionElementArray unsortedList ;
  internalDepthFirstTopologicalSort (sortedList, outSortedKeyList, unsortedList, outUnsortedKeyList, inCompiler COMMA_THERE) ;
  outSortedList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (sortedList) ;
  outUnsortedList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (unsortedList) ;
}


//--------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::getter_reversedGraph (LOCATION_ARGS) const {
  GALGAS_%!TYPE_IDENTIFIER% result ;
  result.reversedGraphFromGraph (*this COMMA_THERE) ;
  return result ;
}

//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::method_circularities (%?^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outInfoList,
                       %!^%GALGAS_lstringlist & outKeyList
                       %!^%COMMA_LOCATION_ARGS) const {
  capCollectionElementArray infoList ;
  internalFindCircularities (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (infoList) ;
}

//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::method_nodesWithNoSuccessor (%?^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outInfoList,
                       %!^%GALGAS_lstringlist & outKeyList
                       %!^%COMMA_LOCATION_ARGS) const {
  capCollectionElementArray infoList ;
  internalNodesWithNoSuccessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (infoList) ;
}

//--------------------------------------------------------------------------------------------------

void GALGAS_%!TYPE_IDENTIFIER%::method_nodesWithNoPredecessor (%?^%GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% & outInfoList,
                       %!^%GALGAS_lstringlist & outKeyList
                       %!^%COMMA_LOCATION_ARGS) const {
  capCollectionElementArray infoList ;
  internalNodesWithNoPredecessor (infoList, outKeyList COMMA_THERE) ;
  outInfoList = GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% (infoList) ;
}

//--------------------------------------------------------------------------------------------------

GALGAS_%!TYPE_IDENTIFIER% GALGAS_%!TYPE_IDENTIFIER%::getter_subgraphFromNodes (%?^%const GALGAS_lstringlist & inStartKeyList,
                                        %!^%const GALGAS_stringset & inKeysToExclude,
                                        %!^%Compiler * inCompiler
                                        %!^%COMMA_LOCATION_ARGS) const {
  GALGAS_%!TYPE_IDENTIFIER% result ;
  subGraph (result, inStartKeyList, inKeysToExclude, inCompiler COMMA_THERE) ;
  return result ;
}

//--------------------------------------------------------------------------------------------------

GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% GALGAS_%!TYPE_IDENTIFIER%::getter_nodeList (UNUSED_LOCATION_ARGS) const {
  GALGAS_%![ASSOCIATED_LIST_TYPE identifierRepresentation]% resultingList ;
  if (isValid ()) {
    resultingList = graph () ;
  }
  return resultingList ;
}

//--------------------------------------------------------------------------------------------------

GALGAS_lstringlist GALGAS_%!TYPE_IDENTIFIER%::getter_accessibleNodesFrom (%?^%const GALGAS_lstringlist & inStartKeyList,
                                        %!^%const GALGAS_stringset & inNodesToExclude,
                                        %!^%Compiler * inCompiler
                                        %!^%COMMA_LOCATION_ARGS) const {
  GALGAS_lstringlist result ;
  GALGAS_%!TYPE_IDENTIFIER% resultingGraph ;
  subGraph (resultingGraph,
            inStartKeyList,
            inNodesToExclude,
            inCompiler
            COMMA_THERE) ;
  if (resultingGraph.isValid ()) {
    result = resultingGraph.getter_lkeyList (THERE) ;
  }
  return result ;
}

