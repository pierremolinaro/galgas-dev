//--------------------------------------------------------------------------------------------------
//   enum %!TYPE_IDENTIFIER%
//--------------------------------------------------------------------------------------------------

class GALGAS_%!TYPE_IDENTIFIER% : public AC_GALGAS_root {
//--------------------------------- Default constructor
  public: GALGAS_%!TYPE_IDENTIFIER% (void) ;

//--------------------------------- Enumeration
  public: enum class Enumeration {
    invalid%
    for (mConstantName *) in CONSTANT_LIST do
      %,\n    enum_%![mConstantName identifierRepresentation]
    end
%
  } ;
  
//--------------------------------- Private properties
%
if HAS_ASSOCIATED_VALUES then
  %  private: AC_GALGAS_enumerationAssociatedValues mAssociatedValues ;\n%
end
%  private: Enumeration mEnum ;

//--------------------------------- Associated value extraction
%
for (mConstantName mAssociatedValueTypeList) in CONSTANT_LIST do
  if [mAssociatedValueTypeList count] > 0 then
    %  public: VIRTUAL_IN_DEBUG void getAssociatedValuesFor_%![mConstantName identifierRepresentation]% (%?^
    for (mType valueName) in mAssociatedValueTypeList
    do (idx) %class GALGAS_%![mType identifierRepresentation]% & out_%!valueName
    between %,\n%!^
    end
    %) const ;\n%
  end
end
%
//--------------------------------- Accessors
  public: VIRTUAL_IN_DEBUG inline bool isValid (void) const override {
    return Enumeration::invalid != mEnum ;
  }

  public: VIRTUAL_IN_DEBUG inline void drop (void) override {
    mEnum = Enumeration::invalid ;
%
if HAS_ASSOCIATED_VALUES then
%    mAssociatedValues.drop () ;\n%
end
%  }

  public: inline Enumeration enumValue (void) const {
    return mEnum ;
  }

