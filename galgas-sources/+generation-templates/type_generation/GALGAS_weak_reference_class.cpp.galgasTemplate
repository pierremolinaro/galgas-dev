//--------------------------------------------------------------------------------------------------

ComparisonResult GGS_%!WEAK_REF_TYPE_IDENTIFIER%::objectCompare (const GGS_%!WEAK_REF_TYPE_IDENTIFIER% & inOperand) const {
  ComparisonResult result = ComparisonResult::invalid ;
  if (isValid () && inOperand.isValid ()) {
    cPtr_weakReference_proxy * myPtr = mProxyPtr ;
    const size_t myObjectPtr = size_t (myPtr) ;
    cPtr_weakReference_proxy * operandPtr = inOperand.mProxyPtr ;
    const size_t operandObjectPtr = size_t (operandPtr) ;
    if (myObjectPtr < operandObjectPtr) {
      result = ComparisonResult::firstOperandLowerThanSecond ;
    }else if (myObjectPtr > operandObjectPtr) {
      result = ComparisonResult::firstOperandGreaterThanSecond ;
    }else{
      result = ComparisonResult::operandEqual ;
    }
  }
  return result ;
}

//--------------------------------------------------------------------------------------------------

GGS_%!WEAK_REF_TYPE_IDENTIFIER%::GGS_%!WEAK_REF_TYPE_IDENTIFIER% (void) :
%if SUPER_WEAK_REF_TYPE_IDENTIFIER == ""
  then %AC_GALGAS_weak_reference%
  else %GGS_%!SUPER_WEAK_REF_TYPE_IDENTIFIER%%
  end% () {
}

//--------------------------------------------------------------------------------------------------

GGS_%!WEAK_REF_TYPE_IDENTIFIER% & GGS_%!WEAK_REF_TYPE_IDENTIFIER%::operator = (const GGS_%!CLASS_TYPE_IDENTIFIER% & inSource) {
  cPtr_weakReference_proxy * proxyPtr = nullptr ;
  acStrongPtr_class * p = (acStrongPtr_class *) inSource.ptr () ;
  if (p != nullptr) {
    proxyPtr = p->getProxy () ;
  }
  macroAssignSharedObject (mProxyPtr, proxyPtr) ;
  return *this ;
}

//--------------------------------------------------------------------------------------------------

GGS_%!WEAK_REF_TYPE_IDENTIFIER%::GGS_%!WEAK_REF_TYPE_IDENTIFIER% (const GGS_%!CLASS_TYPE_IDENTIFIER% & inSource) :
% if SUPER_WEAK_REF_TYPE_IDENTIFIER == ""
  then %AC_GALGAS_weak_reference%
  else %GGS_%!SUPER_WEAK_REF_TYPE_IDENTIFIER
  end% (inSource) {
}

%if OPTIONAL_CLASS_TYPE_IDENTIFIER != "" then%
//--------------------------------------------------------------------------------------------------

GGS_%!WEAK_REF_TYPE_IDENTIFIER%::GGS_%!WEAK_REF_TYPE_IDENTIFIER% (const class GGS_%!OPTIONAL_CLASS_TYPE_IDENTIFIER% & inSource) :
% if SUPER_WEAK_REF_TYPE_IDENTIFIER == ""
  then %AC_GALGAS_weak_reference%
  else %GGS_%!SUPER_WEAK_REF_TYPE_IDENTIFIER
  end% () {
  if (inSource.isValid ()) {
    if (inSource.isNil ()) {
      macroMyNew (mProxyPtr, cPtr_weakReference_proxy (HERE)) ;
    }else if (inSource.isValuated ()) {
      const GGS_%!CLASS_TYPE_IDENTIFIER% v = inSource.unwrappedValue () ;
      acStrongPtr_class * ptr = (acStrongPtr_class *) v.ptr () ;
      if (ptr != nullptr) {
        cPtr_weakReference_proxy * proxy = ptr->getProxy () ;
        macroAssignSharedObject (mProxyPtr, proxy) ;
      }
    }
  }
}
%end%
//--------------------------------------------------------------------------------------------------

GGS_%!WEAK_REF_TYPE_IDENTIFIER% GGS_%!WEAK_REF_TYPE_IDENTIFIER%::class_func_nil (LOCATION_ARGS) {
  GGS_%!WEAK_REF_TYPE_IDENTIFIER% result ;
  macroMyNew (result.mProxyPtr, cPtr_weakReference_proxy (THERE)) ;
  return result ;
}

//--------------------------------------------------------------------------------------------------

GGS_%!CLASS_TYPE_IDENTIFIER% GGS_%!WEAK_REF_TYPE_IDENTIFIER%::unwrappedValue (void) const {
  GGS_%!CLASS_TYPE_IDENTIFIER% result ;
  if (isValid ()) {
    const cPtr_%!CLASS_TYPE_IDENTIFIER% * p = (cPtr_%!CLASS_TYPE_IDENTIFIER% *) ptr () ;
    if (nullptr != p) {
      result = GGS_%!CLASS_TYPE_IDENTIFIER% (p) ;
    }
  }
  return result ;
}

//--------------------------------------------------------------------------------------------------

GGS_%!CLASS_TYPE_IDENTIFIER% GGS_%!WEAK_REF_TYPE_IDENTIFIER%::bang_%!WEAK_REF_TYPE_IDENTIFIER% (Compiler * inCompiler COMMA_LOCATION_ARGS) const {
  GGS_%!CLASS_TYPE_IDENTIFIER% result ;
  if (mProxyPtr != nullptr) {
    acStrongPtr_class * strongPtr = mProxyPtr->strongObject () ;
    if (strongPtr == nullptr) {
      inCompiler->onTheFlySemanticError ("weak reference is nil" COMMA_THERE) ;
    }else{
      macroValidSharedObject (strongPtr, cPtr_%!CLASS_TYPE_IDENTIFIER%) ;
      result = GGS_%!CLASS_TYPE_IDENTIFIER% ((cPtr_%!CLASS_TYPE_IDENTIFIER% *) strongPtr) ;
    }
  }
  return result ;
}

