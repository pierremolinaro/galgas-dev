//--------------------------------------------------------------------------------------------------
//
//%!" Phase 2: class for element of '@" + TYPE_NAME + "' map"%
//
//--------------------------------------------------------------------------------------------------

class cMapElement_%!TYPE_IDENTIFIER% : public cMapElement {
//--- Map attributes
%
    for (mPropertyTypeEntry mPropertyName * mHasSetter mHasSelector) in CURRENT_PROPERTY_LIST
      do %  public: GGS_%![mPropertyTypeEntry identifierRepresentation]% mProperty_%![mPropertyName identifierRepresentation]% ;\n%
    end
%
//--- Constructors
  public: cMapElement_%!TYPE_IDENTIFIER% (%?^%const GGS_%!ELEMENT_TYPE_IDENTIFIER% & inValue
             %!^%COMMA_LOCATION_ARGS) ;
 
  public: cMapElement_%!TYPE_IDENTIFIER% (%?^%const GGS_lstring & inKey%
  for (mPropertyTypeEntry mPropertyName * mHasSetter mHasSelector) in CURRENT_PROPERTY_LIST
    do %,\n%!^%const GGS_%![mPropertyTypeEntry identifierRepresentation]% & in_%![mPropertyName identifierRepresentation]
  end
%\n%
!^%COMMA_LOCATION_ARGS) ;

//--- Virtual method for comparing elements
%if GENERATE_COMPARISON then
%  public: virtual ComparisonResult compare (const cCollectionElement * inOperand) const ;
%end%
//--- Virtual method that checks that all attributes are valid
  public: virtual bool isValid (void) const ;

//--- Virtual method that returns a copy of current object
  public: virtual cMapElement * copy (void) ;

//--- Description
 public: virtual void description (String & ioString, const int32_t inIndentation) const ;
} ;

