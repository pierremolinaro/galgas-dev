//--------------------------------------------------------------------------------------------------
//%!" Phase 1: @" + TYPE_IDENTIFIER + " list enumerator"%
//--------------------------------------------------------------------------------------------------

class DownEnumerator_%!TYPE_IDENTIFIER% final {
  public: DownEnumerator_%!TYPE_IDENTIFIER% (const class GGS_%!TYPE_IDENTIFIER% & inList) ;

  public: ~ DownEnumerator_%!TYPE_IDENTIFIER% (void) = default ;

  public: inline bool hasCurrentObject (void) const { return mIndex >= 0 ; }

  public: inline void gotoNextObject (void) { mIndex -= 1 ; }

  public: inline void rewind (void) { mIndex = 0 ; }

  public: inline uint32_t index (void) { return uint32_t (mIndex) ; }

%
  for (mEnumeratedType mEnumerationName) in ENUMERATION_DESCRIPTOR_LIST do
%  public: class GGS_%![mEnumeratedType identifierRepresentation]% current_%![mEnumerationName identifierRepresentation]% (LOCATION_ARGS) const ;\n%
  end
  if not [ENUMERATED_OBJECT_TYPE isNull] then
%//--- Current element access\n%
%  public: class GGS_%![ENUMERATED_OBJECT_TYPE identifierRepresentation]% current (LOCATION_ARGS) const ;\n%
  end
%
  private: TC_Array <GGS_%!ELEMENT_TYPE_IDENTIFIER%> mArray ;
  private: int32_t mIndex ;

  private: DownEnumerator_%!TYPE_IDENTIFIER% (const DownEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
  private: DownEnumerator_%!TYPE_IDENTIFIER% & operator = (const DownEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------

class UpEnumerator_%!TYPE_IDENTIFIER% final {
  public: UpEnumerator_%!TYPE_IDENTIFIER% (const class GGS_%!TYPE_IDENTIFIER% & inList)  ;

  public: ~ UpEnumerator_%!TYPE_IDENTIFIER% (void) = default ;

  public: inline bool hasCurrentObject (void) const { return mIndex < mArray.count () ; }

  public: inline void gotoNextObject (void) { mIndex += 1 ; }

  public: inline void rewind (void) { mIndex = 0 ; }

  public: inline uint32_t index (void) { return uint32_t (mIndex) ; }

%
  for (mEnumeratedType mEnumerationName) in ENUMERATION_DESCRIPTOR_LIST do
%  public: class GGS_%![mEnumeratedType identifierRepresentation]% current_%![mEnumerationName identifierRepresentation]% (LOCATION_ARGS) const ;\n%
  end
  if not [ENUMERATED_OBJECT_TYPE isNull] then
%//--- Current element access\n%
%  public: class GGS_%![ENUMERATED_OBJECT_TYPE identifierRepresentation]% current (LOCATION_ARGS) const ;\n%
  end
%
  private: TC_Array <GGS_%!ELEMENT_TYPE_IDENTIFIER%> mArray ;
  private: int32_t mIndex ;

  private: UpEnumerator_%!TYPE_IDENTIFIER% (const UpEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
  private: UpEnumerator_%!TYPE_IDENTIFIER% & operator = (const UpEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------
//%!" @" + TYPE_NAME + " list"%
//--------------------------------------------------------------------------------------------------

class GGS_%!TYPE_IDENTIFIER% : public AC_GALGAS_root {
//--- Private property
  private: TC_Array <GGS_%!ELEMENT_TYPE_IDENTIFIER%> mArray ;

//--- Default constructor
  public: GGS_%!TYPE_IDENTIFIER% (void) ;

//--- Destructor
  public: virtual ~ GGS_%!TYPE_IDENTIFIER% (void) = default ;

//--- Copy
  public: GGS_%!TYPE_IDENTIFIER% (const GGS_%!TYPE_IDENTIFIER% &) = default ;
  public: GGS_%!TYPE_IDENTIFIER% & operator = (const GGS_%!TYPE_IDENTIFIER% &) = default ;

//--- Is valid
  public: inline bool isValid (void) const override { return mArray.isAllocated () ; }

//--- Drop
  public: inline virtual void drop (void) override { mArray.removeAll () ; }

//--- Description
  public: virtual void description (String & ioString,
                                    const int32_t inIndentation) const override ;

//--- Count
  public: inline uint32_t count (void) const { return uint32_t (mArray.count ()) ; }
 
//--- sortedElementArray
  public : TC_Array <GGS_%!ELEMENT_TYPE_IDENTIFIER%> sortedElementArray (void) const {
    return mArray ;
  }

//--- subList
  private: GGS_%!TYPE_IDENTIFIER% subList (%?^%const int32_t inStart,
                %!^%const int32_t inLength,
                %!^%Compiler * inCompiler
                %!^%COMMA_LOCATION_ARGS) const ;


//--- List constructor by graph
  public: GGS_%!TYPE_IDENTIFIER% (const capCollectionElementArray & inSharedArray) ;

//--- Element constructor
  public: static void makeAttributesFromObjects (%?^%capCollectionElement & outAttributes%
  for (mPropertyTypeEntry mPropertyName 3*) in ATTRIBUTE_LIST
    do %,\n%!^%const class GGS_%![mPropertyTypeEntry identifierRepresentation]% & in_%![mPropertyName identifierRepresentation]
  end
%\n%
!^%COMMA_LOCATION_ARGS) ;

