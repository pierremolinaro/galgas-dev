//--------------------------------------------------------------------------------------------------
//%!" Phase 1: @" + TYPE_IDENTIFIER + " dictionary enumerator"%
//--------------------------------------------------------------------------------------------------

class DownEnumerator_%!TYPE_IDENTIFIER% final {
  public: DownEnumerator_%!TYPE_IDENTIFIER% (const class GGS_%!TYPE_IDENTIFIER% & inOperand) ;

  public: inline bool hasCurrentObject (void) const { return mIndex >= 0 ; }
  
  public: inline void gotoNextObject (void) { mIndex -= 1 ; }
%
  for (mEnumeratedType mEnumerationName) in ENUMERATION_DESCRIPTOR_LIST do
%  public: inline GGS_%![mEnumeratedType identifierRepresentation]% current_%![mEnumerationName identifierRepresentation]% (UNUSED_LOCATION_ARGS) const {
    return mInfoArray (mIndex COMMA_HERE)->mProperty_%![mEnumerationName identifierRepresentation]% ;
  }

%
  end
  if not [ENUMERATED_OBJECT_TYPE isNull] then
%//--- Current element access\n%
%  public: inline GGS_%![ENUMERATED_OBJECT_TYPE identifierRepresentation]% current (UNUSED_LOCATION_ARGS) const  {
     return mInfoArray (mIndex COMMA_HERE).value () ;
  }
%
  end
%
//--- Private properties
  private: TC_Array <SharedGenericPtrWithValueSemantics <GGS_%!ELEMENT_TYPE_IDENTIFIER%>> mInfoArray ;
  private: int32_t mIndex ;

//--- No copy
  private: DownEnumerator_%!TYPE_IDENTIFIER% (const DownEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
  private: DownEnumerator_%!TYPE_IDENTIFIER% & operator = (const DownEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------

class UpEnumerator_%!TYPE_IDENTIFIER% final {
  public: UpEnumerator_%!TYPE_IDENTIFIER% (const class GGS_%!TYPE_IDENTIFIER% & inOperand)  ;
  
  public: inline bool hasCurrentObject (void) const { return mIndex < mInfoArray.count () ; }

  public: inline void gotoNextObject (void) { mIndex += 1 ; }

%
  for (mEnumeratedType mEnumerationName) in ENUMERATION_DESCRIPTOR_LIST do
%  public: inline GGS_%![mEnumeratedType identifierRepresentation]% current_%![mEnumerationName identifierRepresentation]% (UNUSED_LOCATION_ARGS) const {
    return mInfoArray (mIndex COMMA_HERE)->mProperty_%![mEnumerationName identifierRepresentation]% ;
 }
 
%
  end
  if not [ENUMERATED_OBJECT_TYPE isNull] then
%//--- Current element access
  public: inline GGS_%![ENUMERATED_OBJECT_TYPE identifierRepresentation]% current (UNUSED_LOCATION_ARGS) const {
    return mInfoArray (mIndex COMMA_HERE).value () ;
  }
%  end
%
//--- Private properties
  private: TC_Array <SharedGenericPtrWithValueSemantics <GGS_%!ELEMENT_TYPE_IDENTIFIER%>> mInfoArray ;
  private: int32_t mIndex ;

//--- No copy
  private: UpEnumerator_%!TYPE_IDENTIFIER% (const UpEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
  private: UpEnumerator_%!TYPE_IDENTIFIER% & operator = (const UpEnumerator_%!TYPE_IDENTIFIER% &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------
//%!" Phase 1: @" + TYPE_NAME + " dict"%
//--------------------------------------------------------------------------------------------------

class GGS_%!TYPE_IDENTIFIER% : public AC_GALGAS_root {
//--------------------------------- Private properties
  private: SharedGenericMap <GGS_%!KEY_TYPE_IDENTIFIER%, GGS_%!ELEMENT_TYPE_IDENTIFIER%> mDictionary ;

//--------------------------------- Default constructor
  public: GGS_%!TYPE_IDENTIFIER% (void) ;

//--------------------------------- Build
  public: static GGS_%!TYPE_IDENTIFIER% builtDictionary (LOCATION_ARGS) ;
 
//--------------------------------- Handle copy
  public: GGS_%!TYPE_IDENTIFIER% (const GGS_%!TYPE_IDENTIFIER% & inSource) ;
  public: GGS_%!TYPE_IDENTIFIER% & operator = (const GGS_%!TYPE_IDENTIFIER% & inSource) ;

//--------------------------------- isValid
  public: VIRTUAL_IN_DEBUG inline bool isValid (void) const override {
    return mDictionary.isValid () ;
  }

//--------------------------------- drop
  public: VIRTUAL_IN_DEBUG void drop (void) override ;

//--------------------------------- Implementation of reader 'description'
  public: VIRTUAL_IN_DEBUG void description (String & ioString,
                                             const int32_t inIndentation) const override ;

