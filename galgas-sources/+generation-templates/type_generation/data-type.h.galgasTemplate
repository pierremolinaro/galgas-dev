//--------------------------------------------------------------------------------------------------
//   Phase 1: @data enumerator
//--------------------------------------------------------------------------------------------------

class UpEnumerator_data final {
  public: UpEnumerator_data (const class GGS_data & inEnumeratedObject) ;

  public: bool hasCurrentObject (void) const { return mIndex < mArray.count () ; }

  public: void gotoNextObject (void) { mIndex += 1 ; }

//--- Current element access
  public: class GGS_uint current_data (LOCATION_ARGS) const ;
  public: class GGS_uint current (LOCATION_ARGS) const ;

//--- Private properties
  private: U8Data mArray ;
  private: int32_t mIndex ;

//--- No copy
  private: UpEnumerator_data (const UpEnumerator_data &) = delete ;
  private: UpEnumerator_data & operator = (const UpEnumerator_data &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------

class DownEnumerator_data final {

  public: DownEnumerator_data (const class GGS_data & inEnumeratedObject) ;

  public: bool hasCurrentObject (void) const { return mIndex >= 0 ; }

  public: void gotoNextObject (void) { mIndex -= 1 ; }

//--- Current element access
  public: class GGS_uint current_data (LOCATION_ARGS) const ;
  public: class GGS_uint current (LOCATION_ARGS) const ;

//--- Private properties
  private: U8Data mArray ;
  private: int32_t mIndex ;

//--- No copy
  private: DownEnumerator_data (const DownEnumerator_data &) = delete ;
  private: DownEnumerator_data & operator = (const DownEnumerator_data &) = delete ;
} ;

//--------------------------------------------------------------------------------------------------
//   @data type
//--------------------------------------------------------------------------------------------------

class GGS_data : public AC_GALGAS_root {
//--------------------------------- Private data members
  private: bool mIsValid ;
  private: U8Data mData ;

//--------------------------------- Accessors
  public: VIRTUAL_IN_DEBUG inline bool isValid (void) const override { return mIsValid ; }
  public: VIRTUAL_IN_DEBUG inline void drop (void) override { mIsValid = false ; }
  public: inline U8Data dataValue (void) const { return mData ; }

//--------------------------------- Default constructor
  public: GGS_data (void) ;

//--------------------------------- Native constructor
  public: GGS_data (const U8Data & inData) ;

%

