//--------------------------------------------------------------------------------------------------
//
//%!"Routine '" + ROUTINE_NAME + "'"%
//
//--------------------------------------------------------------------------------------------------

void routine_%![ROUTINE_NAME identifierRepresentation]% (%?^
  for (mFormalSelector mFormalArgumentPassingMode mFormalArgumentType mFormalArgumentName mFormalArgumentCppName) in FORMAL_ARGUMENT_LIST do (IDX)
    if mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentConstantIn] then
      %const class GGS_% ![mFormalArgumentType identifierRepresentation] % constinArgument% ![IDX string]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentInOut] then
      %class GGS_% ![mFormalArgumentType identifierRepresentation] % & ioArgument% ![IDX string]
    elsif mFormalArgumentPassingMode == [@formalArgumentPassingModeAST argumentOut] then
      %class GGS_% ![mFormalArgumentType identifierRepresentation] % & outArgument% ![IDX string]
    else // argumentIn
      %class GGS_% ![mFormalArgumentType identifierRepresentation] % inArgument% ![IDX string]
    end
    %,\n%!^
  end
  %class Compiler * inCompiler%
  %\n %!^%COMMA_LOCATION_ARGS) ;

