#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#  'gui' component parser, as model builder                                                                            *
#                                                                                                                      *
#  Copyright (C) 2007, ..., 2007 Pierre Molinaro.                                                                      *
#                                                                                                                      *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                                                               *
#                                                                                                                      *
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                                                                                                      *
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                                                                                            *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

syntax guiSyntax (galgas2Scanner) %translate {

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   G U I    C O M P O N E N T                                                                                         *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

rule <gui_component_start_symbol>
  !@guiComponentAST outGuiComponentRoot {
  $gui$
  $identifier$ ?var @lstring mGUIName :> ?@string sep ?*
  $literal_string$ ?var @lstring mGUIClass :> ?* ?*
  $:$ :>?* ?*
  send sep + mGUIClass + " {"
  var importedOptionList =@lstringlist.emptyList{}
  var simpleGlobalAttributes =@guiSimpleAttributeListAST.emptyList{}
  var withLexiqueList =@withLexiqueListAST.emptyList{}
  repeat
  while
    $identifier$ ?var @lstring mKey
    $:$
    var mValue =@lstring.new{!"" !@location.here}
    repeat
      $literal_string$ ?var @lstring value
      mValue = @lstring.new {![mValue string] + [value string] ![value location]}
    while
    end
    $;$ :> ?* ?*
    simpleGlobalAttributes += !mKey !mValue
  while
    $with$
    select
      $option$
      $literal_string$ ?let @lstring optionReference :> ?let @string sep ?*
      send sep + [optionReference stringByDeletingPathExtension]
      importedOptionList += !optionReference
      $;$ :> ?* ?*
    or
      $lexique$
      $literal_string$ ?let @lstring lexiqueReference :> ?let @string sep ?*
      send sep + [lexiqueReference stringByDeletingPathExtension]
      var labels =@guiLabelListAST.emptyList{}
      var simpleAttributes =@guiSimpleAttributeListAST.emptyList{}
      var compoundAttributes =@guiCompoundAttributeListAST.emptyList{}
      ${$
      repeat
      while
        $label$
        @uint displayStyle
        select
          displayStyle = 0
        or
          $*$
          displayStyle = 1
        end
        var terminalList =@terminalLabelListAST.emptyList{}
        repeat
          $terminal$ ?var  @lstring terminal
          @uint displayFlags
          select
            displayFlags = 0 # Default
          or
            $-$
            displayFlags = 0xFFFF # Do not diplay
          or
            $($
            $unsigned_literal_integer$ ?var @luint leadingStrip
            if leadingStrip.uint >= 15 then
              error leadingStrip:"leading strip should be < 15"
            end
            $,$
            $unsigned_literal_integer$ ?var @luint endingStrip
            if endingStrip.uint >= 15 then
              error endingStrip:"tail strip should be < 15"
            end
            displayFlags = (leadingStrip.uint << 4) | endingStrip
           $)$
          end
          terminalList += !terminal !displayFlags
        while
          $,$
        end
        $;$ :> ?* ?*
        labels += !displayStyle !terminalList !@location.here
      while
        $identifier$ ?var @lstring key
        $literal_string$ ?var @lstring name
        $:$
        var value =@lstring.new{!"" !@location.here}
        repeat
          $literal_string$ ?var @lstring v
          value = @lstring.new {![value string] + [v string] ![v location]}
        while
        end
        $;$ :> ?* ?*
        compoundAttributes += !key !name !value
      while
        $identifier$ ?var @lstring name
        $:$
        $literal_string$ ?var @lstring value
        $;$ :> ?* ?*
        simpleAttributes += !name !value
      end
      $}$
      withLexiqueList += 
        !lexiqueReference
        !labels
        !simpleAttributes
        !compoundAttributes
    end
  end
#---
  $end$ :>?sep ?*
  send sep + "}"
  $gui$ :> ?* ?*
  $;$ :> ?* ?*
  outGuiComponentRoot = @guiComponentAST.new {
    !mGUIName
    !mGUIClass
    !importedOptionList
    !simpleGlobalAttributes
    !withLexiqueList}
}

#----------------------------------------------------------------------------------------------------------------------*

}