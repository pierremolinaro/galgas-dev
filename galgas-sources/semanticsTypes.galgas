#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  semantics definitions for semantics component
#
#  Copyright (C) 1997, ..., 2023 Pierre Molinaro.
#
#  MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once generateFewHeaderFiles -> @bool {
  result = true
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @functionSignature {
  public let @lstring mFormalSelector
  public let @unifiedTypeMapEntry mFormalArgumentType
  public let @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  C O N S T R U C T O R    M A P
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @classFunctionMap {
  public let @functionSignature mArgumentTypeList
  public let @bool mHasCompilerArgument
  public let @unifiedTypeMapEntry mReturnedType
  insert or replace
  insert insertKey error message "the '%K' constructor has been already defined"
  search searchKey error message "the '%K' constuctor is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @methodQualifier { # NE PAS CHANGER L'ORDRE
  case isVirtual
  case isVirtualAbstract
  case isBasic
  case isBasicFinal
  case isInherited
  case isVirtualOverriding
  case isVirtualOverridingAbstract
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @methodKind {
  case definedAsMember
  case definedAsExtension
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  OPTIONAL METHOD MAP
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @optionalMethodSignature {
  public let @bool mInputArgument # true -> input, false -> output
  public let @lstring mFormalSelector
  public let @unifiedTypeMapEntry mFormalArgumentType
  public let @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @optionalMethodMap {
  public let @optionalMethodSignature mArgumentTypeList

  insert insertKey error message "the '%K' optional method is already declared"
  search searchKey error message "the '%K' optional method is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  R E A D E R    M A P
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @getterMap {
  public let @methodKind mKind
  public let @functionSignature mArgumentTypeList
  public let @location mDeclarationLocation
  public let @bool mHasCompilerArgument
  public let @unifiedTypeMapEntry mReturnedType
  public let @methodQualifier mQualifier
  public let @string mGetterNameThatObsoletesInvokationName # If not empty, this getter is the one actually called

  insert insertKey error message "the '%K' getter is already declared"
  search searchKey error message "the '%K' getter is not declared"

  insert or replace
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  M O D I F I E R    M A P
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @formalParameterSignature {
  public let @lstring mFormalSelector
  public let @unifiedTypeMapEntry mFormalArgumentType
  public let @formalArgumentPassingModeAST mFormalArgumentPassingMode
  public let @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @setterMap {
  public let @methodKind mKind
  public let @formalParameterSignature mParameterList
  public let @bool mHasCompilerArgument
  public let @methodQualifier mQualifier
  public let @string mErrorMessage # If not empty, calling the setter raises an error ith this message
  insert or replace
  insert insertKey error message "the '%K' setter is already declared"
  search searchKey error message "the '%K' setter is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  M E T H O D    M A P
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @instanceMethodMap {
  public let @methodKind mKind
  public let @formalParameterSignature mParameterList
  public let @location mDeclarationLocation
  public let @bool mHasCompilerArgument
  public let @methodQualifier mQualifier
  public let @string mErrorMessage # If not empty, calling the method raises an error with this message
  insert insertKey error message "the '%K' instance method is already declared"
  search searchKey error message "the '%K' instance method is not declared"
  search searchInheritedKey error message "as the '%K' method is tagged as 'override', it should be declared in the super class"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  C L A S S    M E T H O D    M A P
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @classMethodMap {
  public let @formalParameterSignature mParameterList
  public let @bool mHasCompilerArgument
  insert or replace
  insert insertKey error message "the '%K' type proc is already declared"
  search searchKey error message "the '%K' type proc is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  E N U M E R A T I O N    D E S C R I P T O R    L I S T
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @enumerationDescriptorList {
  public let @unifiedTypeMapEntry mEnumeratedType
  public let @string mEnumerationName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  T Y P E D    P R O P E R T Y    L I S T
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @typedPropertyList {
  public let @unifiedTypeMapEntry mPropertyTypeEntry
  public let @lstring mPropertyName
  public let @bool hasSetter %selector
  public let @bool hasSelector %selector
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  O P E R A T O R    Boolset
#
# This type is used for the mHandledOperatorFlags attribute of the @unifiedTypeMap map, for indicating the handled
# operators.
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

boolset @operators {
  infixAddOperator,
  infixSubOperator,
  infixMulOperator,
  infixDivOperator,
  infixModOperator,
  infixShiftOperator,
  prefixPlusOperator,
  prefixMinusOperator,
  prefixTildeOperator,
  incDecOperator,

  infixAndOperator,
  infixOrOperator,
  infixXorOperator,
  prefixNotOperator,

  isComparable, # Supports <, <=, >, >=, ==, != operators
  isReferenceEquatable,  # Supports ===, !== operators

  plusEqualOperatorWithExpression, # var += exp ;
  minusEqualOperatorWithExpression, # var -= exp ;
  mulEqualOperatorWithExpression, # var *= exp ;
  divEqualOperatorWithExpression, # var /= exp ;

  infixAddOperatorNoOVF,
  infixSubOperatorNoOVF,
  infixMulOperatorNoOVF,
  infixDivOperatorNoOVF,
  prefixMinusOperatorNoOVF,
  incDecOperatorNoOVF,

  supportWithAccessor,
  plusEqualOperatorWithFieldListNeedsCompilerArg,
  generateEnumerationHelperMethods,
  doNotGenererateObjectCompare,
  generateDescriptionGetterUtilityMethod,
  generateCopyConstructorAndAssignmentOperator
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @propertyMap {
  public let @AccessControl mAccessControl
  public let @bool mIsConstant
  public let @unifiedTypeMapEntry mPropertyType
  insert insertKey error message "the '%K' property has been already declared in %L"
  search searchKey error message "the '%K' property is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @headerKind {
  case noHeader
  case oneHeader
  case twoHeaders
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @constantIndexMap {
  public let @uint mIndex
  public let @unifiedTypeMapEntryList mAssociatedTypeList
  insert insertKey error message "the '%K' constant is already declared"
  search searchKey error message "the '%K' constant is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @sintPredefinedTypeAST defaultInitializerName -> @string {
  result = "default"
}

override getter @sint64PredefinedTypeAST defaultInitializerName -> @string {
  result = "default"
}

override getter @timerPredefinedTypeAST defaultInitializerName -> @string {
  result = "start"
}

override getter @charPredefinedTypeAST defaultInitializerName -> @string {
  result = "default"
}

override getter @doublePredefinedTypeAST defaultInitializerName -> @string {
  result = "default"
}

override getter @stringPredefinedTypeAST defaultInitializerName -> @string {
  result = "default"
}

override getter @locationPredefinedTypeAST defaultInitializerName -> @string {
  result = "nowhere"
}

override getter @functionPredefinedTypeAST defaultInitializerName -> @string {
  result = "" // No default initializer
}

override getter @typePredefinedTypeAST defaultInitializerName -> @string {
  result = "" // No default initializer
}

override getter @dataPredefinedTypeAST defaultInitializerName -> @string {
  result = "emptyData"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

