#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  semantics definitions for semantics component                                                                       *
#                                           
#  Copyright (C) 1997, ..., 2014 Pierre Molinaro.                                                                      *
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once generateFewHeaderFiles -> @bool {
  result = true
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @functionSignature {
  public var @lstring mFormalSelector
  public var @unifiedTypeMap-entry mFormalArgumentType
  public var @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @unifiedTypeMapEntryList {
  public var @unifiedTypeMap-entry mType
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  C O N S T R U C T O R    M A P           
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @constructorMap {
  public var @functionSignature mArgumentTypeList
  public var @bool mHasCompilerArgument
  public var @unifiedTypeMap-entry mReturnedType
  insert or replace
  insert insertKey error message "the '%K' constructor has been already defined"
  search searchKey error message "the '%K' constuctor is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @methodQualifier {
  case isAbstract
  case isBasic
  case isBasicFinal
  case isInherited
  case isOverriding
  case isOverridingAbstract
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @methodKind {
  case definedAsMember
  case definedAsExtension
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#
#  OPTIONAL METHOD MAP
#
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @optionalMethodSignature {
  public var @bool mInputArgument # true -> input, false -> output
  public var @lstring mFormalSelector
  public var @unifiedTypeMap-entry mFormalArgumentType
  public var @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @optionalMethodMap {
  public var @optionalMethodSignature mArgumentTypeList
 
  insert insertKey error message "the '%K' optional method is already declared"
  search searchKey error message "the '%K' optional method is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  R E A D E R    M A P                     
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @getterMap {
  public var @methodKind mKind
  public var @functionSignature mArgumentTypeList
  public var @location mDeclarationLocation
  public var @bool mHasCompilerArgument
  public var @unifiedTypeMap-entry mReturnedType
  public var @methodQualifier mQualifier
  public var @string mErrorMessage # If not empty, calling the method raises an error with this message
 
  insert insertKey error message "the '%K' getter is already declared"
  search searchKey error message "the '%K' getter is not declared"

  insert or replace
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  M O D I F I E R    M A P                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @formalParameterSignature {
  public var @lstring mFormalSelector
  public var @unifiedTypeMap-entry mFormalArgumentType
  public var @formalArgumentPassingModeAST mFormalArgumentPassingMode
  public var @string mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @setterMap {
  public var @methodKind mKind
  public var @formalParameterSignature mParameterList
  public var @bool mHasCompilerArgument
  public var @methodQualifier mQualifier
  public var @string mErrorMessage # If not empty, calling the setter raises an error ith this message
  insert or replace
  insert insertKey error message "the '%K' setter is already declared"
  search searchKey error message "the '%K' setter is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  M E T H O D    M A P                     
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#enum @instanceMethodMutability {
#  case constantMethod
#  case mutatingMethod
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @instanceMethodMap {
  public var @methodKind mKind
  public var @formalParameterSignature mParameterList
  public var @location mDeclarationLocation
  public var @bool mHasCompilerArgument
  public var @methodQualifier mQualifier
#  public var @instanceMethodMutability mMutability
  public var @string mErrorMessage # If not empty, calling the method raises an error with this message
  insert insertKey error message "the '%K' instance method is already declared"
  search searchKey error message "the '%K' instance method is not declared"
  search searchInheritedKey error message "as the '%K' method is tagged as 'override', it should be declared in the super class"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  C L A S S    M E T H O D    M A P        
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @classMethodMap {
  public var @formalParameterSignature mParameterList
  public var @bool mHasCompilerArgument
  insert or replace
  insert insertKey error message "the '%K' type proc is already declared"
  search searchKey error message "the '%K' type proc is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  E N U M E R A T I O N    D E S C R I P T O R    L I S T                                                             *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @enumerationDescriptorList {
  public var @unifiedTypeMap-entry mEnumeratedType
  public var @string mEnumerationName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  T Y P E D    P R O P E R T Y    L I S T  
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @typedPropertyList {
  public var @unifiedTypeMap-entry mPropertyTypeEntry
  public var @lstring mPropertyName
  public var @bool mHasSetter
  public var @bool mHasSelector
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  P R E D E F I N E D    T Y P E    K I N D    E N U M E R A T I O N                                                  *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @predefinedTypeKindEnum {
  case predefined_uint 
  case predefined_uint64 
  case predefined_sint 
  case predefined_sint64 
  case predefined_char 
  case predefined_double 
  case predefined_string 
  case predefined_stringset 
  case predefined_bool 
  case predefined_binaryset 
  case predefined_function 
  case predefined_location 
  case predefined_type 
  case predefined_object 
  case predefined_data 
  case predefined_filewrapper 
  case predefined_application
  case predefined_bigint
  case predefined_timer
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  T Y P E    K I N D    E N U M E R A T I O N                                                                         *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @typeKindEnum {
  case classType (@bool isReference)
  case weakReferenceType (@unifiedTypeMap-entry referenceType)
  case enumType 
  case listType 
  case sortedListType 
  case mapType 
  case sharedMapType 
  case sharedMapEntryType 
  case listMapType 
  case boolsetType 
  case structType 
  case graphType 
  case externType 
  case arrayType 
  case predefinedType
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @typeKindEnum string -> @string {
  switch self
    case classType (isReference) : result = if isReference then "reference class" else "value class" end
    case enumType : result = "enumeration"
    case listType : result = "list"
    case sortedListType : result = "sorted list"
    case mapType : result = "map"
    case sharedMapType : result = "shared map"
    case sharedMapEntryType : result = "shared map entry"
    case listMapType : result = "list map"
    case structType : result = "struct"
    case boolsetType : result = "boolset"
    case graphType : result = "graph"
    case predefinedType : result = "predefined"
    case arrayType : result = "array"
    case externType : result = "extern"
    case weakReferenceType (*) : result = "weak reference"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  O P E R A T O R    Boolset               
#                                           
# This type is used for the mHandledOperatorFlags attribute of the @unifiedTypeMap map, for indicating the handled     *
# operators.                                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

boolset @operators {
  infixAddOperator,
  infixSubOperator,
  infixMulOperator,
  infixDivOperator,
  infixModOperator,
  infixShiftOperator,
  prefixPlusOperator,
  prefixMinusOperator,
  prefixTildeOperator,
  incDecOperator,

  infixAndOperator,
  infixOrOperator,
  infixXorOperator,
  prefixNotOperator,

  isComparable, # Supports <, <=, >, >=, ==, != operators
  isReferenceEquatable,  # Supports ===, !== operators

  plusEqualOperatorWithExpression, # var += exp ;
  minusEqualOperatorWithExpression, # var -= exp ;
  mulEqualOperatorWithExpression, # var *= exp ;
  divEqualOperatorWithExpression, # var /= exp ;

  infixAddOperatorNoOVF,
  infixSubOperatorNoOVF,
  infixMulOperatorNoOVF,
  infixDivOperatorNoOVF,
  prefixMinusOperatorNoOVF,
  incDecOperatorNoOVF,

  supportWithAccessor,
  plusEqualOperatorWithFieldListNeedsCompilerArg,
  generateEnumerationHelperMethods,
  doNotGenererateObjectCompare,
  generateDescriptionGetterUtilityMethod,
  generateCopyConstructorAndAssignmentOperator
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @propertyMap {
  public var @bool mIsPublic
  public var @bool mIsConstant
  public var @unifiedTypeMap-entry mPropertyType
  insert insertKey error message "the '%K' property has been already declared in %L"
  search searchKey error message "the '%K' property is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @headerKind {
  case noHeader  case oneHeader  case twoHeaders
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @constantIndexMap {
  public var @uint mIndex
  public var @unifiedTypeMapEntryList mAssociatedTypeList
  insert insertKey error message "the '%K' constant is already declared"
  search searchKey error message "the '%K' constant is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  U N I F I E D    T Y P E    M A P        
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

shared map @unifiedTypeMap {
  public var @bool mIsPredefined
  public var @bool mIsConcrete # false if abstract class
  public var @unifiedTypeMap-entry mSuperType
  public var @typeKindEnum mTypeKindEnum
  public var @bool mSupportCollectionValue
  public var @typedPropertyList mAllTypedPropertyList
  public var @propertyMap mPropertyMap # struct, class
  public var @typedPropertyList mCurrentTypedPropertyList
  public var @constructorMap mConstructorMap
  public var @getterMap mGetterMap
  public var @setterMap mSetterMap
  public var @instanceMethodMap mInstanceMethodMap
  public var @classMethodMap mClassMethodMap
  public var @optionalMethodMap mOptionalMethodMap
  public var @enumerationDescriptorList mEnumerationDescriptor # Empty List if cannot be enumerated
  public var @operators mHandledOperatorFlags
  public var @functionSignature mAddAssignOperatorArguments # Empty list if += operator is not supported
  public var @constantIndexMap mEnumConstantMap
  public var @enumConstantList mEnumConstantList
  public var @mapSearchMethodListAST mMapSearchMethodList # For a map, the list of search methods
  public var @mapSearchMethodListAST mMapEntrySearchConstructorList # For a map entry, the list of search methods of the associated map
  public var @bool mGenerateHeaderInSeparateFile # Significant only for classes
  public var @unifiedTypeMap-entry mTypeForEnumeratedElement
  public var @string mDefaultConstructorName # Used in [@xxx default] (empty string if no default constructor)
  public var @string mHeaderFileName # Name of C++ header file that contains type declaration
  public var @headerKind mHeaderKind

  insert insertKey error message "the '@%K' type has been already declared in %L"
  search searchKey error message "the '@%K' type is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @unifiedTypeMap-entry baseType -> @unifiedTypeMap-entry outBaseType {
  outBaseType = self
  loop( @uint. max) while not [[outBaseType mSuperType] isNull] do
    outBaseType = [outBaseType mSuperType]
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @unifiedTypeMap-entry addHeaderFileName ?!@stringset ioInclusions {
  if (not [self mIsPredefined]) & ([self mHeaderKind] != @headerKind.noHeader) then
    ioInclusions += ![self mHeaderFileName]
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @unifiedTypeMap-entry addHeaderFileName1 ?!@stringset ioInclusions {
  if not [self mIsPredefined] then
    switch [self mHeaderKind]
    case noHeader :
    case oneHeader :
      ioInclusions += ![self mHeaderFileName]
    case twoHeaders :
      ioInclusions += ![self mHeaderFileName] + "-1"
    end
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  A S T   C L A S S E S    F O R    P R E D E F I N E D   T Y P E S                                                   *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @predefinedTypeAST : @semanticDeclarationAST {
  public var @string mPredefinedTypeName
  public var @predefinedTypeKindEnum mKind
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @applicationPredefinedTypeAST : @predefinedTypeAST {}

refclass @bigintPredefinedTypeAST : @predefinedTypeAST {}

refclass @objectPredefinedTypeAST : @predefinedTypeAST {}

refclass @filewrapperPredefinedTypeAST : @predefinedTypeAST {}

refclass @binarysetPredefinedTypeAST : @predefinedTypeAST {}

refclass @boolPredefinedTypeAST : @predefinedTypeAST {}

refclass @uintPredefinedTypeAST : @predefinedTypeAST {}

refclass @uint64PredefinedTypeAST : @predefinedTypeAST {}

refclass @sintPredefinedTypeAST : @predefinedTypeAST {}

refclass @sint64PredefinedTypeAST : @predefinedTypeAST {}

refclass @charPredefinedTypeAST : @predefinedTypeAST {}

refclass @doublePredefinedTypeAST : @predefinedTypeAST {}

refclass @stringPredefinedTypeAST : @predefinedTypeAST {}

refclass @locationPredefinedTypeAST : @predefinedTypeAST {}

refclass @stringsetPredefinedTypeAST : @predefinedTypeAST {}

refclass @functionPredefinedTypeAST : @predefinedTypeAST {}

refclass @typePredefinedTypeAST : @predefinedTypeAST {}

refclass @dataPredefinedTypeAST : @predefinedTypeAST {}

refclass @timerPredefinedTypeAST : @predefinedTypeAST {}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getConstructorMap
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@constructorMap outConstructorMap {
  outConstructorMap = {}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getGetterMap
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@getterMap outGetterMap {
  outGetterMap = {}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getSetterMap
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@setterMap outSetterMap {
  outSetterMap = {}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getInstanceMethodMap
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@instanceMethodMap outInstanceMethodMap {
  outInstanceMethodMap = {}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getClassMethodMap
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@classMethodMap outClassMethodMap {
  outClassMethodMap = {}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

getter @predefinedTypeAST getSupportedOperatorFlags -> @operators outFlags {
  outFlags = .none # No supported operator
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getAddAssignArgumentList
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@functionSignature outAddAssignArgumentList {
  outAddAssignArgumentList = {} # += is not supported
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  G E T    E N U M E R A T I O N    L I S T                                                                           *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @predefinedTypeAST getEnumerationList
  ?!@unifiedTypeMap unused ioUnifiedTypeMap
  !@enumerationDescriptorList outEnumerationList
  !@string outEnumeratedType
{
  outEnumerationList = {} # Enumeration is not supported
  outEnumeratedType = "" # Enumeration is not supported
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

