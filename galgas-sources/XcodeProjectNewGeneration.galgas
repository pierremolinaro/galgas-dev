#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                 
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @projectQualifiedFeatureMap {
  @lstring mFeatureValue
  insert insertKey error message "the '%K' attribute is already declared"
  search searchKey error message "the '%K' attribute is not declared"  
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addICNS_file
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef
{
  [!?self getReferenceKey ?ref:outFileRef]
  self.mICNS_fileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addTIFF_file
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mTIFF_fileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addInfoPlistFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mInfoPlistFileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addXIBFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mXIB_fileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addFrameworkFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mFrameworkFileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addMFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.m_M_FileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addMMFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.m_MM_FileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addCppFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mCppFileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addCFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mCFileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addHeaderFile
  ?fileName:let @string inFileName
  !fileRef:@string outFileRef {
  [!?self getReferenceKey ?ref:outFileRef]
  self.mHeaderFileList += !outFileRef !inFileName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addBuildFile
  ?fileRef:let @string inFileReference
  ?fileName:let @string inFileName
  !buildRef:@string outBuildRef {
  [!?self getReferenceKey ?ref:outBuildRef]
  self.mBuildFileList += !inFileReference !inFileName !outBuildRef
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addToolTarget
  ?targetName:let @string inTargetName
  ?productFileName:let @string inProductFileName
  ?sources:let @stringlist inSourceList
  ?frameworkRefs:let @stringlist inToolFrameworksFileRefList
  ?buildConfigurationSettingList:let @stringlist inBuildConfigurationSettingList
  !targetRef:@string outTargetRef
  !productFileRef:@string outProductFileRef {
  [!?self getReferenceKey ?ref:outProductFileRef]
  [!?self getReferenceKey ?ref:let buildPhaseRef]
  [!?self getReferenceKey ?ref:outTargetRef]
  [!?self getReferenceKey ?ref:let buildConfigurationListRef]
  [!?self getReferenceKey ?ref:let buildConfigurationRef]
  [!?self getReferenceKey ?ref:let frameworkBuildRef]
  self.mToolTargetList +=
    !outTargetRef
    !inTargetName
    !outProductFileRef
    !inProductFileName
    !inSourceList
    !buildPhaseRef
    !buildConfigurationListRef
    !inBuildConfigurationSettingList
    !buildConfigurationRef
    !inToolFrameworksFileRefList
    !frameworkBuildRef
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addAppTarget
  ?targetName:let @string inTargetName
  ?productFileName:let @string inProductFileName
  ?sources:let @stringlist inSourceList
  ?frameworkFileRefs:let @stringlist inFrameworksFileRefList
  ?resourceFileRefs:let @stringlist inResourceFileBuildRefs
  ?buildConfigurationSettingList:let @stringlist inBuildConfigurationSettingList
  ?dependantTargetList:let @stringlist inDependentTargetRefList
  ?productCopyList:let @2stringlist inProductCopyList
  !productFileRef:@string outProductFileRef {
  [!?self getReferenceKey ?ref:outProductFileRef]
  [!?self getReferenceKey ?ref:let buildPhaseRef]
  [!?self getReferenceKey ?ref:let targetRef]
  [!?self getReferenceKey ?ref:let buildConfigurationListRef]
  [!?self getReferenceKey ?ref:let buildConfigurationRef]
  [!?self getReferenceKey ?ref:let frameworkBuildRef]
  [!?self getReferenceKey ?ref:let resourceBuildRef]
  @2stringlist dependentTargets = {}
  for (ref) in inDependentTargetRefList do
    [!?self getReferenceKey ?ref:let dependencyBuildRef]
    dependentTargets += !dependencyBuildRef !ref
  end
  @stringlist resourceFileBuildRefs = inResourceFileBuildRefs
  for (ref name) in inProductCopyList do
    [!?self addBuildFile !fileRef:ref !fileName:name ?buildRef:let @string buildRef]
    resourceFileBuildRefs += !buildRef
  end
  self.mAppTargetList +=
    !targetRef
    !inTargetName
    !outProductFileRef
    !inProductFileName
    !inSourceList
    !buildPhaseRef
    !buildConfigurationListRef
    !inBuildConfigurationSettingList
    !buildConfigurationRef
    !inFrameworksFileRefList
    !frameworkBuildRef
    !dependentTargets
    !resourceBuildRef
    !resourceFileBuildRefs
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addGroup
  ?groupName:let @string inGroupName
  ?groupPath:let @string inGroupPath
  ?childrenRefs:let @stringlist inChildrenRefs
  !groupRef:@string outGroupRef
{
  if self.mDefaultConfigurationRef == "" then
    [!?self getReferenceKey ?ref: self.mDefaultConfigurationRef]
  end
  if self.mProjectBuildConfigurationRef == "" then
    [!?self getReferenceKey ?ref:self.mProjectBuildConfigurationRef]
  end
  if self.mMainGroupReference == "" then
    [!?self getReferenceKey ?ref:self.mMainGroupReference]
  end
  [!?self getReferenceKey ?ref:outGroupRef]
  self.mGroupList += !outGroupRef !inGroupName !inGroupPath !inChildrenRefs
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addGroupWithFiles
  ?groupName:let @string inGroupName
  ?groupPath:let @string inGroupPath
  ?fileNames:let @stringset inFileNames
  ?!cFileRefs:@stringlist ioCFileBuildRefs
  ?!cppFileRefs:@stringlist ioCppFileBuildRefs
  ?!mFileRefs:@stringlist ioMFileBuildRefs
  ?!mmFileRefs:@stringlist ioMMFileBuildRefs
  ?!frameworkFileRefs:@stringlist ioFrameWorkFileBuildRefs
  ?!resourceFileRefs:@stringlist ioResourceFileBuildRefs
  !groupRef:@string outGroupRef {
  if self.mDefaultConfigurationRef == "" then
    [!?self getReferenceKey ?ref:self.mDefaultConfigurationRef]
  end
  if self.mProjectBuildConfigurationRef == "" then
    [!?self getReferenceKey ?ref:self.mProjectBuildConfigurationRef]
  end
  if self.mMainGroupReference == "" then
    [!?self getReferenceKey ?ref:self.mMainGroupReference]
  end
  [!?self getReferenceKey ?ref:outGroupRef]
#---
  @stringlist childrenRefs = {}
  for (f) in inFileNames do
    if [f pathExtension] == "c" then
      [!?self addCFile !fileName:f ?fileRef:let @string cFileRef]
      childrenRefs += !cFileRef
      [!?self addBuildFile !fileRef:cFileRef !fileName:f ?buildRef:let @string buildRef]
      ioCFileBuildRefs += !buildRef
    elsif [f pathExtension] == "cpp" then
      [!?self addCppFile !fileName:f ?fileRef:let @string cppFileRef]
      childrenRefs += !cppFileRef
      [!?self addBuildFile !fileRef:cppFileRef !fileName:f ?buildRef:let @string buildRef]
      ioCppFileBuildRefs += !buildRef
    elsif [f pathExtension] == "h" then
      [!?self addHeaderFile !fileName:f ?fileRef:let @string headerFileRef]
      childrenRefs += !headerFileRef
    elsif [f pathExtension] == "m" then
      [!?self addMFile !fileName:f ?fileRef:let @string m_FileRef]
      [!?self addBuildFile !fileRef:m_FileRef !fileName:f ?buildRef:let @string buildRef]
      childrenRefs += !m_FileRef
      ioMFileBuildRefs += !buildRef
    elsif [f pathExtension] == "mm" then
      [!?self addMMFile !fileName:f ?fileRef:let @string m_FileRef]
      [!?self addBuildFile !fileRef:m_FileRef !fileName:f ?buildRef:let @string buildRef]
      childrenRefs += !m_FileRef
      ioMMFileBuildRefs += !buildRef
    elsif [f pathExtension] == "framework" then
      [!?self addFrameworkFile !fileName:f ?fileRef:let @string framework_FileRef]
      [!?self addBuildFile !fileRef:framework_FileRef !fileName:f ?buildRef:let @string buildRef]
      childrenRefs += !framework_FileRef
      ioFrameWorkFileBuildRefs += !buildRef
    elsif [f pathExtension] == "plist" then
      [!?self addInfoPlistFile !fileName:f ?fileRef:let @string resource_FileRef]
      childrenRefs += !resource_FileRef
    elsif [f pathExtension] == "xib" then
      [!?self addXIBFile !fileName:f ?fileRef:let @string resource_FileRef]
      childrenRefs += !resource_FileRef
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ?buildRef:let @string buildRef]
      ioResourceFileBuildRefs += !buildRef
    elsif [f pathExtension] == "tiff" then
      [!?self addTIFF_file !fileName:f ?fileRef:let @string resource_FileRef]
      childrenRefs += !resource_FileRef
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ?buildRef:let @string buildRef]
      ioResourceFileBuildRefs += !buildRef
    elsif [f pathExtension] == "icns" then
      [!?self addICNS_file !fileName:f ?fileRef:let @string resource_FileRef]
      childrenRefs += !resource_FileRef
      [!?self addBuildFile !fileRef:resource_FileRef !fileName:f ?buildRef:let @string buildRef]
      ioResourceFileBuildRefs += !buildRef
    else
      error @location. nowhere : "unhandled extension for file '" + f + "'"
    end
  end
  self.mGroupList += !outGroupRef !inGroupName !inGroupPath !childrenRefs
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor placeGroupAsMainGroup
  ?groupRef:let @string inGroupRef {
  self.mMainGroupChildrenRefs += !inGroupRef
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor addSettingsToDefaultConfiguration
  ?settingList:let @stringlist inSettingList {
  self.mDefaultConfigurationSettingList += inSettingList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @XCodeGroupList {
  @string mGroupReference
  @string mGroupName
  @string mGroupPath
  @stringlist mChildrenRefs
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @XCodeToolTargetList {
  @string mTargetRef
  @string mTargetName
  @string mProductFileReference
  @string mProductFileName
  @stringlist mBuildPhaseRefList
  @string mBuildPhaseRef
  @string mBuildConfigurationListRef
  @stringlist mBuildConfigurationSettingList
  @string mBuildConfigurationRef
  @stringlist mFrameworksFileRefList
  @string mFrameworkBuildPhaseRef
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @XCodeAppTargetList {
  @string mTargetRef
  @string mTargetName
  @string mProductFileReference
  @string mProductFileName
  @stringlist mBuildPhaseRefList
  @string mBuildPhaseRef
  @string mBuildConfigurationListRef
  @stringlist mBuildConfigurationSettingList
  @string mBuildConfigurationRef
  @stringlist mFrameworksFileRefList
  @string mFrameworkBuildPhaseRef
  @2stringlist mDependentTargets
  @string mResourceBuildRef
  @stringlist mResourceFileBuildRefs
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @BuildFileList {
  @string mFileReference
  @string mFileName
  @string mBuildReference
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

setter @XcodeProjectDescriptor getReferenceKey
  !ref:@string outRef {
  if self.mProjectObjectReference == "" then
    self.mProjectObjectReference = [[[self.mSequenceNumber string] md5] rightSubString!24]
    self.mSequenceNumber += 1
  end
  outRef = [[[self.mSequenceNumber string] md5] rightSubString!24]
  self.mSequenceNumber += 1
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct @XcodeProjectDescriptor {
  @uint mSequenceNumber
  @string mMainGroupReference
  @stringlist mMainGroupChildrenRefs
  @string mProjectObjectReference
  @XCodeGroupList mGroupList
  @XCodeToolTargetList mToolTargetList
  @XCodeAppTargetList mAppTargetList
  @2stringlist mCFileList
  @2stringlist mCppFileList
  @2stringlist m_M_FileList
  @2stringlist m_MM_FileList
  @2stringlist mFrameworkFileList
  @2stringlist mHeaderFileList
  @BuildFileList mBuildFileList
#--- Default configuration
  @string mDefaultConfigurationRef
  @stringlist mDefaultConfigurationSettingList
  @string mProjectBuildConfigurationRef
#--- Resource files
  @2stringlist mInfoPlistFileList
  @2stringlist mXIB_fileList
  @2stringlist mTIFF_fileList
  @2stringlist mICNS_fileList
#--- Project
  @string mApplicationBundleName
  @string mProjectName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

private filewrapper xcodeProjectGenerationFilewrapper in "+generation-templates/target_generation/project_xcode" {
}{
}{
  template xcodeproj "project.pbxproj.galgasTemplate"
    ?@string PROJECT_REF
    ?@string MAIN_GROUP_REF
    ?@XCodeGroupList GROUPS
    ?@stringlist MAIN_GROUP_CHILDREN_REFS
    ?@XCodeToolTargetList TOOL_TARGET_LIST
    ?@XCodeAppTargetList APP_TARGET_LIST
    ?@2stringlist C_FILE_LIST
    ?@2stringlist CPP_FILE_LIST
    ?@2stringlist M_FILE_LIST
    ?@2stringlist MM_FILE_LIST
    ?@2stringlist FRAMEWORK_FILE_LIST
    ?@2stringlist HEADER_FILE_LIST
    ?@2stringlist PLIST_FILE_LIST
    ?@2stringlist TIFF_FILE_LIST
    ?@2stringlist ICNS_FILE_LIST
    ?@2stringlist XIB_FILE_LIST
    ?@BuildFileList BUILD_FILE_LIST
    ?@string DEFAULT_CONFIGURATION_REF
    ?@stringlist DEFAULT_CONFIGURATION_SETTING_LIST
    ?@string PROJECT_BUILD_DEFAULT_CONFIGURATION_REF
    ?@string APPLICATION_BUNDLE_BASE
    ?@string PROJECT_NAME
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

method @XcodeProjectDescriptor generateAtPath
  ?xcodeprojPath:let @string inPath
  ?cacheFilePath:let @string inCacheFilePath {
  let contents = [filewrapper xcodeProjectGenerationFilewrapper.xcodeproj
    !self.mProjectObjectReference
    !self.mMainGroupReference
    !self.mGroupList
    !self.mMainGroupChildrenRefs
    !self.mToolTargetList
    !self.mAppTargetList
    !self.mCFileList
    !self.mCppFileList
    !self.m_M_FileList
    !self.m_MM_FileList
    !self.mFrameworkFileList
    !self.mHeaderFileList
    !self.mInfoPlistFileList
    !self.mTIFF_fileList
    !self.mICNS_fileList
    !self.mXIB_fileList
    !self.mBuildFileList
    !self.mDefaultConfigurationRef
    !self.mDefaultConfigurationSettingList
    !self.mProjectBuildConfigurationRef
    !self.mApplicationBundleName
    !self.mProjectName
  ]
  let projectCoreFile = inPath + "/project.pbxproj"
  if (not [projectCoreFile fileExists]) || (not [inCacheFilePath fileExists]) || (@string. stringWithContentsOfFile {!inCacheFilePath} != contents) then 
    [contents writeToFileWhenDifferentContents !inCacheFilePath ?*]
    [contents makeDirectoryAndWriteToFile !projectCoreFile]
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

