#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#!   AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalUIntExpressionAST : @semanticExpressionAST {
  @luint mValue
}

#·····················································································································

valueclass @literalUInt64ExpressionAST : @semanticExpressionAST {
  @luint64 mValue
}

#·····················································································································

valueclass @literalSIntExpressionAST : @semanticExpressionAST {
  @lsint mValue
}

#·····················································································································

valueclass @literalSInt64ExpressionAST : @semanticExpressionAST {
  @lsint64 mValue
}

#·····················································································································

valueclass @literalBigIntExpressionAST : @semanticExpressionAST {
  @lbigint mValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas3ExpressionSyntax {

  #·····················································································································
  
  rule <primary> !@semanticExpressionAST outExpression {
    $uint32$ ?let @luint literalInt
    outExpression = @literalUIntExpressionAST.new {!literalInt}
  }

  #·····················································································································
  
  rule <primary> !@semanticExpressionAST outExpression {
    $sint32_S$ ?let @lsint literalInt
    outExpression = @literalSIntExpressionAST.new {!literalInt}
  }

  #·····················································································································
  
  rule <primary> !@semanticExpressionAST outExpression {
    $uint64_L$ ?let @luint64 literalInt
    outExpression = @literalUInt64ExpressionAST.new {!literalInt}
  }

  #·····················································································································
  
  rule <primary> !@semanticExpressionAST outExpression {
    $sint64_LS$ ?let @lsint64 literalInt
    outExpression = @literalSInt64ExpressionAST.new {!literalInt}
  }

  #·····················································································································
  
  rule <primary> !@semanticExpressionAST outExpression {
    $bigint_G$ ?let @lbigint literalInt
    outExpression = @literalBigIntExpressionAST.new {!literalInt}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SEMANTICS
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalUIntExpressionAST enterExpressionInSemanticContext
  ?!@unifiedTypeMap unused ioTypeMap
{
}

#·····················································································································

override method @literalUIntExpressionAST analyzeSemanticExpression
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @unifiedTypeMap-entry unused inType
  ?let @analysisContext inAnalysisContext
  ?!@localVarManager unused ioVariableMap
  !@semanticExpressionForGeneration outExpression
{
  outExpression = @literalUIntExpressionForGeneration.new {
    !inAnalysisContext.mPredefinedTypes.mUIntType
    !self.mValue # [mValue location]
    !self.mValue # [mValue uint]
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalUInt64ExpressionAST enterExpressionInSemanticContext
  ?!@unifiedTypeMap unused ioTypeMap
{
}

#·····················································································································

override method @literalUInt64ExpressionAST analyzeSemanticExpression
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @unifiedTypeMap-entry unused inType
  ?let @analysisContext inAnalysisContext
  ?!@localVarManager unused ioVariableMap
  !@semanticExpressionForGeneration outExpression
{
  outExpression = @literalUInt64ExpressionForGeneration.new {
    !inAnalysisContext.mPredefinedTypes.mUInt64Type
    ![self.mValue location]
    ![self.mValue uint64]
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalSIntExpressionAST enterExpressionInSemanticContext
  ?!@unifiedTypeMap unused ioTypeMap
{
}

#·····················································································································

override method @literalSIntExpressionAST analyzeSemanticExpression
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @unifiedTypeMap-entry unused inType
  ?let @analysisContext inAnalysisContext
  ?!@localVarManager unused ioVariableMap
  !@semanticExpressionForGeneration outExpression
{
  outExpression = @literalSIntExpressionForGeneration.new {!inAnalysisContext.mPredefinedTypes.mSIntType ![self.mValue location] ![self.mValue sint]}
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalSInt64ExpressionAST enterExpressionInSemanticContext
  ?!@unifiedTypeMap unused ioTypeMap
{
}

#·····················································································································

override method @literalSInt64ExpressionAST analyzeSemanticExpression
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @unifiedTypeMap-entry unused inType
  ?let @analysisContext inAnalysisContext
  ?!@localVarManager unused ioVariableMap
  !@semanticExpressionForGeneration outExpression
{
  outExpression = @literalSInt64ExpressionForGeneration.new {
    !inAnalysisContext.mPredefinedTypes.mSInt64Type
    ![self.mValue location]
    ![self.mValue sint64]
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @literalBigIntExpressionAST enterExpressionInSemanticContext
  ?!@unifiedTypeMap unused ioTypeMap
{
}

#·····················································································································

override method @literalBigIntExpressionAST analyzeSemanticExpression
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @unifiedTypeMap-entry unused inType
  ?let @analysisContext inAnalysisContext
  ?!@localVarManager unused ioVariableMap
  !@semanticExpressionForGeneration outExpression
{
  outExpression = @literalBigIntExpressionForGeneration.new {
    !inAnalysisContext.mPredefinedTypes.mBigIntType
    ![self.mValue location]
    ![self.mValue bigint]
  }
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! CODE GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalUIntExpressionForGeneration : @semanticExpressionForGeneration {
  @uint mValue
}

#·····················································································································

override method @literalUIntExpressionForGeneration generateExpression
  ?!@string unused ioGeneratedCode
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppExpression {
  outCppExpression = "GALGAS_uint ((uint32_t) " + [self.mValue string]+ "U)"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalUInt64ExpressionForGeneration : @semanticExpressionForGeneration {
  @uint64 mValue
}

#·····················································································································

override method @literalUInt64ExpressionForGeneration generateExpression
  ?!@string unused ioGeneratedCode
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppExpression {
  outCppExpression = "GALGAS_uint_36__34_ ((uint64_t) " + [self.mValue string]+ "ULL)"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalSIntExpressionForGeneration : @semanticExpressionForGeneration {
  @sint mValue
}

#·····················································································································

override method @literalSIntExpressionForGeneration generateExpression
  ?!@string unused ioGeneratedCode
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppExpression {
  outCppExpression = "GALGAS_sint ((int32_t) " + [self.mValue string]+ "L)"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalSInt64ExpressionForGeneration : @semanticExpressionForGeneration {
  @sint64 mValue
}

#·····················································································································

override method @literalSInt64ExpressionForGeneration generateExpression
  ?!@string unused ioGeneratedCode
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppExpression {
  outCppExpression = "GALGAS_sint_36__34_ ((int64_t) " + [self.mValue string]+ "LL)"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

valueclass @literalBigIntExpressionForGeneration : @semanticExpressionForGeneration {
  @bigint mValue
}

#·····················································································································

override method @literalBigIntExpressionForGeneration generateExpression
  ?!@string unused ioGeneratedCode
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression
{
  outCppExpression = "GALGAS_bigint (\"" + [self.mValue string]+ "\", "
  [!?ioUnusedVariableCppNameSet removeKey !compilerCppName ()]
  outCppExpression += compilerCppName ()
  outCppExpression += " " + [self.mLocation commaSourceFile] + ")"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
