#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalDropInstructionAST : @lexicalInstructionAST {
  private let @lstring mTerminalName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas3LexiqueComponentSyntax {

  #·················································································································

  rule <lexical_instruction> ?!@lexicalInstructionListAST ioInstructionList {
    $drop$
    $\$terminal\$$ ?let terminalName
    ioInstructionList += !@lexicalDropInstructionAST.new {!terminalName}
  }

  #·················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas4LexiqueComponentSyntax {

  #·················································································································

  rule <lexical_instruction> ?!@lexicalInstructionListAST ioInstructionList {
    $drop$
    $\$terminal\$$ ?let terminalName
    ioInstructionList += !@lexicalDropInstructionAST.new {!terminalName}
  }

  #·················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! CHECK LEXICAL INSTRUCTION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @lexicalDropInstructionAST checkLexicalInstruction
  ?!@lexiqueAnalysisContext  ioLexiqueAnalysisContext
  ?!@lexicalTagMap unused ioTagMap {
  [ioLexiqueAnalysisContext.mTerminalMap searchKey !self.mTerminalName ?*]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! COCOA GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalDropInstructionAST generateObjcCocoaInstructionCode
  ?let @string inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string outGeneratedCode {
  outGeneratedCode = "mTokenCode = " + inScannerClassName + "_1_" + [self.mTerminalName.string identifierRepresentation] + " ;\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalDropInstructionAST generateSwiftCocoaInstructionCode
  ?let @string inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string outGeneratedCode {
  outGeneratedCode = "tokenCode = " + inScannerClassName + "_1_" + [self.mTerminalName.string identifierRepresentation] + "\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! C++ CODE GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalDropInstructionAST lexicalInstructionUsesLoopLocalVariable -> @bool {
  result = false
}

#······················································································································

override getter @lexicalDropInstructionAST generateLexicalInstructionCode
  ?let @string unused inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string
{
  result = "enterDroppedTerminal (kToken_" + [self.mTerminalName identifierRepresentation] + ") ;\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————

