#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  Generate predefined types                
#                                           
#  Copyright (C) 2010, ..., 2014 Pierre Molinaro.                                                                      *
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @outputActualParameterForGeneration generateActualParameter
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@string ioImplementation
  ?!@stringlist unused ioJokerParametersToReleaseList
  ?!@stringlist unused ioOutputVariableList
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppName
{
  [self.mFormalArgumentType addHeaderFileName !?ioInclusionSet]
  [self.mOutputActualParameterExpression generateExpression !?ioImplementation !?ioInclusionSet !?ioTemporaryVariableIndex !?ioUnusedVariableCppNameSet ?outCppName]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @outputInputActualParameterForGeneration generateActualParameter
  ?!@stringset ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@string unused ioImplementation
  ?!@stringlist unused ioJokerParametersToReleaseList
  ?!@stringlist unused ioOutputVariableList
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppName {
  for (t) in self.mTypeList do
    [t addHeaderFileName !?ioInclusionSet]
  end
  outCppName = self.mOutputInputVariableCppName
  for () in self.mStructAttributeList do
    outCppName += ".mProperty_" + [mValue identifierRepresentation]
  end
  [!?ioUnusedVariableCppNameSet removeKey !self.mOutputInputVariableCppName]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @inputActualParameterForGeneration generateActualParameter
  ?!@stringset unused ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@string unused ioImplementation
  ?!@stringlist unused ioJokerParametersToReleaseList
  ?!@stringlist ioOutputVariableList
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppName {
  outCppName = self.mInputActualCppName
  ioOutputVariableList += !self.mInputActualCppName
  [!?ioUnusedVariableCppNameSet removeKey !outCppName]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @inputJokerParameterForGeneration generateActualParameter
  ?!@stringset ioInclusionSet
  ?!@uint unused ioTemporaryVariableIndex
  ?!@string ioImplementation
  ?!@stringlist ioJokerParametersToReleaseList
  ?!@stringlist ioOutputVariableList
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppName {
  [self.mFormalArgumentType addHeaderFileName !?ioInclusionSet]
  outCppName = self.mInputActualCppName
  ioImplementation += "GALGAS_" + [self.mFormalArgumentType identifierRepresentation] + " " + outCppName + " ; // Joker input parameter\n"
  ioJokerParametersToReleaseList += !self.mInputActualCppName
  ioOutputVariableList += !self.mInputActualCppName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @semanticBlockInstructionForGeneration generateInstruction
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  ?let @bool inGenerateSyntaxDirectedTranslationString
  ?!@string ioGeneratedCode {
  ioGeneratedCode += "{\n"
  generateInstructionList (
    !?ioInclusionSet
    !self.mInstructionList
    !?ioTemporaryVariableIndex
    !?ioUnusedVariableCppNameSet
    !inGenerateSyntaxDirectedTranslationString
    !?ioGeneratedCode
  )
  ioGeneratedCode += "}\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
