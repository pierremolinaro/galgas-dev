//
//  MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software
// and associated documentation files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//------------------------------------------------------------------------------------------------

private filewrapper targetGalgas3GenerationFileWrapper in "+generation-templates/target_generation" {
 "bat", "rtf", "py"
}{
}{
  template clean_macosx "makefile-macosx/clean.py.galgasTemplate" ?@string PROJECT_NAME
  template build_macosx "makefile-macosx/build.py.galgasTemplate" ?@string PROJECT_NAME ?@string BUILD_DIR_NAME
  template build_verbose_macosx "makefile-macosx/verbose-build.py.galgasTemplate"
  template build_debug_macosx "makefile-macosx/build+debug.py.galgasTemplate"
  template build_release_macosx "makefile-macosx/build+release.py.galgasTemplate"
  template build_lto_macosx "makefile-macosx/build+lto.py.galgasTemplate"
//  template install_macosx "makefile-macosx/install.py.galgasTemplate"

  template clean_unix "makefile-unix/clean.py.galgasTemplate" ?@string PROJECT_NAME
  template build_unix "makefile-unix/build.py.galgasTemplate" ?@string PROJECT_NAME ?@string BUILD_DIR_NAME
  template build_verbose_unix "makefile-unix/verbose-build.py.galgasTemplate"
  template build_debug_unix "makefile-unix/build+debug.py.galgasTemplate"
  template build_release_unix "makefile-unix/build+release.py.galgasTemplate"
  template build_lto_unix "makefile-unix/build+lto.py.galgasTemplate"
  template install_unix "makefile-unix/install.py.galgasTemplate"

  template clean_x86linux32_on_mac "makefile-x86linux32-on-macosx/clean.py.galgasTemplate" ?@string PROJECT_NAME
  template build_x86linux32_on_mac "makefile-x86linux32-on-macosx/build.py.galgasTemplate" ?@string PROJECT_NAME ?@string BUILD_DIR_NAME
  template build_verbose_x86linux32_on_mac "makefile-x86linux32-on-macosx/verbose-build.py.galgasTemplate"
  template build_debug_x86linux32_on_mac "makefile-x86linux32-on-macosx/build+debug.py.galgasTemplate"
  template build_release_x86linux32_on_mac "makefile-x86linux32-on-macosx/build+release.py.galgasTemplate"
  template build_lto_x86linux32_on_mac "makefile-x86linux32-on-macosx/build+lto.py.galgasTemplate"

  template clean_x86linux64_on_mac "makefile-x86linux64-on-macosx/clean.py.galgasTemplate" ?@string PROJECT_NAME
  template build_x86linux64_on_mac "makefile-x86linux64-on-macosx/build.py.galgasTemplate" ?@string PROJECT_NAME ?@string BUILD_DIR_NAME
  template build_verbose_x86linux64_on_mac "makefile-x86linux64-on-macosx/verbose-build.py.galgasTemplate"
  template build_debug_x86linux64_on_mac "makefile-x86linux64-on-macosx/build+debug.py.galgasTemplate"
  template build_release_x86linux64_on_mac "makefile-x86linux64-on-macosx/build+release.py.galgasTemplate"
  template build_lto_x86linux64_on_mac "makefile-x86linux64-on-macosx/build+lto.py.galgasTemplate"

  template clean_win32_on_mac "makefile-win32-on-macosx/clean.py.galgasTemplate" ?@string PROJECT_NAME
  template build_win32_on_mac "makefile-win32-on-macosx/build.py.galgasTemplate" ?@string PROJECT_NAME ?@string BUILD_DIR_NAME
  template build_verbose_win32_on_mac "makefile-win32-on-macosx/verbose-build.py.galgasTemplate"
  template build_debug_win32_on_mac "makefile-win32-on-macosx/build+debug.py.galgasTemplate"
  template build_release_win32_on_mac "makefile-win32-on-macosx/build+release.py.galgasTemplate"
  template build_lto_win32_on_mac "makefile-win32-on-macosx/build+lto.py.galgasTemplate"

  template codeblocks_project "project-codeblocks.cbp.galgasTemplate"
    ?@string PROJECT_NAME
    ?@stringlist TOOL_CPP_FILE_LIST
    ?@string LIBPM_PATH
    ?@stringlist HAND_CODED_SOURCE_TOOL_FILE_LIST
    ?@stringset HAND_CODED_SOURCE_TOOL_DIRECTORY_SET
    ?windows:@bool GENERATE_FOR_WINDOWS
    ?platform:@string PLATFORM
    ?verboseOption:@bool VERBOSE_OPTION
    ?buildDirName: @string BUILD_DIR_NAME

  template makefile_info_plist "project-xcode-objc/Info.plist.txt"
    ?@string PROJECT_NAME
    ?@string APPLICATION_BUNDLE_BASE
    ?@string VERSION_STRING
    ?@stringset HANDLED_EXTENSION_SET
    ?@string MACOSX_DEPLOYMENT_TARGET

  template makefile_build_xcode "project-xcode-objc/build.command"

  template makefile_info_plist_strings "project-xcode-objc/Base.lproj/InfoPlist.strings" ?@string PROJECT_NAME

  template json_file_list "json-file-list-galgas3.galgasTemplate"
    ?@stringset HAND_CODED_SOURCE_DIR_SET
    ?@stringlist HAND_CODED_SOURCE_FILE_LIST
    ?@stringlist MAKEFILE_FILE_LIST
    ?@stringlist TOOL_LINK_LIST
    ?@string LIBPM_DIRECTORY_PATH
    ?@string RELATIVE_BUILD_DIR

  template project_header "project.h.galgasTemplate"
    ?@string VERSION_STRING
}

//------------------------------------------------------------------------------------------------

private proc generateGalgasCodeBlocksWindowsTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName
  ?let @stringlist inToolCppFileList
  ?libpmPath: let @string inLIBPMpath
  ?let @stringlist inHandCodedSourceToolFileList
  ?let @stringset inHandCodedSourceDirectorySet
  ?let @bool inVerboseOption
{
  let @string dir = inProjectDirectory + "/project-codeblocks-windows"
  [dir makeDirectory]
  let @string s = [filewrapper targetGalgas3GenerationFileWrapper.codeblocks_project
    !inProjectName
    !inToolCppFileList
    !inLIBPMpath
    !inHandCodedSourceToolFileList
    !inHandCodedSourceDirectorySet
    !windows:true
    !platform:"Windows"
    !verboseOption:inVerboseOption
    !buildDirName: inBuildDirectoryName
  ]
  [s writeToFileWhenDifferentContents !dir + "/" + inProjectName + ".cbp" ?*]
}

//------------------------------------------------------------------------------------------------

//private proc generateGalgasCodeBlocksMacTarget
//  ?let @string inProjectDirectory
//  ?buildDirName: let @string inBuildDirectoryName
//  ?let @string inProjectName
//  ?let @stringlist inToolCppFileList
//  ?let @string inLIBPMpath
//  ?let @stringlist inHandCodedSourceToolFileList
//  ?let @stringset inHandCodedSourceDirectorySet
//  ?let @bool inVerboseOption
//{
//  let @string dir = inProjectDirectory + "/project-codeblocks-mac"
//  [dir makeDirectory]
//  let @string s = [filewrapper targetGalgas3GenerationFileWrapper.codeblocks_project
//    !inProjectName
//    !inToolCppFileList
//    !inLIBPMpath
//    !inHandCodedSourceToolFileList
//    !inHandCodedSourceDirectorySet
//    !windows:false
//    !platform:"Mac"
//    !verboseOption:inVerboseOption
//    !buildDirName: inBuildDirectoryName
//  ]
//  [s writeToFileWhenDifferentContents !dir + "/" + inProjectName + ".cbp" ?*]
//}

//------------------------------------------------------------------------------------------------

private proc generateGalgasCodeBlocksLinuxI686Target
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName
  ?let @stringlist inToolCppFileList
  ?let @string inLIBPMpath
  ?let @stringlist inHandCodedSourceToolFileList
  ?let @stringset inHandCodedSourceDirectorySet
  ?let @bool inVerboseOption
 {
  let @string dir = inProjectDirectory + "/project-codeblocks-linux32"
  [dir makeDirectory]
  let @string s = [filewrapper targetGalgas3GenerationFileWrapper.codeblocks_project
    !inProjectName
    !inToolCppFileList
    !inLIBPMpath
    !inHandCodedSourceToolFileList
    !inHandCodedSourceDirectorySet
    !windows:false
    !platform:"Unix"
    !verboseOption:inVerboseOption
    !buildDirName: inBuildDirectoryName
  ]
  [s writeToFileWhenDifferentContents !dir + "/" + inProjectName + ".cbp" ?*]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgasCodeBlocksLinuxX86_64Target
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName
  ?let @stringlist inToolCppFileList
  ?let @string inLIBPMpath
  ?let @stringlist inHandCodedSourceToolFileList
  ?let @stringset inHandCodedSourceDirectorySet
  ?let @bool inVerboseOption
{
  let @string dir = inProjectDirectory + "/project-codeblocks-linux64"
  [dir makeDirectory]
  let @string s = [filewrapper targetGalgas3GenerationFileWrapper.codeblocks_project
    !inProjectName
    !inToolCppFileList
    !inLIBPMpath
    !inHandCodedSourceToolFileList
    !inHandCodedSourceDirectorySet
    !windows:false
    !platform:"Unix"
    !verboseOption:inVerboseOption
    !buildDirName: inBuildDirectoryName
  ]
  [s writeToFileWhenDifferentContents !dir + "/" + inProjectName + ".cbp" ?*]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgas3MinGWOnMacOSXTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName {
  let @string dir = inProjectDirectory + "/makefile-win32-on-macosx"
  [dir makeDirectory]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_win32_on_mac !inProjectName !inBuildDirectoryName] writeToExecutableFileWhenDifferentContents !dir +"/build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_release_win32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+release.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_lto_win32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+lto.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_debug_win32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+debug.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_verbose_win32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/verbose-build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.clean_win32_on_mac !inProjectName] writeToExecutableFileWhenDifferentContents
    !dir +"/clean.py"
    ?*
  ]
  [@string deleteFileIfExists !dir + "/makefile"]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgas3MakefileUnixTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName {
  let @string dir = inProjectDirectory + "/makefile-unix"
  [dir makeDirectory]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_unix !inProjectName !inBuildDirectoryName] writeToExecutableFileWhenDifferentContents !dir +"/build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_release_unix] writeToExecutableFileWhenDifferentContents !dir +"/build+release.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_lto_unix] writeToExecutableFileWhenDifferentContents !dir +"/build+lto.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_debug_unix] writeToExecutableFileWhenDifferentContents !dir +"/build+debug.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_verbose_unix] writeToExecutableFileWhenDifferentContents !dir +"/verbose-build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.install_unix] writeToExecutableFileWhenDifferentContents !dir +"/install.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.clean_unix !inProjectName] writeToExecutableFileWhenDifferentContents !dir +"/clean.py" ?*]
  [@string deleteFileIfExists !dir + "/makefile"]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgas3MakefileMacTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName {
  let @string dir = inProjectDirectory + "/makefile-macosx"
  [dir makeDirectory]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_macosx !inProjectName !inBuildDirectoryName] writeToExecutableFileWhenDifferentContents !dir +"/build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_release_macosx] writeToExecutableFileWhenDifferentContents !dir +"/build+release.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_lto_macosx] writeToExecutableFileWhenDifferentContents !dir +"/build+lto.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_debug_macosx] writeToExecutableFileWhenDifferentContents !dir +"/build+debug.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_verbose_macosx] writeToExecutableFileWhenDifferentContents !dir +"/verbose-build.py" ?*]
//  [[filewrapper targetGalgas3GenerationFileWrapper.install_macosx] writeToExecutableFileWhenDifferentContents !dir +"/install.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.clean_macosx !inProjectName] writeToExecutableFileWhenDifferentContents !dir +"/clean.py" ?*]
  [@string deleteFileIfExists !dir + "/makefile"]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgas3Linux32OnMacOSXTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName {
  let @string dir = inProjectDirectory + "/makefile-x86linux32-on-macosx"
  [dir makeDirectory]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_x86linux32_on_mac !inProjectName !inBuildDirectoryName] writeToExecutableFileWhenDifferentContents !dir +"/build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_release_x86linux32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+release.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_lto_x86linux32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+lto.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_debug_x86linux32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+debug.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_verbose_x86linux32_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/verbose-build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.clean_x86linux32_on_mac !inProjectName] writeToExecutableFileWhenDifferentContents !dir +"/clean.py" ?*]
  [@string deleteFileIfExists !dir + "/makefile"]
}

//------------------------------------------------------------------------------------------------

private proc generateGalgas3Linux64OnMacOSXTarget
  ?let @string inProjectDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectName {
  let @string dir = inProjectDirectory + "/makefile-x86linux64-on-macosx"
  [dir makeDirectory]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_x86linux64_on_mac !inProjectName !inBuildDirectoryName] writeToExecutableFileWhenDifferentContents !dir +"/build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_release_x86linux64_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+release.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_lto_x86linux64_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+lto.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_debug_x86linux64_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/build+debug.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.build_verbose_x86linux64_on_mac] writeToExecutableFileWhenDifferentContents !dir +"/verbose-build.py" ?*]
  [[filewrapper targetGalgas3GenerationFileWrapper.clean_x86linux64_on_mac !inProjectName] writeToExecutableFileWhenDifferentContents !dir +"/clean.py" ?*]
  [@string deleteFileIfExists !dir + "/makefile"]
}

//------------------------------------------------------------------------------------------------

proc updateGalgasTargets
  ?absoluteBuildDir: let @string inAbsoluteBuildDirectory
  ?buildDirName: let @string inBuildDirectoryName
  ?let @string inProjectSourceFilePath
  ?let @string inTargetName
  ?let @location unused inEndOfProjectSourceFile
  ?let @string inProjectVersionString
  ?let @projectQualifiedFeatureMap inProjectQualifiedFeatureMap
  ?let @lstringlist inTargetFeatureList
  ?let @bool inQuietOutputByDefault
  ?let @stringlist inToolCppFileList
  ?let @stringlist inToolHeaderFileList
  ?let @stringlist inAppProductFileList
  ?let @stringlist inHandCodedSourceToolFileList
  ?let @stringlist inFrameworkToolFileList
  ?let @stringset inHandCodedSourceDirectorySet
  ?let @stringset inHandledExtensionSet
  ?!@stringset ioAllProductFileSet
  ?let @stringlist inHandCodedSourceAppFileList
  ?let @stringlist inHandCodedLinkAppFileList
  ?let @stringlist inHandCodedLinkToolFileList
{
  let projectDirectory = [inProjectSourceFilePath stringByDeletingLastPathComponent]
//--- Update project header
  [[filewrapper targetGalgas3GenerationFileWrapper.project_header !inProjectVersionString] writeToFileWhenDifferentContents
    !inAbsoluteBuildDirectory + "/output/project_header.h"
    ?*
  ]
  ioAllProductFileSet += !"project_header.h"
//---------------------------------------------------------- %quietOutputByDefault
  var toolCppFileList = inToolCppFileList
  if inQuietOutputByDefault then
    toolCppFileList += !"C_galgas_verbose_option.cpp"
  else
    toolCppFileList += !"C_galgas_quiet_option.cpp"
  end
//---------------------------------------------------------- macCodeSign
  let @lstring macCodeSign
  with "macCodeSign" in inProjectQualifiedFeatureMap  do
    if mFeatureValue.string == "" then
      error mFeatureValue:"the %macCodeSign attribute should not be empty" : macCodeSign
    else
      macCodeSign = mFeatureValue
    end
  else
    macCodeSign = ["" nowhere]
  end
//---------------------------------------------------------- MacOSDeployment
  let @string MACOSX_DEPLOYMENT_TARGET
  with "MacOSDeployment" in inProjectQualifiedFeatureMap  do
    if mFeatureValue.string == "" then
      error mFeatureValue:"the %MacOSDeployment attribute should not be empty" : MACOSX_DEPLOYMENT_TARGET
    else
      MACOSX_DEPLOYMENT_TARGET = mFeatureValue
    end
  else
    MACOSX_DEPLOYMENT_TARGET = ["10.13" nowhere]
  end
//---------------------------------------------------------- LIBPM path
  let @string libpmPath
  with "libpmAtPath" in inProjectQualifiedFeatureMap  do
    if mFeatureValue.string == "" then
      error mFeatureValue:"the libpm path should not be empty" : libpmPath
    else
      libpmPath = mFeatureValue.string
    end
  else
    updateLIBPMatPath (!inAbsoluteBuildDirectory + "/libpm" )
    libpmPath = "../" + inBuildDirectoryName + "/libpm"
  end
//--------------------------------------- Check target names, file base name uniqueness, and build target file list
//--- Parse features
  var @stringset availableGenerationFeatures = @()
  availableGenerationFeatures += !"quietOutputByDefault"
  availableGenerationFeatures += !"codeblocks-windows"
  availableGenerationFeatures += !"codeblocks-linux32"
  availableGenerationFeatures += !"codeblocks-linux64"
  availableGenerationFeatures += !"makefile-macosx"
  availableGenerationFeatures += !"makefile-unix"
  availableGenerationFeatures += !"makefile-x86linux32-on-macosx"
  availableGenerationFeatures += !"makefile-x86linux64-on-macosx"
  availableGenerationFeatures += !"makefile-win32-on-macosx"
  availableGenerationFeatures += !"MacOS"
  var @stringset generationFeatures = @()
//--- Check xcode target architectures
  var @string SDK = ""
  for (value) in inTargetFeatureList do
    if [availableGenerationFeatures hasKey !value.string] then
      if [generationFeatures hasKey !value.string] then
        error value: "duplicate '" + value + "' feature"
      end
   //--- MacOS
      if value.string == "MacOS" then
        if (SDK != "") then
          error value: "duplicated setting"
        end
        SDK = "macosx"
      else
        generationFeatures += !value.string
      end
    else
      var @stringlist s = @()
      for (key) in availableGenerationFeatures do
        s += !"%" + key
      end
      error value: "unknown '" + value + "' feature" fixit { replace s }
    end
  end
//--- Codesign without selecting OSX ?
  if (macCodeSign.string != "") && (SDK == "") then
    error macCodeSign
    : "the %macCodeSign attribute implies the definition of an OS X target system: \"%MacOS\""
  end
//--- Generation of Xcode project given by command line option ?
//  if [option galgas_cli_options.macosxSDK value] != 0 then
//    SDK = "macosx10." + [option galgas_cli_options.macosxSDK value]
//  end
//--- Check Cocoa features
  if SDK != "", not [inProjectQualifiedFeatureMap hasKey !"applicationBundleBase"] then
    warning @location.here: "For a Cocoa project, the \"applicationBundleBase\" feature should be set; for example: '%applicationBundleBase : \"fr.what\" ;'"
  end
//--- Generation
  if [generationFeatures hasKey !"makefile-macosx"] then
    generateGalgas3MakefileMacTarget (!projectDirectory !buildDirName: inBuildDirectoryName !inTargetName )
  end
  if [generationFeatures hasKey !"makefile-unix"] then
    generateGalgas3MakefileUnixTarget (!projectDirectory !buildDirName: inBuildDirectoryName !inTargetName )
  end
  if [generationFeatures hasKey !"makefile-x86linux32-on-macosx"] then
    generateGalgas3Linux32OnMacOSXTarget (!projectDirectory !buildDirName: inBuildDirectoryName !inTargetName )
  end
  if [generationFeatures hasKey !"makefile-x86linux64-on-macosx"] then
    generateGalgas3Linux64OnMacOSXTarget (!projectDirectory !buildDirName: inBuildDirectoryName !inTargetName )
  end
  if [generationFeatures hasKey !"makefile-win32-on-macosx"] then
    generateGalgas3MinGWOnMacOSXTarget (!projectDirectory !buildDirName: inBuildDirectoryName !inTargetName )
  end
  if [generationFeatures hasKey !"codeblocks-windows"] then
    generateGalgasCodeBlocksWindowsTarget (
      !projectDirectory
      !buildDirName: inBuildDirectoryName
      !inTargetName
      !inToolCppFileList
      !libpmPath: libpmPath
      !inHandCodedSourceToolFileList
      !inHandCodedSourceDirectorySet
      !inQuietOutputByDefault
    )
  end
  if [generationFeatures hasKey !"codeblocks-linux32"] then
    generateGalgasCodeBlocksLinuxI686Target (
      !projectDirectory
      !buildDirName: inBuildDirectoryName
      !inTargetName
      !inToolCppFileList
      !libpmPath
      !inHandCodedSourceToolFileList
      !inHandCodedSourceDirectorySet
      !inQuietOutputByDefault
    )
  end
  if [generationFeatures hasKey !"codeblocks-linux64"] then
    generateGalgasCodeBlocksLinuxX86_64Target (
      !projectDirectory
      !buildDirName: inBuildDirectoryName
      !inTargetName
      !inToolCppFileList
      !libpmPath
      !inHandCodedSourceToolFileList
      !inHandCodedSourceDirectorySet
      !inQuietOutputByDefault
    )
  end
//--- Frameworks to link with tool
  var @stringlist linkOptionForLinkingFrameworkWithTool = @()
  if [inFrameworkToolFileList count] > 0 then
    if SDK != "macosx" then
      linkOptionForLinkingFrameworkWithTool += !"-isysroot"
      linkOptionForLinkingFrameworkWithTool += !"/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/" + SDK + ".sdk"
    end
    for (s) in inFrameworkToolFileList do
      linkOptionForLinkingFrameworkWithTool += !"-framework"
      linkOptionForLinkingFrameworkWithTool += ![s stringByDeletingPathExtension]
    end
  end
//--- Update json file list
  var @stringlist handCodedSourceToolFileList = @()
  for (f) in inHandCodedSourceToolFileList do
    if [f pathExtension] != "h" then
      handCodedSourceToolFileList += ![f lastPathComponent]
    end
  end
  let jsonFileListContents = [filewrapper targetGalgas3GenerationFileWrapper.json_file_list
    !inHandCodedSourceDirectorySet
    !handCodedSourceToolFileList
    !toolCppFileList
    !linkOptionForLinkingFrameworkWithTool + inHandCodedLinkToolFileList
    !libpmPath
    !inBuildDirectoryName
  ]
  let jsonFileListPath = inAbsoluteBuildDirectory + "/output/file-list.json"
  [jsonFileListContents writeToFileWhenDifferentContents !jsonFileListPath ?*]
  ioAllProductFileSet += !"file-list.json"
//--------------------- update Xcode project
  if SDK != "" then
    let dir = projectDirectory + "/xcode-project"
    [dir makeDirectory]
  //--- Info.plist
    let @string applicationBundleBase
    with "applicationBundleBase" in inProjectQualifiedFeatureMap  do
      applicationBundleBase = mFeatureValue.string
    else
      applicationBundleBase = "fr.irccyn"
    end
    let InfoPlistContents = [filewrapper targetGalgas3GenerationFileWrapper.makefile_info_plist
      !inTargetName
      !applicationBundleBase
      !inProjectVersionString
      !inHandledExtensionSet
      !MACOSX_DEPLOYMENT_TARGET
    ]
    [InfoPlistContents writeToFileWhenDifferentContents !dir +"/Info.plist" ?*]
  //--- Build.command
    if not [dir + "/build.command" fileExists] then
      [[filewrapper targetGalgas3GenerationFileWrapper.makefile_build_xcode] writeToExecutableFile !dir +"/build.command"]
    end

    [dir + "/Base.lproj" makeDirectory]
    let InfoPlist_strings_path = dir + "/Base.lproj/InfoPlist.strings"
    [[filewrapper targetGalgas3GenerationFileWrapper.makefile_info_plist_strings !inTargetName] writeToFileWhenDifferentContents !InfoPlist_strings_path ?*]
    let Credits_rtf_path = dir + "/Base.lproj/Credits.rtf"
    if not [Credits_rtf_path fileExists] then
      [[filewrapper targetGalgas3GenerationFileWrapper."project-xcode-objc/Base.lproj/Credits.rtf"] writeToFile !Credits_rtf_path]
    end
  //--- Enumerate icons files in "userResources" directory
    let userResourceDir = projectDirectory + "/xcode-project/userResources"
    [userResourceDir makeDirectory]
    let @stringlist extensionList =@[@("icns")]
    let resourceFiles = [userResourceDir regularFilesWithExtensions !false !extensionList]
  //--- Build pathes
    let newIntermediateFilePath = inAbsoluteBuildDirectory + "/output/file-list-for-xcode-project.txt"
    ioAllProductFileSet += !"file-list-for-xcode-project.txt"
  //------------------------------------------------------- New Xcode project generation
    var xcodeProject = @XcodeProjectDescriptor {}
    xcodeProject.mApplicationBundleName = applicationBundleBase
    xcodeProject.mProjectName = inTargetName
    var headerSearchPaths = "HEADER_SEARCH_PATHS = (\"../"
      + inBuildDirectoryName + "/output\", \"../" + inBuildDirectoryName
      + "/libpm\", \"../"
      + inBuildDirectoryName + "/user-headers\""
    for directory in inHandCodedSourceDirectorySet do
      headerSearchPaths += ", \"" + directory + "\""
    end
    headerSearchPaths += ")"
  //--- Default build configuration
    var @stringlist xcodeSettingList = @[
      @("ALWAYS_SEARCH_USER_PATHS = NO"),
      @("CLANG_CXX_LANGUAGE_STANDARD = \"c++17\""),
      @("CLANG_ENABLE_OBJC_ARC = YES"),
      @("CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES"),
      @("CLANG_WARN_COMMA = YES"),
      @("CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES"),
      @("CLANG_WARN_EMPTY_BODY = YES"),
      @("CLANG_WARN_INFINITE_RECURSION = YES"),
      @("CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES"),
      @("CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES"),
      @("CLANG_WARN_RANGE_LOOP_ANALYSIS = YES"),
      @("CLANG_WARN_STRICT_PROTOTYPES = YES"),
      @("CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES"),
      @("CLANG_WARN_SUSPICIOUS_MOVE = YES"),
      @("CLANG_WARN_UNREACHABLE_CODE = YES"),
      @("CLANG_WARN__DUPLICATE_METHOD_MATCH = YES"),
      @("GCC_GENERATE_DEBUGGING_SYMBOLS = NO"),
      @("GCC_NO_COMMON_BLOCKS = YES"),
      @("ENABLE_STRICT_OBJC_MSGSEND = YES"),
      @("GCC_PRECOMPILE_PREFIX_HEADER = YES"),
      @("GCC_THREADSAFE_STATICS = NO"),
      @("GCC_TREAT_IMPLICIT_FUNCTION_DECLARATIONS_AS_ERRORS = YES"),
      @("GCC_TREAT_WARNINGS_AS_ERRORS = YES"),
      @("GCC_WARN_64_TO_32_BIT_CONVERSION = YES"),
      @("GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = NO"),
      @("GCC_WARN_ABOUT_INVALID_OFFSETOF_MACRO = YES"),
      @("CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES"),
      @("GCC_WARN_ABOUT_MISSING_NEWLINE = YES"),
      @("GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES"),
      @("GCC_WARN_ABOUT_RETURN_TYPE = YES"),
      @("GCC_WARN_CHECK_SWITCH_STATEMENTS = YES"),
      @("GCC_WARN_FOUR_CHARACTER_CONSTANTS = YES"),
      @("GCC_WARN_HIDDEN_VIRTUAL_FUNCTIONS = YES"),
      @("GCC_WARN_INHIBIT_ALL_WARNINGS = NO"),
      @("GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES"),
      @("GCC_WARN_MISSING_PARENTHESES = YES"),
      @("GCC_WARN_NON_VIRTUAL_DESTRUCTOR = YES"),
      @("GCC_WARN_PEDANTIC = NO"),
      @("GCC_WARN_SHADOW = YES"),
      @("GCC_WARN_SIGN_COMPARE = YES"),
      @("GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES"),
      @("GCC_WARN_UNDECLARED_SELECTOR = YES"),
      @("GCC_WARN_UNINITIALIZED_AUTOS = YES"),
      @("GCC_WARN_UNKNOWN_PRAGMAS = YES"),
      @("GCC_WARN_UNUSED_FUNCTION = YES"),
      @("GCC_WARN_UNUSED_LABEL = YES"),
      @("GCC_WARN_UNUSED_VALUE = YES"),
      @("GCC_WARN_UNUSED_VARIABLE = YES"),
      @(headerSearchPaths),
      @("SDKROOT = " + SDK),
      @("COPY_PHASE_STRIP = NO")
    ]
    if SDK == "macosx10.6" then
      xcodeSettingList += !"CLANG_ENABLE_OBJC_ARC = NO"
      xcodeSettingList += !"GCC_ENABLE_OBJC_GC = required"
    else
      xcodeSettingList += !"CLANG_ENABLE_OBJC_ARC = YES"
    end
    if MACOSX_DEPLOYMENT_TARGET != "" then
      xcodeSettingList += !"MACOSX_DEPLOYMENT_TARGET = \"" + MACOSX_DEPLOYMENT_TARGET + "\""
    end
    [!?xcodeProject addSettingsToDefaultConfiguration !settingList:xcodeSettingList]
  //--- Add "Hand coded sources (App)" group
    var @stringlist m_HandCodedSourceFileRefForAppList = @()
    var @stringlist m_HandCodedResourceFileRefForAppList = @()
    if [inHandCodedSourceAppFileList count] > 0 then
      [!?xcodeProject addGroupWithFiles
        !groupName:"Hand Coded Sources (App)"
        !groupPath:"../"
        !fileNames:@stringset.setWithStringList {!inHandCodedSourceAppFileList}
        !?cFileRefs: %from @()
        !?cppFileRefs: %from @()
        !?mFileRefs:m_HandCodedSourceFileRefForAppList
        !?mmFileRefs: %from @()
        !?frameworkFileRefs: %from @()
        !?resourceFileRefs:m_HandCodedResourceFileRefForAppList
        ?groupRef:let @string groupRef
      ]
      [!?xcodeProject placeGroupAsMainGroup !groupRef:groupRef]
    end
  //--- Add "Frameworks for App" group
    var @stringlist appFrameworksFileRefList = @()
    if [inHandCodedLinkAppFileList count] > 0 then
      [!?xcodeProject addGroupWithFiles
        !groupName: "Frameworks (App)"
        !groupPath: "/System/Library/Frameworks"
        !fileNames: .setWithStringList {!inHandCodedLinkAppFileList}
        !?cFileRefs: %from @()
        !?cppFileRefs: %from @()
        !?mFileRefs: %from @()
        !?mmFileRefs: %from @()
        !?frameworkFileRefs: appFrameworksFileRefList
        !?resourceFileRefs: %from @()
        ?groupRef: let @string frameworkGroupRef
      ]
      [!?xcodeProject placeGroupAsMainGroup !groupRef:frameworkGroupRef]
    end
  //--- Mach O target
    var @stringlist buildCFileRefListForTool = @()
    var @stringlist buildCppFileRefListForTool = @()
    var @stringlist m_FileRefList = @()
    var @stringlist mm_FileRefList = @()
    var @stringlist frameworksFileRefList = @()
    var @stringlist resourceFileBuildRefs = @()
  //--- Add "Hand coded sources (Tool)" group
    if [inHandCodedSourceToolFileList count] > 0 then
      [!?xcodeProject addGroupWithFiles
        !groupName:"Hand Coded Sources (Tool)"
        !groupPath:"../"
        !fileNames:@stringset.setWithStringList {!inHandCodedSourceToolFileList}
        !?cFileRefs:buildCFileRefListForTool
        !?cppFileRefs:buildCppFileRefListForTool
        !?mFileRefs:m_FileRefList
        !?mmFileRefs:mm_FileRefList
        !?frameworkFileRefs:frameworksFileRefList
        !?resourceFileRefs:resourceFileBuildRefs
        ?groupRef:let @string groupRef
      ]
      [!?xcodeProject placeGroupAsMainGroup !groupRef:groupRef]
    end
  //--- Add "Frameworks for tool" group
    var @stringlist toolFrameworksFileRefList = @()
    if [inFrameworkToolFileList count] > 0 then
      [!?xcodeProject addGroupWithFiles
        !groupName:"Frameworks (Tool)"
        !groupPath:"/System/Library/Frameworks"
        !fileNames:@stringset.setWithStringList {!inFrameworkToolFileList}
        !?cFileRefs: %from @()
        !?cppFileRefs: %from @()
        !?mFileRefs: %from @()
        !?mmFileRefs: %from @()
        !?frameworkFileRefs:toolFrameworksFileRefList
        !?resourceFileRefs: %from @()
        ?groupRef:let @string frameworkGroupRef
      ]
      [!?xcodeProject placeGroupAsMainGroup !groupRef:frameworkGroupRef]
    end
  //--- Add "Generated by GALGAS" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Generated by GALGAS"
      !groupPath:"../" + inBuildDirectoryName + "/output"
      !fileNames:@stringset.setWithStringList {!inToolCppFileList + inToolHeaderFileList + inAppProductFileList}
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:var @string groupRef
    ]
    [!?xcodeProject placeGroupAsMainGroup !groupRef:groupRef]
    var @stringlist libpmReferenceGroupList = @()
  //--- Add "BDD" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Binary Decision Diagrams"
      !groupPath:"bdd"
      !fileNames: @[
        "BinaryDecisionDiagramRelationConfiguration.cpp",
        "BinaryDecisionDiagramRelationConfiguration.h",
        "BinaryDecisionDiagramRelation.cpp",
        "BinaryDecisionDiagramRelation.h",
        "BinaryDecisionDiagramRelationSingleType.cpp",
        "BinaryDecisionDiagramRelationSingleType.h",
        "BinaryDecisionDiagram-node.h",
        "BinaryDecisionDiagram.cpp",
        "BinaryDecisionDiagram.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Big Integers" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Big Integers"
      !groupPath:"big-integers"
      !fileNames: @[
        "BigSigned-add.cpp",
        "BigSigned-bit.cpp",
        "BigSigned-chunk-operations.cpp",
        "BigSigned-constructors.cpp",
        "BigSigned-conversions.cpp",
        "BigSigned-divide.cpp",
        "BigSigned-logic-operations.cpp",
        "BigSigned-multiply.cpp",
        "BigSigned-print.cpp",
        "BigSigned-shifts.cpp",
        "BigSigned-subtract.cpp",
        "BigSigned-utilities.cpp",
        "BigSigned.cpp",
        "BigSigned.h",
        "BigUnsigned-add.cpp",
        "BigUnsigned-bit.cpp",
        "BigUnsigned-chunk-operations.cpp",
        "BigUnsigned-constructors.cpp",
        "BigUnsigned-conversions.cpp",
        "BigUnsigned-divide-naive.cpp",
        "BigUnsigned-divide.cpp",
        "BigUnsigned-logic-operations.cpp",
        "BigUnsigned-multiply.cpp",
        "BigUnsigned-print.cpp",
        "BigUnsigned-shifts.cpp",
        "BigUnsigned-subtract.cpp",
        "BigUnsigned-utilities.cpp",
        "BigUnsigned.h",
        "ChunkSelectSize.h",
        "ChunkSharedArray.cpp",
        "ChunkSharedArray.h",
        "UInt128.cpp",
        "UInt128.h",
        "chunk-U16.h",
        "chunk-U32.h",
        "chunk-U64.h",
        "chunk-U8.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Cocoa Utilities" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Cocoa Utilities"
      !groupPath:"cocoa_utilities"
      !fileNames: @[
        "main.m",
        "PMCancelButtonForPanel.h",
        "PMCancelButtonForPanel.m",
        "PMOkButtonForPanel.h",
        "PMOkButtonForPanel.m"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Cocoa GALGAS" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Cocoa Objc GALGAS"
      !groupPath:"cocoa_objc_galgas"
      !fileNames: @[
        "Base.lproj/OC_GGS_Document.xib",
        "Base.lproj/PMDebug.xib",
        "Base.lproj/MainMenu.xib",
        "enterDefaultCommandLineOptions.h",
        "enterDefaultCommandLineOptions.m",
        "F_CocoaWrapperForGalgas.h",
        "I_Stop.tiff",
        "NSString+identifierRepresentation.h",
        "NSString+identifierRepresentation.m",
        "OC_GGS_ApplicationDelegate.h",
        "OC_GGS_ApplicationDelegate.m",
        "OC_GGS_BuildTask.h",
        "OC_GGS_BuildTask.m",
        "OC_GGS_ColorTransformer.h",
        "OC_GGS_ColorTransformer.m",
        "OC_GGS_CommandLineOption.h",
        "OC_GGS_CommandLineOption.m",
        "OC_GGS_Document.h",
        "OC_GGS_Document.m",
        "OC_GGS_DocumentData.h",
        "OC_GGS_DocumentData.m",
        "OC_GGS_RulerViewForBuildOutput.h",
        "OC_GGS_RulerViewForBuildOutput.m",
        "OC_GGS_RulerViewForTextView.h",
        "OC_GGS_RulerViewForTextView.m",
        "OC_GGS_Scroller.h",
        "OC_GGS_Scroller.m",
        "OC_GGS_TextDisplayDescriptor.h",
        "OC_GGS_TextDisplayDescriptor.m",
        "OC_GGS_TextSyntaxColoring.h",
        "OC_GGS_TextSyntaxColoring.m",
        "OC_GGS_TextView.h",
        "OC_GGS_TextView.m",
        "OC_Lexique.h",
        "OC_Lexique.m",
        "OC_Token.h",
        "OC_Token.m",
        "PMDebug.h",
        "PMDebug.m",
        "PMFontButton.h",
        "PMFontButton.m",
        "PMIssueDescriptor.h",
        "PMIssueDescriptor.m",
        "PMIssueInRuler.h",
        "PMIssueInRuler.m",
        "PMSearchResultDescriptor.h",
        "PMSearchResultDescriptor.m",
        "PMTableViewHandlesContextualMenu.h",
        "PMTableViewHandlesContextualMenu.m",
        "PMUndoManager.h",
        "PMUndoManager.m"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "collection" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Generic Arraies"
      !groupPath:"generic-arraies"
      !fileNames: @[
        "TC_Array.h",
        "TC_UniqueArray.h",
        "TC_UniqueArray2.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Command line Interface" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Command line Interface"
      !groupPath:"command_line_interface"
      !fileNames: @[
        "F_mainForLIBPM.cpp",
        "F_mainForLIBPM.h",
        "builtin-command-line-options.cpp",
        "builtin-command-line-options.h",
        "analyzeCommandLineOptions.cpp",
        "analyzeCommandLineOptions.h",
        "AbstractCommandLineOption.cpp",
        "AbstractCommandLineOption.h",
        "BoolCommandLineOption.cpp",
        "BoolCommandLineOption.h",
        "UIntCommandLineOption.cpp",
        "UIntCommandLineOption.h",
        "StringCommandLineOption.cpp",
        "StringCommandLineOption.h",
        "StringListCommandLineOption.cpp",
        "StringListCommandLineOption.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "File" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"File"
      !groupPath:"files"
      !fileNames: @[
        "FileManager.cpp",
        "FileManager.h",
        "AbstractFileHandle.cpp",
        "AbstractFileHandle.h",
        "BinaryFileWrite.cpp",
        "BinaryFileWrite.h",
        "TextFileWrite.cpp",
        "TextFileWrite.h",
        "HTMLFileWrite.cpp",
        "HTMLFileWrite.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Galgas 2" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Galgas"
      !groupPath:"galgas"
      !fileNames: @[
        "AC_GALGAS_reference_class.cpp",
        "AC_GALGAS_reference_class.h",
        "AC_GALGAS_value_class.cpp",
        "AC_GALGAS_value_class.h",
        "AC_GALGAS_enumAssociatedValues.cpp",
        "AC_GALGAS_enumAssociatedValues.h",
        "AC_GALGAS_graph.cpp",
        "AC_GALGAS_graph.h",
        "AC_GALGAS_list.cpp",
        "AC_GALGAS_list.h",
        "AC_GALGAS_map.cpp",
        "AC_GALGAS_map.h",
        "AC_GALGAS_root.cpp",
        "AC_GALGAS_root.h",
        "AC_GALGAS_sortedlist.cpp",
        "AC_GALGAS_sortedlist.h",
        "AC_GALGAS_weak_reference.cpp",
        "AC_GALGAS_weak_reference.h",
        "acPtr_class.cpp",
        "acPtr_class.h",
        "acStrongPtr_class.cpp",
        "acStrongPtr_class.h",
        "cPtr_weakReference_proxy.cpp",
        "cPtr_weakReference_proxy.h",
        "Compiler.cpp",
        "Compiler.h",
        "C_galgas_class_inspector.cpp",
        "C_galgas_class_inspector.h",
        "C_galgas_CLI_Options.cpp",
        "C_galgas_CLI_Options.h",
        if inQuietOutputByDefault then "C_galgas_verbose_option.cpp" else "C_galgas_quiet_option.cpp" end,
        if inQuietOutputByDefault then "C_galgas_verbose_option.h" else "C_galgas_quiet_option.h" end,
        "F_verbose_output.h",
        "C_galgas_function_descriptor.cpp",
        "C_galgas_function_descriptor.h",
        "galgas-input-output.cpp",
        "galgas-input-output.h",
        "C_galgas_type_descriptor.cpp",
        "C_galgas_type_descriptor.h",
        "IssueWithFixIt.cpp",
        "IssueWithFixIt.h",
        "Lexique-parsing.cpp",
        "Lexique.cpp",
        "Lexique.h",
        "LocationInSource.cpp",
        "LocationInSource.h",
        "SourceTextInString.cpp",
        "SourceTextInString.h",
        "capCollectionElement.cpp",
        "capCollectionElement.h",
        "capCollectionElementArray.cpp",
        "capCollectionElementArray.h",
        "capSortedListElement.cpp",
        "capSortedListElement.h",
        "cCollectionElement.cpp",
        "cCollectionElement.h",
        "cEnumerator_range.cpp",
        "cEnumerator_range.h",
        "cGenericAbstractEnumerator.cpp",
        "cGenericAbstractEnumerator.h",
        "cIndexingDictionary.cpp",
        "cIndexingDictionary.h",
        "cIssueDescriptor.cpp",
        "cIssueDescriptor.h",
        "cLexiqueIntrospection.cpp",
        "cLexiqueIntrospection.h",
        "cObjectArray.cpp",
        "cObjectArray.h",
        "cProductionNameDescriptor.h",
        "cPtr_object.cpp",
        "cPtr_object.h",
        "cSortedListElement.cpp",
        "cSortedListElement.h",
        "TemplateDelimiter.h",
        "GALGAS_application.cpp",
        "GALGAS_binaryset.cpp",
        "GALGAS_bigint.cpp",
        "GALGAS_bool.cpp",
        "GALGAS_char.cpp",
        "GALGAS_data.cpp",
        "GALGAS_double.cpp",
        "GALGAS_filewrapper.cpp",
        "GALGAS_function.cpp",
        "GALGAS_location.cpp",
        "GALGAS_object.cpp",
        "GALGAS_sint_36__34_.cpp",
        "GALGAS_sint.cpp",
        "GALGAS_string.cpp",
        "GALGAS_string-getters.cpp",
        "GALGAS_stringset.cpp",
        "GALGAS_timer.cpp",
        "GALGAS_type.cpp",
        "GALGAS_uint_36__34_.cpp",
        "GALGAS_uint.cpp",
        "scanner_actions.cpp",
        "scanner_actions.h",
        "ComparisonResult.h",
        "ComparisonKind.h",
        "EnumerationOrder.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Streams" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Streams"
      !groupPath:"streams"
      !fileNames: @[
        "AbstractOutputStream.cpp",
        "AbstractOutputStream.h",
        "ConsoleOut.cpp",
        "ConsoleOut.h",
        "ColoredConsole.cpp",
        "ColoredConsole.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "String" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Strings"
      !groupPath:"strings"
      !fileNames: @[
        "String-class-getters.cpp",
        "String-class.cpp",
        "String-class.h",
        "cUnicodeData.h",
        "string_encodings.h",
        "unicode_character_base.h",
        "unicode_character_cpp.cpp",
        "unicode_character_cpp.h",
        "unicode_character_implementation.h",
        "unicode_character_m.h",
        "unicode_character_m.m",
        "print.cpp",
        "print.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Time" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Time"
      !groupPath:"time"
      !fileNames: @[
        "DateTime.cpp",
        "DateTime.h",
        "Timer.cpp",
        "Timer.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "Utilities" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Utilities"
      !groupPath:"utilities"
      !fileNames: @[
        "basic-allocation.cpp",
        "basic-allocation.h",
        "U8Data.cpp",
        "U8Data.h",
        "DirectedGraph.cpp",
        "DirectedGraph.h",
        "PrologueEpilogue.cpp",
        "PrologueEpilogue.h",
        "SharedObject.cpp",
        "SharedObject.h",
        "UInt32Set.cpp",
        "UInt32Set.h",
        "cpp-allocation.cpp",
        "cpp-allocation.h",
        "F_DisplayException.cpp",
        "F_DisplayException.h",
        "F_GetPrime.cpp",
        "F_GetPrime.h",
        "M_machine.h",
        "M_SourceLocation.h",
        "md5.cpp",
        "md5.h",
        "SHA256.cpp",
        "SHA256.h",
        "macroAssert.cpp",
        "macroAssert.h",
        "MF_MemoryControl.cpp",
        "MF_MemoryControl.h",
        "switch-fallthrough.h",
        "TF_Swap.h",
        "galgas-random.cpp",
        "galgas-random.h"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:groupRef
    ]
    libpmReferenceGroupList += !groupRef
  //--- Add "LIBPM" group
    [!?xcodeProject addGroup !groupName:"libpm" !groupPath:"../" + inBuildDirectoryName + "/libpm" !childrenRefs:libpmReferenceGroupList ?groupRef:let @string libpmGroupRef]
    [!?xcodeProject placeGroupAsMainGroup !groupRef:libpmGroupRef]
  //--- Add "Resources" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Resources"
      !groupPath:"."
      !fileNames: @["Info.plist"]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:let @string resourcesGroupRef
    ]
    [!?xcodeProject placeGroupAsMainGroup !groupRef:resourcesGroupRef]
  //--- Add "User Resources" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"User Resources"
      !groupPath:"userResources"
      !fileNames:@stringset. setWithStringList {!resourceFiles}
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:let @string userResourcesGroupRef
    ]
    [!?xcodeProject placeGroupAsMainGroup !groupRef:userResourcesGroupRef]
  //--- Add "Frameworks for App" group
    [!?xcodeProject addGroupWithFiles
      !groupName:"Frameworks for App"
      !groupPath:"/System/Library/Frameworks"
      !fileNames: @[
        "AppKit.framework",
        "Cocoa.framework"
      ]
      !?cFileRefs:buildCFileRefListForTool
      !?cppFileRefs:buildCppFileRefListForTool
      !?mFileRefs:m_FileRefList
      !?mmFileRefs:mm_FileRefList
      !?frameworkFileRefs:frameworksFileRefList
      !?resourceFileRefs:resourceFileBuildRefs
      ?groupRef:let @string frameworkGroupRef
    ]
    [!?xcodeProject placeGroupAsMainGroup !groupRef:frameworkGroupRef]
  //--- Code signing identity
    let @stringlist codeSigningSettingList
    if macCodeSign.string == "" then
      codeSigningSettingList = @[@("CODE_SIGN_IDENTITY = \"-\"")]
    else
      let components = [macCodeSign.string componentsSeparatedByString !":"]
      if [components count] != 2 then
        error macCodeSign : "the %macCodeSign attribute associated string should be \"key:value\"" : codeSigningSettingList
      elsif [components mValueAtIndex !0] == "MacDeveloper" then
        codeSigningSettingList = @[
          @("CODE_SIGN_IDENTITY = \"Mac Developer\""),
          @("DEVELOPMENT_TEAM = \"" + [components mValueAtIndex !1] + "\"")
        ]
      elsif [components mValueAtIndex !0] == "Certificate" then
        codeSigningSettingList = @[@("CODE_SIGN_IDENTITY = \"" + [components mValueAtIndex !1] + "\"")]
      else
        error macCodeSign : "the %macCodeSign attribute string is \"key:value\", but key should be 'MacDeveloper' or 'Certificate'" : codeSigningSettingList
      end
    end
  //--- Add Mach O release target
    var @stringlist settingList = @[
      @("GCC_OPTIMIZATION_LEVEL = 2"),
      @("GCC_PREPROCESSOR_DEFINITIONS = (DO_NOT_GENERATE_CHECKINGS)"),
      @("GCC_WARN_UNUSED_PARAMETER = YES"),
      @("PRODUCT_BUNDLE_IDENTIFIER = \"" + applicationBundleBase + "." + inTargetName + ".tool\"")
    ] + codeSigningSettingList
    if [inHandCodedLinkToolFileList count] > 0 then
      var s = "OTHER_LDFLAGS=("
      for (toolLink) in inHandCodedLinkToolFileList
        do s += "\"" + toolLink + "\""
        between s += ","
      end
      s += ")"
      settingList += !s
    end
    [!?xcodeProject addToolTarget
      !targetName:inTargetName + " tool"
      !productFileName:inTargetName
      !sources:buildCFileRefListForTool + buildCppFileRefListForTool + mm_FileRefList
      !frameworkRefs:toolFrameworksFileRefList
      !buildConfigurationSettingList: settingList
      ?targetRef:let releaseTargetRef
      ?productFileRef:let releaseProductFileRef
    ]
  //--- Add Mach O debug target
    settingList = @[
      @("GCC_OPTIMIZATION_LEVEL = 0"),
      @("GCC_GENERATE_DEBUGGING_SYMBOLS = YES"),
      @("GCC_PREPROCESSOR_DEFINITIONS = @()"),
      @("GCC_WARN_UNUSED_PARAMETER = YES"),
      @("PRODUCT_BUNDLE_IDENTIFIER = \"" + applicationBundleBase + "." + inTargetName + ".tooldebug\"")
    ] + codeSigningSettingList
    if [inHandCodedLinkToolFileList count] > 0 then
      var s = "OTHER_LDFLAGS=("
      for (toolLink) in inHandCodedLinkToolFileList
        do s += "\"" + toolLink + "\""
        between s += ","
      end
      s += ")"
      settingList += !s
    end
    [!?xcodeProject addToolTarget
      !targetName:inTargetName + " tool debug"
      !productFileName:inTargetName+"-debug"
      !sources:buildCFileRefListForTool + buildCppFileRefListForTool + mm_FileRefList
      !frameworkRefs:toolFrameworksFileRefList
      !buildConfigurationSettingList: settingList
      ?targetRef:let debugTargetRef
      ?productFileRef:let debugProductFileRef
    ]
  //--- Add Cocoa target
    let @stringlist cocoaConfigurationSettingList = @[
      @("GCC_OPTIMIZATION_LEVEL = 0"),
      @(!"GCC_PREPROCESSOR_DEFINITIONS = @()")
    ] + codeSigningSettingList
    [!?xcodeProject addAppTarget
      !targetName:"Cocoa " + inTargetName
      !productFileName:"Cocoa" + [inTargetName stringByCapitalizingFirstCharacter]
      !sources:m_FileRefList + m_HandCodedSourceFileRefForAppList
      !frameworkFileRefs:frameworksFileRefList + appFrameworksFileRefList
      !resourceFileRefs:resourceFileBuildRefs + m_HandCodedResourceFileRefForAppList
      !buildConfigurationSettingList: cocoaConfigurationSettingList
      !dependantTargetList: @[@(releaseTargetRef), @(debugTargetRef)]
      !productCopyList: @[@(releaseProductFileRef, inTargetName), @(debugProductFileRef, inTargetName + "-debug")]
      ?productFileRef:*
    ]
  //--- Generate project
    [xcodeProject generateAtPath
      !xcodeprojPath:dir + "/" + inTargetName + ".xcodeproj"
      !cacheFilePath:newIntermediateFilePath
    ]
  end
}

//------------------------------------------------------------------------------------------------
