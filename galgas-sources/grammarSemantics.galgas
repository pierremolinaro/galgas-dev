#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  Grammar Semantics                        
#                                           
#  Copyright (C) 2009, ..., 2011 Pierre Molinaro.
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public
#  License as published by the Free Software Foundation.
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————



#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#         Instruction abstract class for grammar component                                                     
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @abstractSyntaxInstructionForGrammarAnalysis %generatedInSeparateFile {
  public let @location mStartLocation
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#        Syntax signature                   
#      (sequence of terminal, nonterminal, select and repeat)                                                  
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @syntaxInstructionListForGrammarAnalysis {
  public let @abstractSyntaxInstructionForGrammarAnalysis mInstruction
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#   Production rules list (for a grammar component)     
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @productionRuleListForGrammarAnalysis {
  public let @lstring mLeftNonterminalSymbol
  public let @uint mLeftNonterminalSymbolIndex
  public let @syntaxInstructionListForGrammarAnalysis mInstructionList
  public let @uint mProductionIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @unusedNonTerminalSymbolMapForGrammarAnalysis {
  public let @uint mNonTerminalIndex
  %insertSetter insertKey %errorMessage "the '<%K>' non terminal symbol has already been declared as unused in %L"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#             nonterminal symbols sorted list    
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

sortedlist @nonTerminalSymbolSortedListForGrammarAnalysis {
  public let @lstring mNonTerminalSymbol
  public let @uint mNonTerminalIndex
  public let @nonterminalSymbolLabelMapForGrammarAnalysis mNonterminalSymbolParametersMap
}{
  mNonTerminalIndex <
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#   Terminal call instruction               
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @terminalInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @lstring mTerminalSymbolName
  public let @uint mTerminalSymbolIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#   Nonterminal call instruction            
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @nonTerminalInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @lstring mNonterminalSymbolName
  public let @uint mNonterminalSymbolIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
# Liste of branches of a 'select' or 'repeat' instruction                                                      
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @branchListForGrammarAnalysis {
  public let @syntaxInstructionListForGrammarAnalysis mSyntaxInstructionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#   select instruction (for a grammar component) 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @selectInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @branchListForGrammarAnalysis mSelectBranchList
  public let @uint mAddedNonTerminalSymbolIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#   repeat instruction                      
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @repeatInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @branchListForGrammarAnalysis mRepeatBranchList
  public let @uint mAddedNonTerminalSymbolIndex
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#    List of syntax components For Grammar  
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @syntaxComponentListForGrammarAnalysis {
  public let @productionRuleListForGrammarAnalysis mProductionRulesList
  public let @lstring mSyntaxComponentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#      Terminal symbol map                  
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @terminalSymbolsMapForGrammarAnalysis {
  public let @uint mTerminalIndex
  %insertSetter insertKey %errorMessage "the terminal symbol '$%K$' is already declared in %L"
  %searchMethod searchKey %errorMessage "the terminal symbol '$%K$' is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

