//--------------------------------------------------------------------------------------------------
//
//  Grammar Semantics
//
//  Copyright (C) 2009, ..., 2011 Pierre Molinaro.
//
//  MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software
// and associated documentation files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//--------------------------------------------------------------------------------------------------



//--------------------------------------------------------------------------------------------------
//
//         Instruction abstract class for grammar component
//
//--------------------------------------------------------------------------------------------------

abstract class @abstractSyntaxInstructionForGrammarAnalysis %generatedInSeparateFile {
  public let @location mStartLocation
}

//--------------------------------------------------------------------------------------------------
//
//        Syntax signature
//      (sequence of terminal, nonterminal, select and repeat)
//
//--------------------------------------------------------------------------------------------------

list @syntaxInstructionListForGrammarAnalysis {
  public let @abstractSyntaxInstructionForGrammarAnalysis mInstruction
}

//--------------------------------------------------------------------------------------------------
//
//   Production rules list (for a grammar component)
//
//--------------------------------------------------------------------------------------------------

list @productionRuleListForGrammarAnalysis {
  public let @lstring mLeftNonterminalSymbol
  public let @uint mLeftNonterminalSymbolIndex
  public let @syntaxInstructionListForGrammarAnalysis mInstructionList
  public let @uint mProductionIndex
}

//--------------------------------------------------------------------------------------------------

map @unusedNonTerminalSymbolMapForGrammarAnalysis {
  public let @uint mNonTerminalIndex
  insert insertKey error message "the '<%K>' non terminal symbol has already been declared as unused in %L"
  replace replaceKey error message "the '<%K>' non terminal symbol has already been declared as unused in %L"
}

//--------------------------------------------------------------------------------------------------
//
//             nonterminal symbols sorted list
//
//--------------------------------------------------------------------------------------------------

sortedlist @nonTerminalSymbolSortedListForGrammarAnalysis {
  public let @lstring mNonTerminalSymbol
  public let @uint mNonTerminalIndex
  public let @nonterminalSymbolLabelMapForGrammarAnalysis mNonterminalSymbolParametersMap
}{
  mNonTerminalIndex <
}

//--------------------------------------------------------------------------------------------------
//
//   Nonterminal call instruction
//
//--------------------------------------------------------------------------------------------------

class @nonTerminalInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @lstring mNonterminalSymbolName
  public let @uint mNonterminalSymbolIndex
}

//--------------------------------------------------------------------------------------------------
//
// Liste of branches of a 'select' or 'repeat' instruction
//
//--------------------------------------------------------------------------------------------------

list @branchListForGrammarAnalysis {
  public let @syntaxInstructionListForGrammarAnalysis mSyntaxInstructionList
}

//--------------------------------------------------------------------------------------------------
//
//   select instruction (for a grammar component)
//
//--------------------------------------------------------------------------------------------------

class @selectInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @branchListForGrammarAnalysis mSelectBranchList
  public let @uint mAddedNonTerminalSymbolIndex
}

//--------------------------------------------------------------------------------------------------
//
//   repeat instruction
//
//--------------------------------------------------------------------------------------------------

class @repeatInstructionForGrammarAnalysis : @abstractSyntaxInstructionForGrammarAnalysis {
  public let @branchListForGrammarAnalysis mRepeatBranchList
  public let @uint mAddedNonTerminalSymbolIndex
}

//--------------------------------------------------------------------------------------------------
//
//    List of syntax components For Grammar
//
//--------------------------------------------------------------------------------------------------

list @syntaxComponentListForGrammarAnalysis {
  public let @productionRuleListForGrammarAnalysis mProductionRulesList
  public let @lstring mSyntaxComponentName
}

//--------------------------------------------------------------------------------------------------
//
//      Terminal symbol map
//
//--------------------------------------------------------------------------------------------------

map @terminalSymbolsMapForGrammarAnalysis {
  public let @uint mTerminalIndex
  insert insertKey error message "the terminal symbol '$%K$' is already declared in %L"
  search searchKey error message "the terminal symbol '$%K$' is not declared"
}

//--------------------------------------------------------------------------------------------------

