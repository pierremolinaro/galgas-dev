#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  Copyright (C) 2007, ..., 2019 Pierre Molinaro.
#
#  MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software
# and associated documentation files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#           I N S T R U C T I O N    G E N E R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

proc generateInstructionList
  ?!@stringset ioInclusionSet
  ?let @semanticInstructionListForGeneration inInstructionList
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  ?let @bool inGenerateSyntaxDirectedTranslationString
  ?!@string ioGeneratedCode
{
  [!?ioGeneratedCode incIndentation !2]
  for element in inInstructionList do
    [element.mInstruction generateInstruction
      !?ioInclusionSet
      !?ioTemporaryVariableIndex
      !?ioUnusedVariableCppNameSet
      !inGenerateSyntaxDirectedTranslationString
      !?ioGeneratedCode
    ]
  end
  [!?ioGeneratedCode decIndentation !2]
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @templateInstructionForGeneration {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @templateInstructionListForGeneration {
  public let @templateInstructionForGeneration mInstruction
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticExpressionForGeneration {
  public let @unifiedTypeMapEntry mResultType
  public let @location mLocation
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract method @semanticExpressionForGeneration generateExpression
  ?!@string ioGeneratedCode
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  !@string outCppExpression

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @semanticExpressionListForGeneration {
  public let @semanticExpressionForGeneration mExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @castInExpressionForGeneration : @semanticExpressionForGeneration {
  public let @semanticExpressionForGeneration mReceiverExpression
  public let @string mTypeName
  public let @unifiedTypeMapEntry mCastType
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  F O R M A L    P A R A M E T E R    L I S T
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

list @formalParameterListForGeneration {
  public let @lstring mFormalSelector
  public let @formalArgumentPassingModeAST mFormalArgumentPassingMode
  public let @unifiedTypeMapEntry mFormalArgumentType
  public let @lstring mFormalArgumentName
  public let @string mFormalArgumentCppName
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  F O R M A L    I N P U T    P A R A M E T E R    L I S T
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

list @formalInputParameterListForGeneration {
  public let @lstring mFormalSelector
  public let @unifiedTypeMapEntry mFormalArgumentType
  public let @string mFormalArgumentCppName
  public let @lstring mFormalArgumentName
  public let @bool mIsConstant
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  A C T U A L    P A R A M E T E R
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @actualParameterForGeneration {
  public let @unifiedTypeMapEntry mFormalArgumentType
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract method @actualParameterForGeneration generateActualParameter
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@string ioImplementation
  ?!@stringlist ioJokerParametersToReleaseList
  ?!@stringlist ioOutputVariableList
  ?!@stringset unused ioUnusedVariableCppNameSet
  !@string outCppName

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract method @actualParameterForGeneration generatePoisonedVariables
  ?!@string ioImplementation
  ?!@stringset ioUnusedVariableCppNameSet

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @outputActualParameterForGeneration : @actualParameterForGeneration {
  public let @semanticExpressionForGeneration mOutputActualParameterExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @outputInputActualParameterForGeneration : @actualParameterForGeneration {
  public let @string mOutputInputVariableCppName
  public let @lstringlist mStructAttributeList
  public let @unifiedTypeMapEntryList mTypeList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @inputActualParameterForGeneration : @actualParameterForGeneration {
  public let @string mInputActualCppName
  public let @2stringlist mPoisonedVarNameList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @inputJokerParameterForGeneration : @actualParameterForGeneration {
  public let @string mInputActualCppName
  public let @2stringlist mPoisonedVarNameList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @actualParameterListForGeneration {
  public let @actualParameterForGeneration mActualParameter
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticInstructionForGeneration {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract method @semanticInstructionForGeneration generateInstruction
  ?!@stringset ioInclusionSet
  ?!@uint ioTemporaryVariableIndex
  ?!@stringset ioUnusedVariableCppNameSet
  ?let @bool inGenerateSyntaxDirectedTranslationString
  ?!@string ioGeneratedCode

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @semanticInstructionListForGeneration {
  public let @semanticInstructionForGeneration mInstruction
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @semanticBlockInstructionForGeneration : @semanticInstructionForGeneration {
  public let @semanticInstructionListForGeneration mInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @listOfSemanticInstructionListForGeneration {
  public let @semanticInstructionListForGeneration mInstructionList
  public let @location mEndOfInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticDeclarationForGeneration {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

getter @semanticDeclarationForGeneration appendPrimitiveTypeDeclaration -> @string {
  result = ""
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

method @semanticDeclarationForGeneration appendPrimitiveTypePreDeclaration ?!@string unused ioHeader {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract getter @semanticDeclarationForGeneration getImplementationCppFileName -> @string

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract getter @semanticDeclarationForGeneration hasCppHeaderFile -> @bool

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract getter @semanticDeclarationForGeneration isPredefined -> @bool

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract getter @semanticDeclarationForGeneration headerKind -> @headerKind

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @semanticDeclarationListForGeneration {
  public let @string infoMessage %initArgLabel
  public let @semanticDeclarationForGeneration mDeclaration
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    T Y P E    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticTypeForGeneration : @semanticDeclarationForGeneration {
  public let @unifiedTypeMapEntry mSelfTypeEntry
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticTypeForGeneration getImplementationCppFileName -> @string {
  result = [self.mSelfTypeEntry definition].headerFileName
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticTypeForGeneration hasCppHeaderFile -> @bool {
  result = true
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticTypeForGeneration isPredefined -> @bool {
  result = [self.mSelfTypeEntry definition].isPredefined
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticTypeForGeneration headerKind -> @headerKind {
  result = [self.mSelfTypeEntry definition].headerKind
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    D E C L A R A T I O N    W I T H   H E A D E R    S P E C
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticDeclarationWithHeaderForGeneration : @semanticDeclarationForGeneration {
  public let @bool generateHeader %initArgLabel
  public let @string implementationCppFileName %initArgLabel
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticDeclarationWithHeaderForGeneration getImplementationCppFileName -> @string {
  result = self.implementationCppFileName
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticDeclarationWithHeaderForGeneration hasCppHeaderFile -> @bool {
  result = self.generateHeader
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticDeclarationWithHeaderForGeneration headerKind -> @headerKind {
  result = @headerKind.twoHeaders
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

override getter @semanticDeclarationWithHeaderForGeneration isPredefined -> @bool {
  result = false
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    L E X I Q U E    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexiqueDeclarationForGeneration : @semanticDeclarationWithHeaderForGeneration {
  public let @string mLexiqueName
  public let @string mSuperLexiqueName
  public let @string mHeaderContents
  public let @string mCppContents
  public let @string mObjcCocoaHeader
  public let @string mObjcCocoaImplementation
  public let @string mSwiftCocoaImplementation
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#   A C T I O N ,    M E T H O D    S I G N A T U R E
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

list @signatureForGrammarAnalysis {
  public let @formalArgumentPassingModeAST mFormalArgumentPassingModeForGrammarAnalysis
  public let @lstring mGalgasTypeNameForGrammarAnalysis
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  N O N    T E R M I N A L    S Y M B O L    M A P
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

map @nonterminalSymbolLabelMapForGrammarAnalysis {
  public let @signatureForGrammarAnalysis mFormalParametersList

  insert insertKey error message "the rule label '%K' has been already declared in %L"
  search searchKey error message "the rule label '%K' is not declared"
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#             nonterminal symbols map
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

map @nonTerminalSymbolMapForGrammarAnalysis {
  public let @uint mNonTerminalIndex
  public let @nonterminalSymbolLabelMapForGrammarAnalysis mNonterminalSymbolParametersMap

  insert insertKey error message "the '<%K>' non terminal symbol has already been declared in %L"
  search searchKey error message "the '<%K>' non terminal symbol is not declared"
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @nonTerminalToAddList {
  public let @string mSyntaxComponentName
  public let @uint mNonTerminalToAddCount
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    F U N C T I O N    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @functionPrototypeDeclarationForGeneration : @semanticDeclarationWithHeaderForGeneration {
  public let @string mFunctionName
  public let @formalInputParameterListForGeneration mFormalArgumentList
  public let @unifiedTypeMapEntry mReturnType
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    F U N C T I O N    I M P L E M E N T A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @functionImplementationForGeneration : @functionPrototypeDeclarationForGeneration {
  public let @string mResultVariableCppName
  public let @semanticInstructionListForGeneration mFunctionInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    O N C E    F U N C T I O N    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @onceFunctionDeclarationForGeneration : @semanticDeclarationWithHeaderForGeneration {
  public let @string mFunctionName
  public let @unifiedTypeMapEntry mReturnType
  public let @string mResultVariableCppName
  public let @semanticInstructionListForGeneration mFunctionInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  T E R M I N A L    C H E C K    I N S T R U C T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

list @terminalCheckAssignementList {
  public let @string mTypeName # Empty string if no declaration
  public let @string mTargetVarCppName
  public let @string mSourceLexicalAttributeName
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @syntaxInstructionForGeneration : @semanticInstructionForGeneration {
  public let @location mInstructionLocation
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    F I L E W R A P P E R    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

list @filewrapperTemplateListForGeneration {
  public let @string mFilewrapperTemplateName
  public let @formalInputParameterListForGeneration mFilewrapperTemplateFormalInputParameters
  public let @templateInstructionListForGeneration mTemplateInstructionListForGeneration
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @filewrapperDeclarationForGeneration : @semanticDeclarationWithHeaderForGeneration {
  public let @string mFilewrapperName
  public let @string mFilewrapperAbsolutePath
  public let @wrapperFileMap mFilewrapperFileMap
  public let @wrapperDirectoryMap mFilewrapperDirectoryMap
  public let @filewrapperTemplateListForGeneration mFilewrapperTemplateListForGeneration
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#    P R O G R A M    D E C L A R A T I O N
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @programComponentForGeneration : @semanticDeclarationWithHeaderForGeneration {
  public let @stringset mInclusionSet
  public let @string mImplementationString
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
# A P P E N D    D E C L A R A T I O N    1
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

method @semanticDeclarationForGeneration appendDeclaration1
  ?!@stringset unused ioInclusionSet
  !@string outHeader
{
  outHeader = ""
}

#—————————————————————————————————————————————————————————————————————————————————————————————————
#
# A P P E N D    D E C L A R A T I O N    2
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

method @semanticDeclarationForGeneration appendDeclaration2
  ?let @string unused inOutputDirectory
  ?!@stringset unused ioInclusionSet
  !@string outHeader
{
  outHeader = ""
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

getter @semanticDeclarationForGeneration appendTypeGenericImplementation ->@string outImplementation {
  outImplementation = ""
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

method @semanticDeclarationForGeneration appendSpecificImplementation
  ?let @unifiedTypeMap unused inUnifiedTypeMap
  ?!@stringset unused  ioInclusionSet
  !@string outImplementation {
  outImplementation = ""
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

method @semanticDeclarationForGeneration appendSpecificFiles
  ?let @string unused inProductDirectory
  ?!@stringset unused ioAllProductFileSet
  ?!@stringlist unused ioCocoaProductFileList
{
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

