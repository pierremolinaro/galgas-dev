#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  Semantic decorated types for template generation
#
#  Copyright (C) 2010, ..., 2010 Pierre Molinaro.
#
#  MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software
# and associated documentation files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
# BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateInstructionStringForGeneration : @templateInstructionForGeneration {
  private let @string mTemplateString
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateInstructionExpressionForGeneration : @templateInstructionForGeneration {
  private let @semanticExpressionForGeneration mExpression
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateBlockInstructionForGeneration : @templateInstructionForGeneration {
  private let @semanticExpressionForGeneration mExpression
  private let @location mLocation
  private let @templateInstructionListForGeneration mBlockInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateInstructionGetColumnLocationForGeneration : @templateInstructionForGeneration {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateInstructionGotoColumnLocationForGeneration : @templateInstructionForGeneration {
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

list @templateInstructionIfBranchListForGeneration {
  public let @semanticExpressionForGeneration mExpression
  public let @templateInstructionListForGeneration mInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @templateInstructionIfForGeneration : @templateInstructionForGeneration {
  private let @templateInstructionIfBranchListForGeneration mTemplateInstructionIfBranchList
  private let @templateInstructionListForGeneration mElseInstructionList
}

#—————————————————————————————————————————————————————————————————————————————————————————————————

