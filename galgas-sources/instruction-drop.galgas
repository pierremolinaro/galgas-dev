#----------------------------------------------------------------------------------------------------------------------*
#! AST
#----------------------------------------------------------------------------------------------------------------------*

class @dropInstructionAST : @semanticInstructionAST {
  @lstringlist mDropList
}

#----------------------------------------------------------------------------------------------------------------------*
#! SYNTAX
#----------------------------------------------------------------------------------------------------------------------*

syntax extension galgas3InstructionsSyntax {

  #····················································································································*

  rule <semantic_instruction>
    !@semanticInstructionAST outInstruction {
    $drop$
    let instructionLocation = @location.here
    @lstringlist dropList = {}
    repeat
      $identifier$ ?let variableName
      dropList += !variableName
    while
      $,$
    end
    outInstruction = @dropInstructionAST.new {!instructionLocation !dropList}
  }

  #····················································································································*

}

#----------------------------------------------------------------------------------------------------------------------*
#! CONTEXT
#----------------------------------------------------------------------------------------------------------------------*

override method @dropInstructionAST enterInstructionInSemanticContext ?!@unifiedTypeMap unused ioTypeMap {
}

#----------------------------------------------------------------------------------------------------------------------*
#! SEMANTICS
#----------------------------------------------------------------------------------------------------------------------*

override method @dropInstructionAST analyzeSemanticInstruction
  ?let @lstring unused inUsefulnessCallerEntityName
  ?!@usefulEntitiesGraph unused ioUsefulEntitiesGraph
  ?let @analysisContext unused inAnalysisContext
  ?!@semanticInstructionListForGeneration unused ioInstructionListForGeneration
  ?!@variableMap ioVariableMap
{
  for () in mDropList do
    [!?ioVariableMap searchForDropAccess !mValue ?3*]
  end
}

#----------------------------------------------------------------------------------------------------------------------*
