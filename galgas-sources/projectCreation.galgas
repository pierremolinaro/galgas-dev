//--------------------------------------------------------------------------------------------------
//
//  Project Creation
//
//  Copyright (C) 2008, ..., 2015 Pierre Molinaro.
//
//  MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software
// and associated documentation files (the "Software"), to deal in the Software without
// restriction, including without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
// BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//
//--------------------------------------------------------------------------------------------------
//
//  F I L E W R A P P E R     T E M P L A T E S
//
//--------------------------------------------------------------------------------------------------

filewrapper projectCreationFileWrapper in "+generation-templates/project_creation" {
}{
}{
//--- Project
  template PROJECT_project "+PROJECT.galgasProject.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_cocoa "PROJECT-cocoa.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_grammar "PROJECT-grammar.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_lexique "PROJECT-lexique.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_options "PROJECT-options.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_program "PROJECT-program.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_semantics "PROJECT-semantics.galgas.galgasTemplate" ?@string PROJECT_NAME
  template PROJECT_syntax "PROJECT-syntax.galgas.galgasTemplate" ?@string PROJECT_NAME
}

//--------------------------------------------------------------------------------------------------

proc performProjectCreation ?let @string inProjectPath {
  let @string projectName = [inProjectPath lastPathComponent]
//--- galgas_sources
  let @string galgas_sources_DIR = inProjectPath + "/galgas-sources"
  [galgas_sources_DIR makeDirectory]
  [[filewrapper projectCreationFileWrapper.PROJECT_project !projectName] writeToFile !inProjectPath +"/+" +projectName +".galgasProject"]
  [[filewrapper projectCreationFileWrapper.PROJECT_cocoa !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-cocoa.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_grammar !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-grammar.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_lexique !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-lexique.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_options !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-options.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_program !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-program.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_semantics !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-semantics.galgas"]
  [[filewrapper projectCreationFileWrapper.PROJECT_syntax !projectName] writeToFile !galgas_sources_DIR +"/" +projectName +"-syntax.galgas"]
//---
   println (!"*** DONE ***")
}

//--------------------------------------------------------------------------------------------------

proc projectCreation ?let @string inProjectPath {
  if [inProjectPath count] > 0 then
    println (!"*** PERFORM PROJECT CREATION (--create-project=" + inProjectPath +" option) ***")
  //--- First check the project name is correct (not empty, only letters, digits and '_')
    let @string projectName = [inProjectPath lastPathComponent]
    var @bool ok = [[projectName characterAtIndex !0] isalpha]
    var @uint idx = 1
    loop ([projectName count])
    while (idx < [projectName count]) & ok do
      let @char c = [projectName characterAtIndex !idx]
      ok = [c isalnum] | (c == '_')
      idx += 1
    end
    if not ok then
      println (!"** Cannot create GALGAS project: the project name '"
        + projectName
        + "' should begin by a letter followed by zero, one or more letters, digits and underscore character.")
    end
    if ok then
      ok = not [inProjectPath directoryExists]
      if not ok then
        println (!"*** Cannot create GALGAS project: '" + inProjectPath +"' directory already exists.***")
      end
    end
    if ok then
      performProjectCreation (!inProjectPath )
    end
  end
}

//--------------------------------------------------------------------------------------------------

