#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#  Copyright (C) 2014, ..., 2014 Pierre Molinaro.                                                                      *
#                                                                                                                      *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                                                               *
#                                                                                                                      *
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                                                                                                      *
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                                                                                            *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

syntax galgas3DeclarationsSyntax (galgas3Scanner) {

#----------------------------------------------------------------------------------------------------------------------*

rule <declaration_with_private>
  ?let @bool inIsInternal
  ?!@galgas3DeclarationAST ioDeclarations

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#          Start symbol                                                                                                *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

rule <start_symbol>
 ?!@galgas3DeclarationAST ioDeclarations {
  repeat
  while
    $;$
  while
    <declaration> !?ioDeclarations
  end
}

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#          Rules prototypes                                                                                            *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

rule <formal_parameter_list> !@formalParameterListAST outFormalParameterList

rule <semantic_instruction_list> !@semanticInstructionListAST outInstructionsList

rule <formal_input_parameter_list> !@formalInputParameterListAST outFormalInputParameterList

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#    A T T R I B U T E    I N    C O L L E C T I O N                                                                   *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

rule <property_declaration> ?!@propertyInCollectionListAST ioAttributeInCollectionList {
  $type_name$ ?var  @lstring mAttributeTypeName
  $identifier$ ?var  @lstring mAttributeName
  var featureList =@lstringlist {}
  repeat
  while
    $attribute$ ?let @lstring featureName
    featureList += !featureName
  end
  ioAttributeInCollectionList +=
    !mAttributeTypeName
    !mAttributeName
    !featureList
}

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#    F I L E W R A P P E R    D E C L A R A T I O N                                                                    *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

#! Filewrapper Declaration

#----------------------------------------------------------------------------------------------------------------------*

rule <declaration_with_private>
  ?let @bool inIsInternal
  ?!@galgas3DeclarationAST ioDeclarations {
  $filewrapper$
  $identifier$ ?var  @lstring mFilewrapperName indexing filewrapperDefinition
  $in$
  $literal_string$ ?var  @lstring mFilewrapperPath
  ${$
  var filewrapperTextFileExtensionList =@lstringlist {}
  select
  or
    repeat
      $literal_string$ ?var @lstring pathExtension
      filewrapperTextFileExtensionList += !pathExtension
    while
      $,$
    end
  end
  $}$
  ${$
  var filewrapperBinaryFileExtensionList =@lstringlist {}
  select
  or
    repeat
      $literal_string$ ?var @lstring pathExtension
      filewrapperBinaryFileExtensionList += !pathExtension
    while
      $,$
    end
  end
  $}$
  ${$
  var mFilewrapperTemplateList =@filewrapperTemplateListAST {}
  repeat
  while
    $template$
    $identifier$ ?var  @lstring mFilewrapperTemplateName
    $literal_string$ ?var  @lstring mFilewrapperTemplatePath
    var filewrapperTemplateFormalInputParameters =@formalTemplateInputParameterListAST {}
    repeat
    while
      $?$ ?let selector
      $type_name$ ?var  @lstring typeName
      @bool isUnused
      select
        isUnused = false
      or
        $unused$
        isUnused = true
      end
      $identifier$ ?var  @lstring argumentName
      filewrapperTemplateFormalInputParameters += !selector !typeName !argumentName !isUnused
    end
    mFilewrapperTemplateList +=
      !mFilewrapperTemplateName
      !mFilewrapperTemplatePath
      !filewrapperTemplateFormalInputParameters
  end
  $}$
  ioDeclarations.mDeclarationList += !@filewrapperDeclarationAST.new {
    !false # Is not predefined
    !inIsInternal
    !@string. stringWithSourceFilePath
    !mFilewrapperName
    !mFilewrapperPath
    !filewrapperTextFileExtensionList
    !filewrapperBinaryFileExtensionList
    !mFilewrapperTemplateList}
}

#----------------------------------------------------------------------------------------------------------------------*

}