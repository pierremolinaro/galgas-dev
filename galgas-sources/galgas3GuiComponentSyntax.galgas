#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#  Copyright (C) 2014, ..., 2014 Pierre Molinaro.                                                                      *
#                                                                                                                      *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                                                               *
#                                                                                                                      *
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                                                                                                      *
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                                                                                            *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

syntax galgas3GuiComponentSyntax (galgas3Scanner) {

#----------------------------------------------------------------------------------------------------------------------*
#                                                                                                                      *
#   G U I    C O M P O N E N T                                                                                         *
#                                                                                                                      *
#----------------------------------------------------------------------------------------------------------------------*

rule <declaration> ?!@galgas3DeclarationAST ioDeclarations {
  $gui$
  $identifier$ ?let @lstring mGUIName
  ${$
  @lstringlist importedOptionList = {}
  @guiSimpleAttributeListAST simpleGlobalAttributes = {}
  @withLexiqueListAST withLexiqueList = {}
  repeat
  while
    <gui_attributes> !?simpleGlobalAttributes
  while
    <gui_with_option_declaration> !?importedOptionList
  while
    <gui_with_lexique_declaration> !?withLexiqueList
  end
#---
  $}$
  ioDeclarations.mGUIComponentList +=
    !mGUIName
    !importedOptionList
    !simpleGlobalAttributes
    !withLexiqueList
}

#----------------------------------------------------------------------------------------------------------------------*

rule <gui_with_lexique_declaration> ?!@withLexiqueListAST ioWithLexiqueList {
  $with$
  $lexique$
  $identifier$ ?var @lstring lexiqueReference
  @guiLabelListAST labels = {}
  @guiSimpleAttributeListAST simpleAttributes = {}
  @guiCompoundAttributeListAST compoundAttributes = {}
  ${$
  repeat
  while
    $label$
    @uint displayStyle
    select
      displayStyle = 0
    or
      $*$
      displayStyle = 1
    end
    @terminalLabelListAST terminalList = {}
    repeat
      $\$terminal\$$ ?let  @lstring terminal
      @uint displayFlags
      select
        displayFlags = 0 # Default
      or
        $-$
        displayFlags = 0xFFFF # Do not diplay
      or
        $($
        $uint32$ ?let @luint leadingStrip
        if leadingStrip.uint >= 15 then
          error leadingStrip:"leading strip should be < 15"
        end
        $,$
        $uint32$ ?let @luint endingStrip
        if endingStrip.uint >= 15 then
          error endingStrip:"tail strip should be < 15"
        end
        displayFlags = (leadingStrip.uint << 4) | endingStrip
       $)$
      end
      terminalList += !terminal !displayFlags
    while
      $,$
    end
    labels += !displayStyle !terminalList !@location.here
  while
    $identifier$ ?var @lstring key
    $"string"$ ?var @lstring name
    $:$
    var value =@lstring.new{!"" !@location.here}
    repeat
      $"string"$ ?var @lstring v
      value = @lstring.new {![value string] + [v string] ![v location]}
    while
    end
    compoundAttributes += !key !name !value
  while
    $identifier$ ?var @lstring name
    $:$
    $"string"$ ?var @lstring value
    simpleAttributes += !name !value
  end
  $}$
  ioWithLexiqueList +=  !lexiqueReference !labels !simpleAttributes !compoundAttributes
}

#----------------------------------------------------------------------------------------------------------------------*

rule <gui_with_option_declaration> ?!@lstringlist ioImportedOptionList {
  $with$
  $option$
  $identifier$ ?var @lstring optionReference
  ioImportedOptionList += !optionReference
}
#----------------------------------------------------------------------------------------------------------------------*

rule <gui_attributes> ?!@guiSimpleAttributeListAST ioSimpleGlobalAttributes {
  $identifier$ ?let @lstring mKey
  $:$
  var mValue = @lstring.new {!"" !.here}
  repeat
    $"string"$ ?var @lstring value
    mValue = @lstring.new {![mValue string] + [value string] ![value location]}
  while
  end
  ioSimpleGlobalAttributes += !mKey !mValue
}

#----------------------------------------------------------------------------------------------------------------------*

}