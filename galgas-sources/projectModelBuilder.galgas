#---------------------------------------------------------------------------*
#                                                                           *
#  'project' model builder                                                  *
#                                                                           *
#  Copyright (C) 2007, ..., 2011 Pierre Molinaro.                           *
#                                                                           *
#  e-mail : molinaro@irccyn.ec-nantes.fr                                    *
#                                                                           *
#  This program is free software; you can redistribute it and/or modify it  *
#  under the terms of the GNU General Public License as published by the    *
#  Free Software Foundation.                                                *
#                                                                           *
#  This program is distributed in the hope it will be useful, but WITHOUT   *
#  ANY WARRANTY; without even the implied warranty of MERCHANDIBILITY or    *
#  FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for *
#   more details.                                                           *
#                                                                           *
#---------------------------------------------------------------------------*

syntax projectModelBuilder (galgas_scanner)  %translate {

#---------------------------------------------------------------------------*

rule <project_component_start_symbol>
  !@projectComponentAST outProjectComponentAST

#---------------------------------------------------------------------------*

rule <project_component_start_symbol>
  !@projectComponentAST outProjectComponentAST {
  $project$
  $identifier$ ?let @lstring projectName :> ?* ?*
  $($
  $unsigned_literal_integer$ ?let @luint majorVersion
  $:$
  $unsigned_literal_integer$ ?let @luint minorVersion
  $:$
  $unsigned_literal_integer$ ?let @luint revisionVersion
  $)$
  $->$
  $literal_string$ ?var  @lstring targetName
  $:$ :> ?@string sep ?*
  send sep + "{"
  var projectSourceList =@projectSourceList.emptyList{}
  var generateFeatureList =@lstringlist.emptyList{}
  var qualifiedFeatureList =@qualifiedFeatureList. emptyList{}
  repeat
  while
    $feature$ :> ?@string sep ?*
    send sep
    select
      $identifier$ ?var  @lstring featureName :> ?* ?*
      send "%" + [featureName.string stringByReplacingStringByString !"_" !"-"]
      $:$
      $literal_string$ ?var  @lstring featureValue
      qualifiedFeatureList += !featureName !featureValue
    or
      $literal_string$ ?var  @lstring featureName :> ?* ?*
      var newName = [featureName.string stringByReplacingStringByString !"_" !"-"]
      if newName == "makefile-x86-64-linux-on-macosx" then
        newName = "makefile-x86linux64-on-macosx"
      elsif newName == "makefile-i386-linux-on-macosx" then # makefile_i386_linux_on_macosx
        newName = "makefile-x86linux32-on-macosx"
      elsif newName == "makefile-mingw-on-macosx" then # makefile_mingw_on_macosx
        newName = "makefile-win32-on-macosx"
      elsif newName == "makefile-msys-on-win32" then # makefile_msys_on_win32
        newName = "makefile-msys32-on-windows"
      end
      send "%" + newName
      generateFeatureList += !featureName
    end
    $;$ :> ?* ?*
  while
    @sourceFileKind sourceFileKind
    @lstring filePath
    select
      $extern$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      let extension = [filePath pathExtension]
      @string attribute
      if extension == "cpp" then
        attribute = "tool-source"
      elsif extension == "m" then
        attribute = "app-source"
      elsif extension == "mm" then
        attribute = "tool-source"
      elsif extension == "framework" then
        attribute = "tool-link"
      elsif extension == "xib" then
        attribute = "app-source"
      else
        error filePath : "unhandled extension" : attribute
      end
      send "%" + attribute + " : \"hand_coded_sources/" + filePath + "\""
      sourceFileKind = @sourceFileKind. externSourceFile
    or
      $gui$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. guiSourceFile
    or
      $lexique$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. lexiqueSourceFile
    or
      $option$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. optionSourceFile
    or
      $semantics$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. semanticsSourceFile
    or
      $syntax$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
       send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
     sourceFileKind = @sourceFileKind. syntaxSourceFile
    or
      $grammar$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. grammarSourceFile
    or
      $program$ :> ?let @string sep ?*
      send sep
      $literal_string$ ?filePath :> ?* ?*
      send "\"galgas-sources/" + [filePath stringByDeletingPathExtension] + ".galgas\""
      sourceFileKind = @sourceFileKind. programSourceFile
    end
    $;$ :> ?* ?*
    projectSourceList +=
      !sourceFileKind
      !filePath
  end
  $end$ :> ?sep ?*
  send sep + "}"
  outProjectComponentAST = @projectComponentAST. new {
    !projectSourceList
    !majorVersion
    !minorVersion
    !revisionVersion
    !generateFeatureList
    !qualifiedFeatureList
    !projectName
    !targetName
    !@location.here}
  $project$ :> ?* ?*
  $;$ :> ?* ?*
}

#---------------------------------------------------------------------------*

}