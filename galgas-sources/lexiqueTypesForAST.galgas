#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  'lexique' component metamodel            
#                                           
#  Copyright (C) 2007, ..., 2015 Pierre Molinaro.                                                                      *
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public   *
#  License as published by the Free Software Foundation.                                                               *
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied       *
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more        *
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @semanticDeclarationAST {
  public var @bool mIsPredefined
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @lexicalExpressionAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @lexicalInstructionAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalInstructionListAST {
  public var @lexicalInstructionAST mInstruction
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @metamodelTemplateDelimitorListAST {
  public var @lstring mStartString
  public var @lstringlist mOptionList
  public var @lstring mEndString
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @templateReplacementListAST {
  public var @lstring mMatchString
  public var @lstring mReplacementString
  public var @lstring mReplacementFunction
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @abstractLexicalRuleAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalRuleListAST {
  public var @abstractLexicalRuleAST mLexicalRule
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalImplicitRuleAST : @abstractLexicalRuleAST {
  public var @lstring mListName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalExplicitRuleAST : @abstractLexicalRuleAST {
  public var @lexicalExpressionAST mLexicalRuleExpression
  public var @lexicalInstructionListAST mInstructionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalMessageDeclarationListAST {
  public var @lstring mMessageName
  public var @lstring mMessageValue
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalAttributeListAST {
  public var @lstring mTypeName
  public var @lstring mName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalStyleListAST {
  public var @lstring mName
  public var @lstring mComment
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @terminalDeclarationListAST {
  public var @lstring mName
  public var @sentLexicalAttributeListAST mSentAttributeList
  public var @lstring mSyntaxErrorMessage
  public var @lstring mStyle # Empty string if no style
  public var @lstringlist mOptionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalListEntryListAST {
  public var @lstring mEntrySpelling
  public var @lstring mTerminalSpelling
  public var @lstringlist mAttributeList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @sentLexicalAttributeListAST {
  public var @lstring mFormalSelector
  public var @lstring mAttributeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalListDeclarationListAST {
  public var @lstring mName
  public var @lstring mStyle # Empty string if no style
  public var @lstring mSyntaxErrorMessage
  public var @sentLexicalAttributeListAST mSentAttributeList
  public var @lexicalListEntryListAST mEntryList  
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalOrExpressionAST : @lexicalExpressionAST {
  public var @lexicalExpressionAST mLeftOperand
  public var @lexicalExpressionAST mRightOperand
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalCharacterSetMatchAST : @lexicalExpressionAST {
  public var @lstring mCharacterSetName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalCharacterMatchAST : @lexicalExpressionAST {
  public var @lchar mCharacter
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalCharacterIntervalMatchAST : @lexicalExpressionAST {
  public var @lchar mLowerBound
  public var @lchar mUpperBound
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalStringMatchAST : @lexicalExpressionAST {
  public var @lstring mString
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalStringNotMatchAST : @lexicalExpressionAST {
  public var @lstring mString
  public var @lstring mErrorMessage
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalSendSearchListAST {
  public var @lstring mAttributeName
  public var @lstring mSearchListName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @lexicalSendDefaultActionAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalStructuredSendInstructionAST : @lexicalInstructionAST {
  public var @lexicalSendSearchListAST mLexicalSendSearchList
  public var @lexicalSendDefaultActionAST mLexicalSendDefaultAction
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalSimpleSendInstructionAST : @lexicalInstructionAST {
  public var @lstring mSentTerminal
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalSendTerminalByDefaultAST : @lexicalSendDefaultActionAST {
  public var @lstring mDefaultSentTerminal
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalErrorByDefaultAST : @lexicalSendDefaultActionAST {
  public var @lstring mDefaultErrorMessageName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalWhileBranchListAST {
  public var @lexicalExpressionAST mWhileExpression
  public var @lexicalInstructionListAST mWhileInstructionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalRepeatInstructionAST : @lexicalInstructionAST {
  public var @lexicalInstructionListAST mRepeatedInstructionList
  public var @lexicalWhileBranchListAST mLexicalWhileBranchList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalSelectBranchListAST {
  public var @lexicalExpressionAST mSelectExpression
  public var @lexicalInstructionListAST mSelectInstructionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalSelectInstructionAST : @lexicalInstructionAST {
  public var @lexicalSelectBranchListAST mLexicalSelectBranchList
  public var @lexicalInstructionListAST mDefaultInstructionList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @abstractLexicalRoutineActualArgumentAST {
  public var @location mActualPassingModeLocation
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalRoutineCallActualArgumentListAST {
  public var @abstractLexicalRoutineActualArgumentAST mLexicalRoutineActualArgument
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalRoutineInstructionAST : @lexicalInstructionAST {
  public var @lstring mRoutineName
  public var @lexicalRoutineCallActualArgumentListAST mActualArgumentList
  public var @lstringlist mErrorMessageList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalAttributeInputOutputArgumentAST : @abstractLexicalRoutineActualArgumentAST {
  public var @lstring mAttributeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract refclass @lexicalRoutineOrFunctionFormalInputArgumentAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalFormalInputArgumentAST : @abstractLexicalRoutineActualArgumentAST {
  public var @lexicalRoutineOrFunctionFormalInputArgumentAST mRoutineOrFunctionFormalInputArgument
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalFunctionCallActualArgumentListAST {
  public var @lexicalRoutineOrFunctionFormalInputArgumentAST mLexicalActualInputArgument
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalAttributeInputArgumentAST : @lexicalRoutineOrFunctionFormalInputArgumentAST {
  public var @lstring mAttributeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalCharacterInputArgumentAST : @lexicalRoutineOrFunctionFormalInputArgumentAST {
  public var @lchar mCharacter
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalUnsignedInputArgumentAST : @lexicalRoutineOrFunctionFormalInputArgumentAST {
  public var @luint mUnsigned
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalCurrentCharacterInputArgumentAST : @lexicalRoutineOrFunctionFormalInputArgumentAST {
  public var @location mLocation
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalFunctionInputArgumentAST : @lexicalRoutineOrFunctionFormalInputArgumentAST {
  public var @lstring mFunctionName
  public var @lexicalFunctionCallActualArgumentListAST mFunctionActualArgumentList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalDropInstructionAST : @lexicalInstructionAST {
  public var @lstring mTerminalName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

#valueclass @lexicalOptionInstructionAST : @lexicalInstructionAST {
#  @lstring mTerminalName
#}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalErrorInstructionAST : @lexicalInstructionAST {
  public var @lstring mErrorMessageName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalWarningInstructionAST : @lexicalInstructionAST {
  public var @lstring mWarningMessageName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalTagInstructionAST : @lexicalInstructionAST {
  public var @lstring mLexicalTagName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalRewindInstructionAST : @lexicalInstructionAST {
  public var @lstring mLexicalTagName
  public var @lstring mTerminalName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalLogInstructionAST : @lexicalInstructionAST {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @lexicalArgumentModeAST {
  case lexicalInputMode  case lexicalInputOutputMode
}

getter @lexicalArgumentModeAST lexicalFormalModeName -> @string {
  switch self
  case lexicalInputMode       : result = "!"
  case lexicalInputOutputMode : result = "?!"
  end
}

getter @lexicalArgumentModeAST cppConstInFormalArgument -> @string {
  switch self
  case lexicalInputMode       : result = "const "
  case lexicalInputOutputMode : result = ""
  end
}

getter @lexicalArgumentModeAST cppReferenceInFormalArgument -> @string {
  switch self
  case lexicalInputMode       : result = ""
  case lexicalInputOutputMode : result = " &"
  end
}

getter @lexicalArgumentModeAST cocoaPointerInFormalArgument -> @string {
  switch self
  case lexicalInputMode       : result = ""
  case lexicalInputOutputMode : result = " *"
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalExternRoutineFormalArgumentListAST {
  public var @lexicalArgumentModeAST mPassingMode
  public var @lstring mLexicalTypeName
  public var @lstring mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @externRoutineListAST {
  public var @lstring mRoutineName
  public var @lexicalExternRoutineFormalArgumentListAST mLexicalRoutineFormalArgumentList
  public var @stringlist mErrorMessageList
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalExternFunctionFormalArgumentListAST {
  public var @lstring mLexicalTypeName
  public var @lstring mFormalArgumentName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @externFunctionListAST {
  public var @lstring mFunctionName
  public var @lexicalExternFunctionFormalArgumentListAST mLexicalFunctionFormalArgumentList
  public var @lstring mReturnedTypeName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @indexingListAST {
  public var @lstring mIndexName
  public var @lstring mIndexComment
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexiqueComponentAST : @semanticDeclarationAST {
  public var @lstring mLexiqueComponentName
  public var @bool mIsTemplate
  public var @metamodelTemplateDelimitorListAST mTemplateDelimitorList
  public var @templateReplacementListAST mTemplateReplacementList
  public var @lexicalAttributeListAST mLexicalAttributeList
  public var @lexicalStyleListAST mLexicalStyleList
  public var @terminalDeclarationListAST mTerminalDeclarationList
  public var @lexicalMessageDeclarationListAST mLexicalMessageDeclarationList
  public var @lexicalListDeclarationListAST mLexicalListDeclarationList
  public var @lexicalRuleListAST mLexicalRuleList
  public var @externRoutineListAST mExternRoutineList
  public var @externFunctionListAST mExternFunctionList
  public var @indexingListAST mIndexingListAST
  public var @lstring mIndexingDirectory
  public var @lexicalFunctionListAST mLexicalFunctionListAST
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#           B U I L D    T E R M I N A L    M A P                                                                      *
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum @lexicalTypeEnum {
  case lexicalType_string
  case lexicalType_char
  case lexicalType_uint 
  case lexicalType_uint64
  case lexicalType_sint
  case lexicalType_sint64 
  case lexicalType_double
  case lexicalType_bigint
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

list @lexicalSentValueList {
  public var @lstring mLexicalFormalSelector
  public var @string mLexicalAttributeName
  public var @lexicalTypeEnum mLexicalType
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @terminalMap {
  public var @lexicalSentValueList mSentAttributeList
  insert insertKey error message "the '%K' terminal has been already declared in %L"
  search searchKey error message "the '%K' terminal is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#          B U I L D    L E X I C A L    T Y P E    M A P                                                              *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalTypeMap {
  public var @lexicalTypeEnum mLexicalType
  insert insertKey error message "the '@%K' lexical type is already declared in %L"
  search searchKey error message "there is no '@%K' lexical type"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func %once buildLexicalTypeMap
  ->@lexicalTypeMap outLexicalTypeMap
{
  outLexicalTypeMap = {}
  [!?outLexicalTypeMap insertKey !@lstring.new {!"string" !@location.here} !.lexicalType_string]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"char"   !@location.here} !.lexicalType_char]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"uint"   !@location.here} !.lexicalType_uint]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"uint64" !@location.here} !.lexicalType_uint64]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"sint"   !@location.here} !.lexicalType_sint]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"sint64" !@location.here} !.lexicalType_sint64]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"double" !@location.here} !.lexicalType_double]
  [!?outLexicalTypeMap insertKey !@lstring.new {!"bigint" !@location.here} !.lexicalType_bigint]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

map @lexicalAttributeMap {
  public var @lexicalTypeEnum mLexicalType
  insert insertKey error message "the '%K' lexical attribute has been already declared in %L"
  search searchKey error message "the '%K' lexical attribute is not declared"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   B U I L D    L E X I C A L    A T T R I B U T E    M A P                                                           *
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

proc buildLexicalAttributeMap
  ?let @lexicalTypeMap inLexicalTypeMap
  ?let @lexicalAttributeListAST inLexicalAttributeList
  ?!@lexicalAttributeMap ioLexicalAttributeMap {
  for (mTypeName mName) in inLexicalAttributeList do
    if [inLexicalTypeMap hasKey ![mTypeName string]] then
      [inLexicalTypeMap searchKey !mTypeName ?var @lexicalTypeEnum lexicalType]
      [!?ioLexicalAttributeMap insertKey !mName !lexicalType]
    else
      @string m = ""
      m += "the @" + mTypeName + " type is not a valid lexical attribute type; are allowed:"
      @bool firstLoop = true
      for (lkey mLexicalType) in inLexicalTypeMap do
        m += " @" + lkey
      between
        m += ","
      end
      error mTypeName: m
    end
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
