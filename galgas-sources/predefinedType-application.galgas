#—————————————————————————————————————————————————————————————————————————————————————————————————
#
#  Generate predefined types
#
#  Copyright (C) 2010, ..., 2023 Pierre Molinaro.
#
#  MIT License
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions
# of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
# TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
# CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.
#
#—————————————————————————————————————————————————————————————————————————————————————————————————

refclass @applicationPredefinedTypeAST : @predefinedTypeAST {

  #-----------------------------------------------------------------------------------------------

  override getter typeKind -> @typeKindEnum {
    result = .packageType
  }

  #-----------------------------------------------------------------------------------------------

  override getter cppDeclarationString -> @string {
    result = [filewrapper predefinedTypeGenerationTemplate.application_type]
  }

  #-----------------------------------------------------------------------------------------------

  override getter defaultInitializerName -> @string {
    result = "" // No default initializer
  }

  #-----------------------------------------------------------------------------------------------

  override getter getSupportedOperatorFlags -> @operators {
    result = .generateDescriptionGetterUtilityMethod
  }

  #-----------------------------------------------------------------------------------------------

  override method getClassFunctionMap ?!@unifiedTypeMap ioUnifiedTypeMap
                                      !@classFunctionMap outMap {
    outMap = {}
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"system"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"verboseOutput"
      !resultTypeName:"bool"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"projectVersionString"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"galgasVersionString"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"commandLineArgumentCount"
      !resultTypeName:"uint"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"commandLineArgumentAtIndex"
      !argTypeName:"uint"
      !argName:"inIndex"
      !resultTypeName:"string"
      !hasLexiqueArg:true
    )
  #--- Class functions for "bool" options
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"boolOptionNameList"
      !resultTypeName:"2stringlist"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"boolOptionInvocationCharacter"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"char"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"boolOptionInvocationString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"boolOptionCommentString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"boolOptionValue"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"bool"
      !hasLexiqueArg:false
    )
  #--- Class functions for "uint" options
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"uintOptionNameList"
      !resultTypeName:"2stringlist"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"uintOptionInvocationCharacter"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"char"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"uintOptionInvocationString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"uintOptionCommentString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"uintOptionValue"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"uint"
      !hasLexiqueArg:false
    )
  #--- Class functions for "string" options
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"stringOptionNameList"
      !resultTypeName:"2stringlist"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"stringOptionInvocationCharacter"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"char"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"stringOptionInvocationString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"stringOptionCommentString"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
    enterClassFunctionWith2Arguments (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"stringOptionValue"
      !argTypeName1:"string"
      !argName1:"inOptionComponentName"
      !argTypeName2:"string"
      !argName2:"inOptionName"
      !resultTypeName:"string"
      !hasLexiqueArg:false
    )
  #--- Class functions for lexical keyword lists
    enterClassFunctionWithoutArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"keywordIdentifierSet"
      !resultTypeName:"stringset"
      !hasLexiqueArg:false
    )
    enterClassFunctionWithArgument (
      !?outMap
      !?ioUnifiedTypeMap
      !name:"keywordListForIdentifier"
      !argTypeName:"string"
      !argName:"inIdentifier"
      !resultTypeName:"stringlist"
      !hasLexiqueArg:false
    )
  }

  #-----------------------------------------------------------------------------------------------

  override method getClassMethodMap ?!@unifiedTypeMap ioUnifiedTypeMap
                                    !@classMethodMap outClassMethodMap {
    outClassMethodMap = {}
    enterClassMethodWithInputArgument (
      !?outClassMethodMap
      !?ioUnifiedTypeMap
      !methodName: "exit"
      !argType: "uint"
      !argName: "inErrorCode"
      !compilerArgument:false
    )
    enterClassMethodWith3InputArguments (
      !?outClassMethodMap
      !?ioUnifiedTypeMap
      !methodName:"setBoolOptionValue"
      !argType1:"string"
      !argName1:"inDomain"
      !argType2:"string"
      !argName2:"inIdentifier"
      !argType3:"bool"
      !argName3:"inValue"
      !compilerArgument:false
    )
    enterClassMethodWith3InputArguments (
      !?outClassMethodMap
      !?ioUnifiedTypeMap
      !methodName:"setUIntOptionValue"
      !argType1:"string"
      !argName1:"inDomain"
      !argType2:"string"
      !argName2:"inIdentifier"
      !argType3:"uint"
      !argName3:"inValue"
      !compilerArgument:false
    )
    enterClassMethodWith3InputArguments (
      !?outClassMethodMap
      !?ioUnifiedTypeMap
      !methodName:"setStringOptionValue"
      !argType1:"string"
      !argName1:"inDomain"
      !argType2:"string"
      !argName2:"inIdentifier"
      !argType3:"string"
      !argName3:"inValue"
      !compilerArgument:false
    )
  }

  #-----------------------------------------------------------------------------------------------

}

#—————————————————————————————————————————————————————————————————————————————————————————————————

