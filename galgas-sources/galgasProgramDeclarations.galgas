#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#                                           
#  'program' component parser, as model builder  
#                                           
#  Copyright (C) 2007, ..., 2022 Pierre Molinaro.
#                                           
#  e-mail : pierre@pcmolinaro.name          
#                                           
#  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public
#  License as published by the Free Software Foundation.
#                                           
#  This program is distributed in the hope it will be useful, but WITHOUT ANY WARRANTY; without even the implied
#  warranty of MERCHANDIBILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#  details.                                 
#                                           
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax galgas3ProgramDeclarations (galgasScanner) {

  #·····················································································································

  rule <semantic_instruction_list_ggs3> !@semanticInstructionListAST outInstructionsList

  #·····················································································································
  #   P R O L O G U E                         
  #·····················································································································

  rule <declaration_ggs3> ?!@galgasDeclarationAST ioDeclarations {
    $before$
    ${$
    <semantic_instruction_list_ggs3> ?let @semanticInstructionListAST prologueInstructionList
    let endOfPrologue = @location.here
    $}$
    ioDeclarations.mPrologueDeclarationList +=
      !prologueInstructionList
      !endOfPrologue
  }

  #·····················································································································
  #   E P I L O G U E                         
  #·····················································································································

  rule <declaration_ggs3> ?!@galgasDeclarationAST ioDeclarations {
    $after$
    ${$
    <semantic_instruction_list_ggs3> ?let @semanticInstructionListAST prologueInstructionList
    let endOfPrologue = @location.here
    $}$
    ioDeclarations.mEpilogueDeclarationList +=
      !prologueInstructionList
      !endOfPrologue
  }

  #·····················································································································
  #   S O U R C E    R U L E                  
  #·····················································································································

  rule <declaration_ggs3>
   ?!@galgasDeclarationAST ioDeclarations {
    $case$
    $.$
    $"string"$ ?let @lstring mSourceFileExtension
    $%errorMessage$
    $"string"$ ?let @lstring mSourceFileHelp
  #--- Reference grammar
    let @lstring referenceGrammar
    select
      referenceGrammar = ["" nowhere]
    or
      $%useGrammar$
      $identifier$ ?referenceGrammar
    end
  #--- Source file
    $?$ ?let selector
    if selector.string != "sourceFilePath" then
      error selector : "the selector should be '?sourceFilePath:'" fixit { %replaceBy "?sourceFilePath:" }
    end
    select
    or
      $@type$ ?let typeName
      if typeName.string != "lstring" then
        error typeName : "the only type allowed here is '@lstring'"
      end
    end
    let @bool isUnused
    select
      isUnused = false
    or
      $unused$
      isUnused = true
    end
    $identifier$ ?let @lstring mSourceFileVariableName
  #---
    ${$
    <semantic_instruction_list_ggs3> ?let @semanticInstructionListAST mInstructionList
    let endOfInstructionList = @location.here
    $}$
    ioDeclarations.mSourceRuleList +=
      !mSourceFileExtension
      !mSourceFileHelp
      !mSourceFileVariableName
      !isUnused
      !referenceGrammar
      !mInstructionList
      !endOfInstructionList
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax galgas4ProgramDeclarations (galgasScanner) {

  #·····················································································································

  rule <semantic_instruction_list> ?!@galgasDeclarationAST unused ioDeclarations
                                   ?!@stringset ioUserImplicitDeclaredTypeSet
                                   !@semanticInstructionListAST outInstructionsList

  #·····················································································································
  #   P R O L O G U E                         
  #·····················································································································

  rule <declaration> ?!@galgasDeclarationAST ioDeclarations
                     ?!@stringset ioUserImplicitDeclaredTypeSet {
    $before$
    ${$
    <semantic_instruction_list> !?ioDeclarations !?ioUserImplicitDeclaredTypeSet ?let @semanticInstructionListAST prologueInstructionList
    let endOfPrologue = @location.here
    $}$
    ioDeclarations.mPrologueDeclarationList +=
      !prologueInstructionList
      !endOfPrologue
  }

  #·····················································································································
  #   E P I L O G U E                         
  #·····················································································································

  rule <declaration> ?!@galgasDeclarationAST ioDeclarations
                     ?!@stringset ioUserImplicitDeclaredTypeSet {
    $after$
    ${$
    <semantic_instruction_list> !?ioDeclarations !?ioUserImplicitDeclaredTypeSet ?let @semanticInstructionListAST prologueInstructionList
    let endOfPrologue = @location.here
    $}$
    ioDeclarations.mEpilogueDeclarationList +=
      !prologueInstructionList
      !endOfPrologue
  }

  #·····················································································································
  #   S O U R C E    R U L E                  
  #·····················································································································

  rule <declaration> ?!@galgasDeclarationAST ioDeclarations
                     ?!@stringset ioUserImplicitDeclaredTypeSet {
    $case$
    $.$
    $"string"$ ?let @lstring mSourceFileExtension
    $%errorMessage$
    $"string"$ ?let @lstring mSourceFileHelp
  #--- Reference grammar
    let @lstring referenceGrammar
    select
      referenceGrammar = ["" nowhere]
    or
      $%useGrammar$
      $identifier$ ?referenceGrammar
    end
  #--- Source file
    $?$ ?let selector
    if selector.string != "sourceFilePath" then
      error selector : "the selector should be '?sourceFilePath:'" fixit { %replaceBy "?sourceFilePath:" }
    end
    select
    or
      $@type$ ?let typeName
      if typeName.string != "lstring" then
        error typeName : "the only type allowed here is '@lstring'"
      end
    end
    let @bool isUnused
    select
      isUnused = false
    or
      $unused$
      isUnused = true
    end
    $identifier$ ?let @lstring mSourceFileVariableName
  #---
    ${$
    <semantic_instruction_list> !?ioDeclarations !?ioUserImplicitDeclaredTypeSet ?let @semanticInstructionListAST mInstructionList
    let endOfInstructionList = @location.here
    $}$
    ioDeclarations.mSourceRuleList +=
      !mSourceFileExtension
      !mSourceFileHelp
      !mSourceFileVariableName
      !isUnused
      !referenceGrammar
      !mInstructionList
      !endOfInstructionList
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
