#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! AST
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

refclass @lexicalWarningInstructionAST : @lexicalInstructionAST {
  private let @lstring mWarningMessageName
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! SYNTAX
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas3LexiqueComponentSyntax {

  #·····················································································································

  rule <lexical_instruction> ?!@lexicalInstructionListAST ioInstructionList {
    $warning$
    $identifier$ ?let warningMessageName
    ioInstructionList += !@lexicalWarningInstructionAST.new {!warningMessageName}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

syntax extension galgas4LexiqueComponentSyntax {

  #·····················································································································

  rule <lexical_instruction> ?!@lexicalInstructionListAST ioInstructionList {
    $warning$
    $identifier$ ?let warningMessageName
    ioInstructionList += !@lexicalWarningInstructionAST.new {!warningMessageName}
  }

  #·····················································································································

}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! CHECK LEXICAL INSTRUCTION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override method @lexicalWarningInstructionAST checkLexicalInstruction
  ?!@lexiqueAnalysisContext ioLexiqueAnalysisContext
  ?!@lexicalTagMap unused ioTagMap {
  [!?ioLexiqueAnalysisContext.mLexicalMessageMap setMMessageIsUsedForKey !true !self.mWarningMessageName.string]
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! COCOA GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalWarningInstructionAST generateObjcCocoaInstructionCode
  ?let @string unused inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string outGeneratedCode {
  outGeneratedCode = "" # No generated code
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalWarningInstructionAST generateSwiftCocoaInstructionCode
  ?let @string unused inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string outGeneratedCode {
  outGeneratedCode = "" # No generated code
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#! C++ CODE GENERATION
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

override getter @lexicalWarningInstructionAST lexicalInstructionUsesLoopLocalVariable -> @bool {
  result = false
}

#······················································································································

override getter @lexicalWarningInstructionAST generateLexicalInstructionCode
  ?let @string inScannerClassName
  ?let @lexiqueAnalysisContext unused inLexiqueAnalysisContext
  -> @string {
  result = "lexicalWarning (gLexicalMessage_" + inScannerClassName + "_" + self.mWarningMessageName + " COMMA_LINE_AND_SOURCE_FILE) ;\n"
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

