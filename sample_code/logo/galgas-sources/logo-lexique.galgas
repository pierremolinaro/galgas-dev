lexique logo_lexique {

indexing routineDefinition : "Routine Definition"
indexing routineCall : "Routine call"

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Identifiers and keywords                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

@string tokenString

style keywordsStyle -> "Keywords"

$identifier$ ! tokenStringerror message"an identifier"

#--- This is the keyword list
list keyWordList style keywordsStyleerror message"the '%K' keyword" {
  "PROGRAM", "ROUTINE", "BEGIN", "END", "FORWARD",
  "ROTATE",  "CALL",    "PEN",   "UP",  "DOWN"
}

rule 'a'->'z' |  'A'->'Z' {
  repeat
    enterCharacterIntoString (!?tokenString !*)
  while 'a'->'z' | 'A'->'Z' | '_' | '0'->'9' :
  end
  send %codeFor tokenString in keyWordList default $identifier$
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Literal decimal integers                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

style integerStyle -> "Integer Constants"
@uint uint32value
$integer$ !uint32value style integerStyleerror message"a 32-bit unsigned decimal number"

%errorMessage decimalNumberTooLarge : "decimal number too large"
%errorMessage internalError : "internal error"

rule '0'->'9' {
  enterCharacterIntoString (!?tokenString !*)
  repeat
  while '0'->'9' :
    enterCharacterIntoString (!?tokenString !*)
  while '_' :
  end
  convertDecimalStringIntoUInt (!tokenString !?uint32value error decimalNumberTooLarge, internalError)
  send $integer$
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Literal character strings               
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

style stringStyle -> "String Constants"
$"string"$ ! tokenString style stringStyle %nonAtomicSelectionerror message"a character string constant \"...\""


%errorMessage incorrectStringEnd : "string does not end with '\"'"

rule '"' {
  repeat
   while ' ' | '!' | '#'-> '\uFFFD' :
    enterCharacterIntoString (!?tokenString !*)
  end
  select
  case '"' :
    send $"string"$
  default
    error incorrectStringEnd
  end
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Delimiters                              
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

style delimitersStyle -> "Delimiters"
list delimitorsList style delimitersStyleerror message"the '%K' delimitor" {
  ".", ";"
}

rule list delimitorsList

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Comments                                
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

style commentStyle -> "Comments"
$comment$ style commentStyle %nonAtomicSelectionerror message"a comment"
rule '#' {
  repeat
  while '\u0001' -> '\u0009' | '\u000B' | '\u000C' | '\u000E' -> '\uFFFD' :
  end
  drop $comment$
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#   Separators                              
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

rule '\u0001' -> ' ' {
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

}

