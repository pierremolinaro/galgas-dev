#----------------------------------------------------------------------------*#                                                                            *
# COMPILATION OF THIS FILE FAILS : the grammar is ambiguous.                 *#  This file shows the dangling else problem.                                *#                                                                            *# From the book "COMPILATEURS, principes, techniques et outils", by Alfred   *# Aho, Ravi Sethi, Jeffrey Ullman, page 280, grammaire 4.24.                 *#                                                                            *#----------------------------------------------------------------------------*#----------------------------------------------------------------------------*#  S C A N N E R                                                             *#----------------------------------------------------------------------------*lexique dangling_else_pb_scanner :#--- Key wordslist keyWordList error message "the '%K' key word" : "I", # IF EXPR THEN "E", # ELSE "O" ; # OTHER
rule list keyWordList ;

#--- Identifiers$id$ error message "an identifier" ;

@string identifierString ;

rule 'a'->'z' | 'A'->'Z' :  enterCharacterIntoString !?identifierString !toLower (!*) ;  send search identifierString in keyWordList default $id$ ;end rule ;

#--- Delimitorslist delimitorsList error message "the '%K' delimitor" :  "+" , "*", "(", ")" ;rule list delimitorsList ;
# --------------------- separators -----------------------------------------rule '\u0001' -> ' ' :end rule ;end lexique ;#----------------------------------------------------------------------------*#  P A R S E R                                                               *#----------------------------------------------------------------------------*syntax dangling_else_pb_parser :import lexique dangling_else_pb_scanner ;nonterminal <S> ;rule <S> : # Other instruction  $O$ ;end rule ;rule <S> : # IF EXPR THEN <instruction>  $I$ ;  <S> ;end rule ;rule <S> : # IF EXPR THEN <instruction> ELSE <instruction>  $I$ ;  <S> ;  $E$ ;  <S> ;end rule ;end syntax ;#----------------------------------------------------------------------------*#  G R A M M A R                                                             *#----------------------------------------------------------------------------*grammar dangling_else_pb_grammar "" : # Try LL(1), SLR and LR (1)# As this grammar is ambiguous, compiling the component fails.  import lexique dangling_else_pb_scanner ;  import syntax dangling_else_pb_parser ;  root <S> ;end grammar ;#--------------------------------------------------------------------------------*